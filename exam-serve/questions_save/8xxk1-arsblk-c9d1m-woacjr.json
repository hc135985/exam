{"questions_stem":"国家有重要的任务要托付给你：完成间谍函数 spy，它可以潜伏到任何一个函数当中，监听它们的所有活动。spy 接受一个函数作为参数，返回一个被间谍潜伏以后的函数。\n```\nlet america = (a, b) => a + b\n\namerica = spy(america)\namerica(1, 2) // => 3\n```\nspy 返回的函数和原来的函数的功能一样，但是它悄悄记录了每一次执行的参数和执行结果，都存放到一个 calls 数组里面：\n```\namerica(1, 2)\namerica(3, 4)\n\namerica.calls[0].args // => [1, 2]\namerica.calls[0].result // => 3\n\namerica.calls[1].args // => [3, 4]\namerica.calls[1].result // => 7\n```\n注意，spy 可以支持潜伏到对象方法当中：\n```\nlet user = {\n  name: 'Jerry',\n  getName () {\n    return this.name\n  }\n}\n\nuser.getName = spy(user.getName)\nuser.getName() // => 'Jerry'\nuser.getName.calls[0].result // => 'Jerry'\n```\n另外，不要修改被 spy 的函数（你应该返回一个全新的函数），否则会被敌人发现。","questions_answer":"敬请期待","questions_id":"8xxk1-arsblk-c9d1m-woacjr"}