[{"title":"commonjs规范","questions_id":"ayf32j-5kv76-qvfqh-cigaoo","json_path":"ayf32j-5kv76-qvfqh-cigaoo.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"请简述node环境下的commonjs规范（说出如何导出模块，如何引入模块，如何创建模块）？","student_answer":"引入模块：require(moudlePath(引入路径))\n创建模块：const hello = () => {}\n导出模块：module.exports.hello = hello"},{"title":"let和var的区别","questions_id":"h7f6hq-cezl0g-fyu3o-6onwjf","json_path":"h7f6hq-cezl0g-fyu3o-6onwjf.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"在声明变量的时候，使用`let`和`var`有什么区别呢？","student_answer":"var定义以后可以修改，不初始化会输出undefined，不会报错。let未定义就输出则会报错\nlet可以产生块级作用域；\nvar有声明提升let没有\nlet不允许在相同作用域内，重复声明同一个变量。\nlet : 变量只能声明一次\nvar : 变量可以多次声明\n比如： var a = 5;\n  var a = 3;\n  let b = 2;\n  let b = 4;  \n  console.console.log(a);\n  console.console.log(b);  // Identifier 'b' has already been declared"},{"title":"解构赋值和数组的map方法","questions_id":"izvfy-572mw-thxrmm-7aba5s","json_path":"izvfy-572mw-thxrmm-7aba5s.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"如下：是一段html结构\n```   \n    <ul>\n        <li key=\"1\"></li>\n        <li key=\"2\"></li>\n        <li key=\"3\"></li>\n        <li key=\"4\"></li>\n    </ul>\n```\n加载一段对应的javaScript代码\n\n```\n        let oUl = document.getElementsByTagName('ul')[0];\n        let li = document.getElementsByTagName('li');\n        const {map,forEach} = [];\n        li = map.call(li,item=>{\n            let key = 2 * item.getAttribute('key') - 1;\n            item.setAttribute('key',key);\n            return item;\n        });\n        oUl.innerHTML = '';\n        forEach.call(li,item=>{\n            oUl.appendChild(item);\n        })\n```\n\n请结合html和javaScript描述出这段代码的运行效果，并给每句代码添加注释，在注释中指明该句代码的含义","student_answer":" <ul>\n        <li key=\"1\"></li>\n        <li key=\"2\"></li>\n        <li key=\"3\"></li>\n        <li key=\"4\"></li>\n    </ul>\n加载一段对应的javaScript代码\n\n        let oUl = document.getElementsByTagName('ul')[0];//找到父元素ul\n        let li = document.getElementsByTagName('li');//找到名为li的标签\n        const {map,forEach} = [];\n        li = map.call(li,item=>{//map遍历找到li的标签里面的每一项（item为li下面的每一项）\n            let key = 2 * item.getAttribute('key') - 1;//获取li下面的每一项的自定义属性key的内容*2再减去1赋值给key\n            item.setAttribute('key',key);//设置每一项自定义属性为赋值的key\n            return item;//返回每一项\n        });\n        oUl.innerHTML = '';//把父元素初始化清空\n        forEach.call(li,item=>{//forEach遍历li找的每一项\n            oUl.appendChild(item);//再追加每一项到父元素\n        })"},{"title":"async配合transition实现自定义动画","questions_id":"bqq54a-jly2z9-m9fg7pj-oio193","json_path":"bqq54a-jly2z9-m9fg7pj-oio193.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"html结构\n```html\n<div id=\"box\"></div>\n```\ncss样式\n```css\n#box{\n  width:100px; height:100px; background-color:red; border-radius:50%; transition:transform 0.5s;\n}\n```\njavaScript代码\n```js\n        const oBox = document.getElementById('box');\n        oBox.addEventListener('transitionend',()=>{\n            let {x,y} = oBox;\n            moveTo.reslove({x,y});\n        },false);\n        function moveTo(x,y){\n            return new Promise((reslove,reject)=>{\n                moveTo.reslove = reslove;\n                oBox.x = x;\n                oBox.y = y;\n                oBox.style.transform = `translate(${x}px,${y}px)`;\n            })\n        }\n```\n\n补全以上代码，使点击oBox后，使oBox走出一个  W 的轨迹（使用async函数实现），并简单写出整体的代码思路。","student_answer":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <style>\n        #box {\n            width: 100px;\n            height: 100px;\n            background-color: red;\n            border-radius: 50%;\n            transition: transform 0.5s;\n        }\n    </style>\n</head>\n\n<body>\n    <div id=\"box\"></div>\n    <button id=\"btn\">点击</button>\n    <script>\n        const oBox = document.getElementById('box');\n        const btn = document.getElementById(\"btn\")\n        console.log(btn)\n        oBox.addEventListener('transitionend', () => {\n            let {\n                x,\n                y\n            } = oBox;\n            moveTo.reslove({\n                x,\n                y\n            });\n        }, false);\n\n        function moveTo(x, y) {\n            return new Promise((reslove, reject) => {\n                moveTo.reslove = reslove;\n                oBox.x = x;\n                oBox.y = y;\n                oBox.style.transform = `translate(${x}px,${y}px)`;\n            })\n        }\n        const wPosition = [{\n            x: 0,\n            y: 0\n        }, {\n            x: 200,\n            y: 300\n        }, {\n            x: 400,\n            y: 0\n        }, {\n            x: 600,\n            y: 300\n        }, {\n            x: 800,\n            y: 0\n        },]\n        btn.onclick = async () => {\n            for (let v of wPosition) {\n                await moveTo(v.x, v.y)\n\n            }\n        }\n    </script>\n</body>\n\n</html>"},{"title":"输入的reduce方法","questions_id":"zyocwi-drka9-kx8vv-blrmw9p","json_path":"zyocwi-drka9-kx8vv-blrmw9p.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"现在有一个数组如下：\n```js\n    const car = [\n            {\n                groupName:'水果',\n                type:[\n                    {\n                        name:'苹果',\n                        price:10\n                    },\n                    {\n                        name:'橘子',\n                        price:40\n                    },\n                    {\n                        name:'香蕉',\n                        price:90\n                    }\n                ]\n            },\n            {\n                groupName:'蔬菜',\n                type:[\n                    {\n                        name:'芹菜',\n                        price:10\n                    },\n                    {\n                        name:'菠菜',\n                        price:15\n                    },\n                    {\n                        name:'土豆',\n                        price:8\n                    }\n                ]\n            }\n        ]\n```\n\n根据上述数据，编写一个函数，该函数(computedPrice)接收上述的数据作为参数，返回一个对象，请输入用数组的reduce方法实现。对象的格式如下\n\n```js\n       {\n            allPrice:所有商品的总价格,\n            group:[\n                {\n                    typeName:'水果',\n                    price:所有水果的总价格\n                },\n                {\n                    typeName:'蔬菜',\n                    price:所有蔬菜的总价格\n                }\n            ]\n        } \n```  ","student_answer":" const car = [{\n            groupName: '水果',\n            type: [{\n                name: '苹果',\n                price: 10\n            }, {\n                name: '橘子',\n                price: 40\n            }, {\n                name: '香蕉',\n                price: 90\n            }]\n        }, {\n            groupName: '蔬菜',\n            type: [{\n                name: '芹菜',\n                price: 10\n            }, {\n                name: '菠菜',\n                price: 15\n            }, {\n                name: '土豆',\n                price: 8\n            }]\n        }]\n        let sum = 0;\n        let num = 0;\n        car[0].type.map(item => {\n            sum += item.price\n\n        })\n        car[1].type.map(item => {\n            num += item.price\n\n        })\n        console.log(sum)\n        console.log(num)\n        let obj = {\n            allPrice: 所有商品的总价格,\n            group: [{\n                typeName: `${sum}`,\n                price: 所有水果的总价格\n            }, {\n                typeName: `${num}`,\n                price: 所有蔬菜的总价格\n            }]\n        }\n        console.log(obj)\n            //根据上述数据， 编写一个函数， 该函数(computedPrice) 接收上述的数据作为参数， 返回一个对象， 请输入用数组的reduce方法实现。 对象的格式如下\n            // {\n            //     allPrice: 所有商品的总价格,\n            //         group: [{\n            //             typeName: '水果',\n            //             price: 所有水果的总价格\n            //         }, {\n            //             typeName: '蔬菜',\n            //             price: 所有蔬菜的总价格\n            //         }]\n            // }"}]