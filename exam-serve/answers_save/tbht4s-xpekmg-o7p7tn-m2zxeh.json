[{"title":"computed 和 watch 区别","questions_id":"joo9h2-q79phw-pskuido-ua4t7k","json_path":"joo9h2-q79phw-pskuido-ua4t7k.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"computed 和 watch 区别?\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"computed:可以关联多个计算的对象，其中一个改变时都会出发这个属性，具有缓存能力，来存储需要处理的数据值，它有存储的机制，只有改变时才执行\nwatch ：主要是监听数据变化，可以监听数据有props,data,computed内的数据"},{"title":"实现双向数据绑定","questions_id":"nodsz-nme56x-51nrc-tklsfn","json_path":"nodsz-nme56x-51nrc-tklsfn.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"使用js实现一个数据双向绑定效果, input中输入的内容同步到p标签中\n```\n<div id=\"app\">\n    <input type=\"text\" id=\"txt\">\n    <p id=\"show-txt\"></p>\n</div>\n```","student_answer":"var obj = {}\n    var ipt = document.querySelector('#txt')\n    var text = document.querySelector('#show-txt')\n    Object.defineProperty(obj,'name',{\n      configurable:true,\n      enumerable:true,\n      get:()=>{\n        return newVal\n      },\n      set:(newVal)=>{\n        console.log(newVal)\n        ipt.value = newVal\n        text.innerHTML = newVal\n      }\n    })\n    ipt.addEventListener('input',(e)=>{\n      obj.name = e.target.value\n    })\n\n    function con(arr) {\n      console.log(arr)\n    }\n\n    let list = [1, 2, 3, 4, 5, 6, 7, 8]\n\n    con.call(null, list)\n\n\n    var productItems = [\"a\", \"b\", \"c\", \"d\"];\n\n    var indexs = [1, 2, 3,];\n    \n    productItems.sort(function (a, b) { return b - a });\n\n    indexs.forEach(function (index) { productItems.splice(index, 1) })\nvar obj = {};\n    Object.defineProperty(obj,'name'{\n        set:function(val){\n            document.getElementById('show-txt').innerHTML = val;\n            document.getElementById('txt').value = val;\n        }\n    });\n    document.getElementById('show-txt').onkeyup = function(e){\n        obj.hello = e.target.value;\n    };\n    obj.hello = \"\";\n"},{"title":"Vue导航守卫做鉴权处理","questions_id":"42cuvb-7216fb-zlkab2-wwns3d","json_path":"42cuvb-7216fb-zlkab2-wwns3d.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"wbxm4-jf8q6k-lvt2ca-ze96mg","exam_name":"月考","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 在Vue中我们可以使用导航守卫做鉴权，现有要求如下：  \n可以根据getToken()是否返回token判断  \n- 1.如果用户已经登陆  \n  - a. 如果用户要去/login页面，则重定向到/路径  \n  - b. 如果用户要去其他页面，则不做处理直接跳转    \n- 2.如果用户未登陆  \n  - a. 如果用户要去的页面在白名单内，则不做处理直接跳转  \n  - b. 如果用户要去的页面不在白名单内，则重定向到/login页面，并把要去的页面路径作为查询字符串的query的值\n\n```js\nimport router from './router'\nimport { getToken } from '@/utils/auth' // getToken from cookie\n\nconst whiteList = ['/login', '/register', '/auth-redirect']// no redirect whitelist\n\nrouter.beforeEach((to, from, next) => {\n  if (getToken()) { // determine if there has token\n    // write your code here\n  } else {\n    // write your code here\n  }\n})\n```","student_answer":"<template>\n  <div>\n    <input type=\"text\" v-model=\"loginForm.username\" placeholder=\"用户名\"/>\n    <input type=\"text\" v-model=\"loginForm.password\" placeholder=\"密码\"/>\n    <button @click=\"login\">登录</button>\n  </div>\n</template>\n<script>\nimport router from './router'\nimport { getToken } from '@/utils/auth' // getToken from cookie\nexport default {\n  data () {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      userToken: ''\n    };\n  },\n \n  methods: {\n    ...mapMutations(['changeLogin']),\n    login () {\n      let _this = this;\n      if (this.loginForm.username === '' || this.loginForm.password === '') {\n        alert('账号或密码不能为空');\n      } else {\n        this.axios({\n          method: 'post',\n          url: '/user/login',\n          data: _this.loginForm\n        }).then(res => {\n          console.log(res.data);\n          _this.userToken = 'Bearer ' + res.data.data.body.token;\n          _this.changeLogin({ Authorization: _this.userToken });\n          _this.$router.push('/home');\n          alert('登陆成功');\n        }).catch(error => {\n          alert('账号或密码错误');\n          console.log(error);\n        });\n      }\n    }\n  }\n};\n</script>"},{"title":"Vue基础知识","questions_id":"uecyx-3qim4-rwk9o-v43sj8","json_path":"uecyx-3qim4-rwk9o-v43sj8.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"wbxm4-jf8q6k-lvt2ca-ze96mg","exam_name":"月考","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 谈谈对Vue响应原理的理解?","student_answer":"Vue对象,对其数据属性遍历，通过Object.defineProperty()给数据对象添加setter  getter，并对模板做编译生成指令对象，每个指令对象绑定一个watcher对象，然后对数据赋值的时候就会触发setter，watcher对其再次求值，如果值确实发生变化了，就会通知相应的指令，调用指令的update方法"}]