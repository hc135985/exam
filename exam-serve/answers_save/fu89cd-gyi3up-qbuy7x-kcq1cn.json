[{"title":"匿名自执行函数的应用","questions_id":"vh80e-3d3g3o-6hy47e-ib2x4c","json_path":"vh80e-3d3g3o-6hy47e-ib2x4c.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"heinan","user_id":"fdjfr-msxp8a","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"代码如下：\n```js\nfor (var i = 0; i < 5; i++) {\n    setTimeout(function () {\n        console.log(i)\n    })\n}\n输出\n5\n5\n5\n5\n5\n```\n修改上面代码，打印结果要求为：0,1，2，3，4","student_answer":"for(var i = 0; i < 5; i++) {\n    (function(i) {\n        setTimeout(function () {\n            console.log(i);\n        });\n    })(i)\n}\n//输出0，1, 2, 3, 4"},{"title":"react生命周期","questions_id":"xt05yo-prna5g-f7zqo-ltl5rh","json_path":"xt05yo-prna5g-f7zqo-ltl5rh.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"dingshaoshan","user_id":"ypay2t-7uxsd","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"# react常用生命周期图\n\n## 请在 “其他“ 中查看图片。 \n \n\n\n如图是react常用生命周期图，请阅读图，并在1，2，3，4处填写对应的生命周期","student_answer":"shouldComponentUpdate\ncomponentDidMount\ncomponentDidUpdate"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"React创建组件的三种方式及其区别\n函数式定义的无状态组件 \n\t特点:无状态函数式组件形式上表现为一个只带有一个render方法的组件类，通过函数形式或者ES6 arrow function的形式在创建，并且该组件是无state状态\n  \t区别: (1).无状态组件创建形式使代码的可读性更好\n       (2).组件不会被实例化，整体渲染性能得到提升\n       (3).组件不能访问this对象\n       (4).组件无法访问生命周期的方法\n       (5).无状态组件只能访问输入的props\nES5原生方式 React.createClass 定义的组件\n\t特点:React.createClass创建的组件，其每一个成员函数的this都有React自动绑定，任何时候使用，直接使用this.method即可，函数中的this会被正确设置。\n\t\t与无状态组件相比，React.createClass是创建有状态的组件，这些组件是要被实例化的，并且可以访问组件的生命周期方法。\n\t区别:(1)React.createClass会自动绑定函数的方法，导致不必要的性能开销，增加代码过时的可能性\n   \t\t(2)React.createClass的mixins不够自然直接\n\t\t (3)React.createClass 创建的组件，其状态state是通过getInitialState方法来配置组件相关的状态；\n    \t(4)React.createClass在创建组件时可以使用mixins属性，以数组的形式来混合类的集合。\nES6形式的 extends React.Component 定义的组件\n\t特点:React.Component 是以ES6的形式来创建react的组件的，是React目前极为推荐的创建有状态组件的试\n\t区别:(1)React.Component创建的组件，其成员函数不会自动绑定this，需要开发者手动绑定，否则this不能获取当前组件的实例对象\n\t\t (2)React.Component绑定this的三种方法：\n        在构造函数constructor中绑定：this.methods=this.methods.bind(this)\n        在调用函数时绑定： onClick={this.handleClick.bind(this)}\n        使用箭头函数来绑定：onClick={()=>this.handleClick()}\n      (3)React.Component在创建组件时配置这两个对应信息时，他们是作为组件类的属性，不是组件实例的属性，也就是所谓的类的静态属性来配置的\n\t\t(4)React.Component创建的组件，其状态state是在constructor中像初始化组件属性一样声明的。\n注意:能用React.Component创建的组件的就尽量不用React.createClass形式创建组件。"},{"title":"分别使用DOM0级DOM2级给一个DIV绑定事件","questions_id":"1gsxn-k09c2j-gq8peo-sohe9","json_path":"1gsxn-k09c2j-gq8peo-sohe9.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"分别使用DOM0级DOM2级给一个button绑定事件，并且描述这两种方式的区别","student_answer":"DOM0级绑定事件  语法:element.onclick=function(){}\n\t代码:btn.onclick=function(){\n      console.log(\"我是dom0级事件\")\n    }\n\t特点:(1).DOM0级发事件冒泡阶段不能触发事件捕获阶段。\n\t\t (2).同一元素绑定相同的事件，后面的会覆盖前面的\n\t\t (3).this指的是事件流传播到的这个元素，就元素本身。\n\t\t (4).每个属性只能绑定一个事件\nDOM2级绑定事件  语法:element.addEventListener('事件类型',‘事件处理函数',true/false);(true表示捕获，false表示冒泡,不填时默认为false)\n   代码:box2.addEventListener(\"click\",function(){\n\t\t\t\tconsole.log(\"我是dom2级事件\")\n\t\t},false);                          \n\t特点:(1).对于精确的元素不区分事件捕获和事件冒泡，事件的执行顺序是按照绑定顺序来的。\n\t\t (2).同一个元素绑定相同的事件，后面的不会覆盖前面的。因为DOM2级事件绑定不是给元素添加属性是直接添加的事件。等同于给一个元素绑定了多个事件\n\t\t (3).绑定多个事件函数"},{"title":"最少两种方式实现点击每个li都弹出下标","questions_id":"puaqas-1modca-2y04jh-brcz59g","json_path":"puaqas-1modca-2y04jh-brcz59g.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"<ul id=”test”>\n    <li>这是第一条</li>\n    <li>这是第二条</li>\n    <li>这是第三条</li>\n</ul>","student_answer":"代码:<ul>\n  \t\t<li>这是第一条</li>\n\t\t<li>这是第二条</li>\n\t\t<li>这是第三条</li>\n  \t </ul>\n第一种方式:\n\t var itemli = document.getElementsByTagName(\"li\");\n   for(var i = 0; i<itemli.length; i++){\n　　　　itemli[i].index = i; //给每个li定义一个属性索引值，赋\n　　　　itemli[i].onclick = function(){\n　　　　　　alert(\"下标索引值为：\"+this.index);索引值从0开始\n　　　　}\n   }\n第二种方式:\n\tvar itemli = document.getElementsByTagName(\"li\");\n\tfor(var i = 0; i<itemli.length; i++){\n　　　(function(n){\n        　　itemli[i].onclick = function(){\n　　　　　　\t\talert(\"下标索引值为：\"+n+\"\");// 索引值从0开始\n　　　　　}\n  　　})(i)\n   }"}]