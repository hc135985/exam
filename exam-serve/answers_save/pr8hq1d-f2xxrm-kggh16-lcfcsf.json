[{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":"var open=true\nwindow.onresize = ()=>{\n   let dw=document.documentElement.clientWidth\n    if(dw>=600){\n       if(open){\n         console.log(\"hello\")\n       }   \n      open=false\n    }\n  \telse{\n    if(!open){\n      console.log(\"\")\n    }\n    open =true\n    }\n}"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"无状态组件，函数定义    \n\t只负责更具数据传入props，不涉及state状态的操作\n   组件不会实例化，组件访问不到this 组件无法访问声明周期 只能访问props\nes5 React.creatClass 定义组件\n\t会自动绑定函数方法，导致不必要的性能开销，增加代码过时的可能性\n   \nes6 extend是 React.Component 定义组件\n  函数this 自绑定\n  defaultProps是使用getDefaultProps的方法来获取默认\n  状态state是通过getInitialState方法来配置组件相关状态\n  \tstate实在constructor中向初始组件属性一样声明的\n\t\n"},{"title":"封装图片加载Promise","questions_id":"gt8z4u-ufd66j-najaef-y8ytir","json_path":"gt8z4u-ufd66j-najaef-y8ytir.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 封装加载图片的promise  \n```js\nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}\n```\n","student_answer":"\n  var ima = new Image();\n    ima.onload  = resolve;\n    ima.onerror = reject;\n    ima.src = src;\n"}]