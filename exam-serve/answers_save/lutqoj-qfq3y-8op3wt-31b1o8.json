[{"title":"匿名自执行函数的应用","questions_id":"vh80e-3d3g3o-6hy47e-ib2x4c","json_path":"vh80e-3d3g3o-6hy47e-ib2x4c.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"heinan","user_id":"fdjfr-msxp8a","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"代码如下：\n```js\nfor (var i = 0; i < 5; i++) {\n    setTimeout(function () {\n        console.log(i)\n    })\n}\n输出\n5\n5\n5\n5\n5\n```\n修改上面代码，打印结果要求为：0,1，2，3，4","student_answer":"for (let i = 0; i < 5; i++) {\n    setTimeout(function () {\n        console.log(i)\n    })\n}"},{"title":"react生命周期","questions_id":"xt05yo-prna5g-f7zqo-ltl5rh","json_path":"xt05yo-prna5g-f7zqo-ltl5rh.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"dingshaoshan","user_id":"ypay2t-7uxsd","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"# react常用生命周期图\n\n## 请在 “其他“ 中查看图片。 \n \n\n\n如图是react常用生命周期图，请阅读图，并在1，2，3，4处填写对应的生命周期","student_answer":"1:shouldComponentUpdate\n2:componentDidMount\n3:componentDidUpdate\n4:"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"无状态组件//无状态函数式组件   组件不会被实例化，整体渲染性能得到提升 组件不能访问this对象 组件无法访问生命周期的方法无状态组件只能访问输入的props，同样的props会得到同样的渲染结果，不会有副作用\n\nReact.createClass //Es5 的方法  可以方粉生命周期方法  这个会自动绑定this 直接使用this.method即可，，，\n//React.createClass在创建组件时，有关组件props的属性类型及组件默认的属性会作为组件实例的属性来配置，其中defaultProps是使用getDefaultProps的方法来获取默认组件属性的\n//React.createClass创建的组件，其状态state是通过getInitialState方法来配置组件相关的状态；\n\nReact.Component //es6的方法 创建的组件去成员函数不会自动绑定this，需要开发者手动绑定，否则this不能获取当前组件实例化对象\n//React.Component创建的组件，其状态state是在constructor中像初始化组件属性一样声明的。\n//React.Component在创建组件时配置这两个对应信息时，他们是作为组件类的属性，不是组件实例的属性，也就是所谓的类的静态属性来配置的。"},{"title":"分别使用DOM0级DOM2级给一个DIV绑定事件","questions_id":"1gsxn-k09c2j-gq8peo-sohe9","json_path":"1gsxn-k09c2j-gq8peo-sohe9.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"分别使用DOM0级DOM2级给一个button绑定事件，并且描述这两种方式的区别","student_answer":"let btn = document.getElementById(\"id\")\n\nbtn.onclick=()=>{console.log(\"dom0\")}\n//dom0级事件只能绑定一次 再次绑定会覆盖前面的\nbtn.addEventListener(\"click\",()=>{console.log(\"dom2\")},false)\n//dom2级事件可以绑定多次 再次绑定不会覆盖"},{"title":"最少两种方式实现点击每个li都弹出下标","questions_id":"puaqas-1modca-2y04jh-brcz59g","json_path":"puaqas-1modca-2y04jh-brcz59g.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"<ul id=”test”>\n    <li>这是第一条</li>\n    <li>这是第二条</li>\n    <li>这是第三条</li>\n</ul>","student_answer":"var txt=document.querySelector(\"#txt\")\n        var show=document.querySelector(\"#show-txt\")\n        txt.oninput=(e)=>{\n           show.innerHTML =e.target.value\n        }\n          \n          \n           const ul = h('ul', { id: 'list', style: 'color: red' }, [\n            h('li', { class: 'item' }, ['Item 1']),\n            h('li', { class: 'item' }, ['Item 2']),\n            h('li', { class: 'item' }, ['Item 3'])\n        ]);\n\n        const urlDom = ul.render() // 渲染 DOM 节点和它的子节点\n        ulDom.getAttribute('id') === 'list' // true\n        ulDom.querySelectorAll('li').length === 3 // true\n        \n\n        class VNode {\n  constructor (tagName, props, children) {\n    this.tagName = tagName\n    this.props = props\n    this.children = children\n  }\n  render () {\n    // 根据 tagName 构建 DOM 节点\n    const el = document.createElement(this.tagName)\n    // 设置 DOM 节点属性\n    Object.entries(this.props).forEach(([key, value]) => el.setAttribute(key, value))\n    var children = this.children || []\n    /* 渲染子节点 */\n    children.forEach((child) => {\n      var childNode = (child instanceof VNode)\n        ? child.render() // 如果子节点也是虚拟DOM，递归构建DOM节点\n        : document.createTextNode(child) // 如果字符串，只构建文本节点\n      el.appendChild(childNode)\n    })\n    return el\n  }\n}\n\nconst h = (tagName, props, children) => {\n  return new VNode(tagName, props, children)\n}"}]