[{"title":"commonjs规范","questions_id":"ayf32j-5kv76-qvfqh-cigaoo","json_path":"ayf32j-5kv76-qvfqh-cigaoo.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"请简述node环境下的commonjs规范（说出如何导出模块，如何引入模块，如何创建模块）？","student_answer":"导出模块  module.exports\n引入模块 require\n创建模块\t先npm init 创建 package.json 然后npm下载 自动生成node modules 文件夹级模块"},{"title":"let和var的区别","questions_id":"h7f6hq-cezl0g-fyu3o-6onwjf","json_path":"h7f6hq-cezl0g-fyu3o-6onwjf.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"在声明变量的时候，使用`let`和`var`有什么区别呢？","student_answer":"let 不能重复声明一个变量\n\t声明不能提升\n   有块级作用域\n   形成暂时性死区\n\nvar 声明可以提升\n\t能够重新赋值\n   可以声明全局\n   "},{"title":"解构赋值和数组的map方法","questions_id":"izvfy-572mw-thxrmm-7aba5s","json_path":"izvfy-572mw-thxrmm-7aba5s.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"如下：是一段html结构\n```   \n    <ul>\n        <li key=\"1\"></li>\n        <li key=\"2\"></li>\n        <li key=\"3\"></li>\n        <li key=\"4\"></li>\n    </ul>\n```\n加载一段对应的javaScript代码\n\n```\n        let oUl = document.getElementsByTagName('ul')[0];\n        let li = document.getElementsByTagName('li');\n        const {map,forEach} = [];\n        li = map.call(li,item=>{\n            let key = 2 * item.getAttribute('key') - 1;\n            item.setAttribute('key',key);\n            return item;\n        });\n        oUl.innerHTML = '';\n        forEach.call(li,item=>{\n            oUl.appendChild(item);\n        })\n```\n\n请结合html和javaScript描述出这段代码的运行效果，并给每句代码添加注释，在注释中指明该句代码的含义","student_answer":"        let oUl = document.getElementsByTagName('ul')[0];  获取ul\n        let li = document.getElementsByTagName('li');    找到所有的li  但是只是一个伪数组\n        const {map,forEach} = [];    数组有 map  forEach 方法 解构出map forEach\n        li = map.call(li,item=>{            call 改变this指向 li可以使用数组map方法 \n            let key = 2 * item.getAttribute('key') - 1;  改每一个li的key值 现在key=2*原来key-1\n            item.setAttribute('key',key);            再将现在的key值 添加到每一个li上\n            return item;                         返回li\n        });\n        oUl.innerHTML = '';              将ul清空\n        forEach.call(li,item=>{          call 改变this指向 li可以使用数组forEach方法  \n            oUl.appendChild(item);       将改变key值之后的li遍历将每一个节点都添加到ul中\n        })\n\n原来的key 值是 1,2,3,4  2*每一个数都会变为偶数  再-1就会变为奇数   最后的效果就会变成 1,3,5,7\n"},{"title":"解决以下异步代码问题","questions_id":"pwrym-ypsrgi-3smad-bm9d1m","json_path":"pwrym-ypsrgi-3smad-bm9d1m.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"检索并计算属于同一教室中每个学生的平均分数，例子中教室 ID 为 75。每个学生可以在一年内参加一门或多门课程。以下 API 可用于检索所需数据。\n```\n// GET LIST OF ALL STUDENTS\nGET /api/students\nResponse:\n[{\n    \"id\": 1,\n    \"name\": \"John\",\n    \"classroomId\": 75\n}]\n// GET COURSES FOR GIVEN A STUDENT\nGET /api/courses?filter=studentId eq 1\nResponse:\n[{\n    \"id\": \"history\",\n    \"studentId\": 1\n}, {\n    \"id\": \"algebra\",\n    \"studentId\": 1\n}]\n// GET EVALUATION FOR EACH COURSE\nGET /api/evaluation/history?filter=studentId eq 1\nResponse:\n{\n    \"id\": 200,\n    \"score\": 50,\n    \"totalScore\": 100\n}\n```\n编写一个接受教室 ID 的函数，并根据该函数计算该教室中每个学生的平均值。 该函数的最终输出应该是带有平均分数的学生列表：\n```\n[\n  { \"id\": 1, \"name\": \"John\", \"average\": 70.5 },\n  { \"id\": 3, \"name\": \"Lois\", \"average\": 67 },\n}\n```\n使用普通回调，promises，observables，generator 或 async-wait 编写所需的函数。 尝试使用至少 2 种不同的技术解决这个问题。\n代码素材用于代替接口\n```\nconst APIS = {\n  STUDENTS: '/api/students',\n  COURSES: '/api/courses',\n  EVALUATION: '/api/evaluation/'\n}; \nfunction fetchData(api) {\n  return new Promise(resolve => {\n    let data = null;\n    switch (api) {\n      case APIS.STUDENTS:\n        data = [{\n          id: 1,\n          name: 'John',\n          classroomId: 75\n        }, {\n          id: 1,\n          name: 'Tom',\n          classroomId: 75\n        }];\n        break;\n      case APIS.COURSES:\n        data = [{\n          id: 'history',\n          studentId: 1\n        }, {\n          id: 'algebra',\n          studentId: 1\n        }];\n        break;\n      case APIS.EVALUATION:\n        data = {\n          id: '200',\n          score: 50,\n          totalScore: 100\n        };\n        break;\n    } \n    resolve(data);\n  });\n} \n```","student_answer":"let data = [{\n    \"id\": 1,\n    \"name\": \"zs\",\n    \"classID\": 99,\n    \"class\": [\n        { \"chinese\": 20 },\n        { \"math\": 40 }\n    ]\n}, {\n    \"id\": 2,\n    \"name\": \"ls\",\n    \"classID\": 99,\n    \"class\": [\n        { \"english\": 50 },\n        { \"math\": 40 }\n    ]\n}]\n\nconst APIS = {\n    STUDENTS: '/api/students',\n    COURSES: '/api/courses',\n    EVALUATION: '/api/evaluation/'\n};\n\nfunction formateData(api, data) {\n    return new Promise(resolve => {\n        let arr = [];\n        switch (api) {\n            case APIS.STUDENTS:\n                let stu = data.map(item => {\n                    return `{\n                                id: ${item.id},\n                                name: ${item.name}',\n                                classroomId: ${item.classID}\n                            }`\n                }).join('')\n                arr.push(stu)\n                break;\n            case APIS.COURSES:\n                let w = [];\n                data.forEach(item => {\n                    let id = item.id\n                    item.class.forEach(i => {\n                        for (var w in i) {\n                            let obj = `{\n                                            id: ${w},\n                                            studentId: ${id}\n                                        }`\n                            w.push(obj)\n                        }\n                    })\n                })\n                arr = w;\n                break;\n            case APIS.EVALUATION:\n                let meg = data.map(item => {\n                    let score = null;\n                    let eveal = null;\n                    item.class.forEach(i => {\n                        for (var k in i) {\n                            score += i[k];\n                        }\n                    })\n                    eveal = score / item.class.length;\n                    return `{\n                               id:${item.id},\n                               score:${eveal}\n                               totalScore:${score}\n                            }`\n                }).join('')\n                arr.push(meg)\n                break;\n        }\n        resolve(arr)\n    })\n}\n\nasync function use() {\n    await formateData(APIS, data)\n}\nuse()"}]