[{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"let count = 0;\nfunction fun(num, res) { //num就是当前楼层  res存放每一步走的\n\tif (num === 0) {\n\t\tres = [];\n\t}\n            var i = 1;\n            while (i < 3) {\n                if (num + i <= 10) {\n                    let _this = [...res];\n                    _this.push(i)\n                    if (num + i === 10) {\n                        count++;\n                        console.log(count, 'res', _this)\n                    } else {\n                        fun(num + i, _this)\n                    }\n                }\n                i++;\n            }\n        }\n        fun(0)////////////////no"},{"title":"大小文件读取","questions_id":"z9ndnc-qhzc6-wb5vju-0pvnzk","json_path":"z9ndnc-qhzc6-wb5vju-0pvnzk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个方法适配大小文件的读取，限定值2M","student_answer":"let fs = require('fs'); //调用fs模块\nfunction ReadFile(Upath) { //读取文件函数\n\tlet size = (fs.statSync(Upath).size) / 1024 / 1024; //将传入的路径的大小改为MB单位\n\t// console.log(size);\n\tif (size >= 2) { //判断大小是否大于2MB\n\t\treturn; //大于则停止读取\n \t} else { //小于2MB\n\tlet res = fs.readFileSync(Upath); //正常读取\n\t// console.log(res);\n   }\n}\nReadFile(usePath); //调用读取文件函数，传入路径"},{"title":"实现多维数组转换为一维数组","questions_id":"60gn1-9nj3mi-hv4xz-t6ecp","json_path":"60gn1-9nj3mi-hv4xz-t6ecp.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个函数可以使得n维数组转换为1维数组，输出","student_answer":"function turnOne(arr) {\n\tlet newArr = []; //定义一个空数组\n\tfunction eacharr(arr) { //展开函数\n\t\tarr.forEach(item => { //遍历传入的数组\n\t\t\tif (!Array.isArray(item)) { //如果传入的不是数组\n\t\t\t\tnewArr.push(item); //存在之前定义的空数组里\n\t\t\t} else { //如果是数组\n\t\t\t\teacharr(item); //递归调用自己所在的函数\n\t\t\t}\n\t\t});\n\t}\n\teacharr(arr);\n\treturn newArr; //返回值\n}\nconsole.log(turnOne([1, 2, [3, [4],\n    [5, 6]\n], 7]));"},{"title":"实现一个评星方法","questions_id":"tak6bp-2bpj3-xh6jpg-elkb8u","json_path":"tak6bp-2bpj3-xh6jpg-elkb8u.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"实现一个评星方法\n说明\n* 可根据传入的评分和总数，返回评星结果（用 ★ 和 ☆ 描述）\n* 评分必选项，四舍五入，总数可选，大于0的整数，默认为5\n* 对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回'errror'\n示例\n```\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"function getRate(value, count) { //被调用后，两个形参接收实参\n\tif (arguments.length == 1 && !(value <= 0)) { //判断实参长度及第一个实参的值是否为负数\n\t\tcount = 5; //长度为1，第二个参数默认为5\n\t\treturn stars = createRate(Math.round(value), count); //调用拼接星星的函数，并接收返回值\n\t}\n\tif (count < Math.round(value) || count <= 5 || count != Math.round(count)) { //对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回’errror’ 示例\n\t\treturn \"error\";\n\t}\n\treturn stars = createRate(Math.round(value), count); //调用拼接星星的函数，并接收返回值\n\tfunction createRate(black, white) { //接收参数\n\t\t//console.log(black, white);\n\t\tlet str = \"\"; //定义一个空字符串用来拼接星星\n\t\tfor (let i = 0; i < black; i++) { //实芯星星循环拼接\n\t\t\tstr += \"★\";\n\t\t}\n\t\tfor (let j = 0; j < white - black; j++) { //空芯星星循环拼接\n\t\t\tstr += \"☆\";\n\t\t}\n\t\treturn str; //返回拼接好的星星字符串\n\t}\n}\n\nconsole.log(getRate(4)); // ★★★★☆\nconsole.log(getRate(4, 8)); // ★★★★☆☆☆☆\nconsole.log(getRate(3.4)); //  ★★★☆☆\nconsole.log(getRate(5, 2)); // 'error'\nconsole.log(getRate(-2)); // 'error'\nconsole.log(getRate(3, 5.5)); // 'error'"}]