[{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":"let str = '';\n   window.onresize = function () {\n       if (document.body.clientWidth >= 600) {\n          if (str === '') {\n               str = 'hello';\n               console.log(str);\n           } else {\n              return;\n        }\n     }\n }"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"React具体的三种方式：\n\t1.函数式定义的无状态组件:无状态函数式组件是为了创建纯展示组件，这种组件只负责根据传入的props来展示，不涉及到要state状态的操作。\n\t2.es5原生方式 React.createClass 定义的组件:React.createClass创建的组件，其状态state是通过getInitialState方法来配置组件相关的状态。\n\t3.es6形式的 class App extends React.Component 定义的组件:React.Component创建的组件，其状态state是在constructor中像初始化组件属性一样声明的。\n\nVue具体的两种方式：\n\t1.Vue.component(组件名,配置对象)\n    \t<div id=\"app1\">\n    \t\t<my-header></my-header>\n\t\t</div>\n\t\t<div id=\"app2\">\n    \t<my-header></my-header>\n\t\t</div>\n\t\t<script>\n    \tVue.component('my-header',{\n        template:'<h1>我是一个vue的组件</h1>'\n    \t}) \n      let vm1 = new Vue({\n        el:'#app1'\n       })\n      let vm2 = new Vue({\n        el:'#app2'\n      })\n     </script>\n\t\t全局注册的组件在所有的实例都可以使用。\n   2.局部注册组件：\n\t\t在根组件的配置对象中添加components选项\n\t\tlet vm = new Vue({\n    \tel:'#app',\n    \tcomponents:{\n        '组件名1'：组件对象1,\n        '组件名2'：组件对象2\n    \t}\n\t\t})\n     局部：只能在当前实例内使用"},{"title":"封装图片加载Promise","questions_id":"gt8z4u-ufd66j-najaef-y8ytir","json_path":"gt8z4u-ufd66j-najaef-y8ytir.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 封装加载图片的promise  \n```js\nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}\n```\n","student_answer":"let loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n      // write your code here\n      let image=new Image();\n\t\t image.onload=function(){\n\t\t\tresolve(image);\n\t\t };\n\t\t image.onerror=function(){\n\t\t\treject(new Error('Could not image at'+src));\n\t\t }\n\t\t image.src=src;\n    })\n}"},{"title":"防抖场景实现","questions_id":"pee5rm-didl4v-b5ty-eay7yo","json_path":"pee5rm-didl4v-b5ty-eay7yo.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"题目 有一个 input 查询框，每一次 change 都会触发一个“ a 函数”\n要求\n1.此 input 框的 change 请求 在间隔 0.3s 内的过滤掉\n2.提供一个包装函数，可以对上述的“ a 函数”请求过滤做统一的封装\n```\n<input id=\"input\" />\n```","student_answer":"function a(value){\n\tconsole.log(`输入的内容${value}`);\n}\nconst ipt = document.getElementById('input');\nfunction debounce(fun,delay){\n\tlet timer;\n  \treturn function(args){\n   \t\tconst that = this;\n      clearTimeout(timer);\n      timer = setTimeout(function(){ \n      \t\tfun.call(that,args)\n      },delay)\n   }\n}\nconst debounceInput = debounce(a,300);\nipt.addEventListener('change',function(e){\n\tdebounceInput(e.target.value);\n})"}]