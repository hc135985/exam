[{"title":"类的抽象","questions_id":"c7y73-e0nft-6rplem-daxvxe","json_path":"c7y73-e0nft-6rplem-daxvxe.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"## 使用ES6的Class完成如下功能\n阿里云产品线十分丰富，拥有ECS、RDS等数百款产品，每个产品都具有一些通用属性，例如：  \nID（id），地域（region），名称（name），同时每个产品又包含自己特有的属性。 ECS拥  \n有实例（instance）属性，可选值有ecs.t1.small、ecs.t3.small、ecs.t1.large RDS  \n拥有数据库类型（dbType）属性，可选值有mysql、mssql、PPAS 请使用你的面向对象知识，  \n基于ES6语法编写ECS、RDS两个类，并实现如下方法：   \n- 1. config() 返回一个字面量对象，可以拿到所有的成员变量。  \n- 2. buy() 返回一个URL，格式https://www.aliyun.com/buy?id=xxx&region=xxx&name=xxx&每个产品自己特有的成员变量","student_answer":" class common {\n            constructor(id, region, name) {\n                this.id = id\n                this.region = region\n                this.name = name\n            }\n            buy(){\n                let url = \"https://www.aliyun.com/buy?\";\n                for(let key in this){\n                    // console.log(key,this[key])\n                    url += key+\"=\"+this[key]+\"&\"\n                }\n                return url.slice(0,-1)  \n            }\n        }\n        class ECS extends common {\n            constructor(id, region, name) {\n                super(id, region, name)\n            }\n            config(value){\n                this.instance =value\n                return this\n            }\n        }\n        let obj= new ECS(\"1\", \"wj\", \"zs\")\n        console.log(obj.config(\"ecs.t3.small\"))\n        console.log(obj.buy())\n\n\n\n        class RDS extends common {\n            constructor(id, region, name) {\n                super(id, region, name)\n            }\n            config(value){\n                this.dbType =value\n                return this\n            }\n        }\n        let obj1= new RDS(\"2\", \"abc\", \"ls\")\n        console.log(obj.config(\"mysql\"))\n        console.log(obj.buy())"},{"title":"使用类实现任务调度","questions_id":"sue8v-wa50ws-jss7qm-592yt8","json_path":"sue8v-wa50ws-jss7qm-592yt8.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 使用js实现以下效果 \nvar priorityQueue = new PriorityQueue();  \npriorityQueue.enqueue('优先级1-1', 1);  \npriorityQueue.enqueue('优先级3-1', 3);  \npriorityQueue.enqueue('优先级1-2', 1);  \npriorityQueue.enqueue('优先级2-1', 2);  \npriorityQueue.print();  \n// 优先级1-1 优先级1-2 优先级2-1 优先级3-1 priorityQueue.dequeue();   \n```js\nclass PriorityQueue{\n    constuctor(obj){\n        this.arr=[];\n    }\n    enqueue(str,num){\n        // write your code here\n    }\n    print(){\n       // write your code here \n    }\n}\n```","student_answer":"class PriorityQueue {\n            constructor(obj) {\n                this.arr = [];\n                \n            }\n            enqueue(str, num) {\n                this.arr.push({name:str,num:num})\n                \n            }\n            print() {   \n                this.sort(this.arr,\"num\")\n                console.log(this.arr.map((item)=>item.name).join(\"\"))\n            }\n            sort(obj,attr){\n                return obj.sort((a,b)=>{\n                    if(a[attr]<b[attr]){\n                        return -1\n                    }\n                    if(a[attr]>b[attr]){\n                        return 1\n                    }\n                    return 0\n\n                })\n            }\n        }\n        var priorityQueue = new PriorityQueue();\n        priorityQueue.enqueue('优先级1 - 1', 1);\n        priorityQueue.enqueue('优先级3 - 1', 3);\n        priorityQueue.enqueue('优先级1 - 2', 1);\n        priorityQueue.enqueue('优先级2 - 1', 2);\n        priorityQueue.print();"},{"title":"访问器属性的应用","questions_id":"txtcbb-7qmgwa-kwpbgu-08tn5qe","json_path":"txtcbb-7qmgwa-kwpbgu-08tn5qe.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请实现以下需求：\n1. 声明一个变量a = 10；\n2. 声明一个变量b，b的值永远自动的保持为a的2倍；\n\n效果如下，\nvar a = 10;\nvar b;\n// 自行实现绑定\n\n最后打印的结果如下：\nconsole.log(a); // 10\nconsole.log(b); // 20\n\na = 30;\nconsole.log(a); // 30\nconsoel.log(b); // 60","student_answer":""},{"title":"使用async函数实现多张图片的依次加载（第一张加载完之后才能加载第二张）","questions_id":"fl7dll-xh6eo-hpri8a-edulg","json_path":"fl7dll-xh6eo-hpri8a-edulg.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 使用async函数实现多张图片的依次加载（第一张加载完之后才能加载第二张）\n\n```js\n// 封装加载图片的promise  \nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}   \nconst imgs = ['url1', 'url2', 'url3'];\n// 依次加载图片\nasync function fSync(imgs){\n   // write your code here\n}\n\nfSync(imgs);\n```","student_answer":" let loadImg = (src) => {\n            return new Promise((resolve, reject) => {\n                let img = new Image();\n                img.onload = () => {\n                    resolve()\n                }\n                img.src = src\n            })\n        }\n        const imgs = ['url1', 'url2', 'url3'];\n        // 依次加载图片\n        async function fSync(imgs) {\n            for (var i = 0; i < imgs.length; i++) {\n                await loadImg(imgs[i])\n            }\n        }\n        fSync(imgs);"}]