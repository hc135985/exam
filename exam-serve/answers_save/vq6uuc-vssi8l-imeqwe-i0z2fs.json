[{"title":"commonjs规范","questions_id":"ayf32j-5kv76-qvfqh-cigaoo","json_path":"ayf32j-5kv76-qvfqh-cigaoo.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"请简述node环境下的commonjs规范（说出如何导出模块，如何引入模块，如何创建模块）？","student_answer":"1.导出模块的方法或者变量，是export对象。在模块中还存在module对象，它代表的是模块的本身，而export是module的属性。\n导出方法（变量同理）：\n\t例：module.export=function(){}\n\n2.在CommonJS规范中，存在require( )方法，它接受一个模块标识，用来引入一个模块中API\n 引入：\n \t例：const url=require(\"url\")\n\n3.创建模块：单独创建出一个js文件，通过require（）方法引入，前提是创建的模块中必须要有抛出"},{"title":"let和var的区别","questions_id":"h7f6hq-cezl0g-fyu3o-6onwjf","json_path":"h7f6hq-cezl0g-fyu3o-6onwjf.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"在声明变量的时候，使用`let`和`var`有什么区别呢？","student_answer":"var 有声明变量的提升，可以重复声明变量，与let作用域也不同\nlet 是es6的语法，不可以重复声明定义，重复声明定义会报错，let声明的变量只在当前的作用域里面有用\n"},{"title":"解构赋值和数组的map方法","questions_id":"izvfy-572mw-thxrmm-7aba5s","json_path":"izvfy-572mw-thxrmm-7aba5s.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"如下：是一段html结构\n```   \n    <ul>\n        <li key=\"1\"></li>\n        <li key=\"2\"></li>\n        <li key=\"3\"></li>\n        <li key=\"4\"></li>\n    </ul>\n```\n加载一段对应的javaScript代码\n\n```\n        let oUl = document.getElementsByTagName('ul')[0];\n        let li = document.getElementsByTagName('li');\n        const {map,forEach} = [];\n        li = map.call(li,item=>{\n            let key = 2 * item.getAttribute('key') - 1;\n            item.setAttribute('key',key);\n            return item;\n        });\n        oUl.innerHTML = '';\n        forEach.call(li,item=>{\n            oUl.appendChild(item);\n        })\n```\n\n请结合html和javaScript描述出这段代码的运行效果，并给每句代码添加注释，在注释中指明该句代码的含义","student_answer":"//这段代码是最终的结果是把ul中每一项li的自定义属性进行了更改，首先获取到每一个li的自定义属性值，根据属性值进行了运算，并把新的值赋给了li的自定义属性key，将原来的ul里的内容清空后，把新的li数组，放进了ul中 \n\nlet oUl = document.getElementsByTagName('ul')[0]; //获取ul标签\n        let li = document.getElementsByTagName('li'); //获取到所有的li\n        const {map, forEach} = [];//声明两个函数\n        li = map.call(li, item => {\n            let key = 2 * item.getAttribute('key') - 1;//获取到自定义属性key做计算\n            item.setAttribute('key', key);//重新对每个li定义key的值 \n            return item;\n        });//map返回值是一个新的数组，接收到的是return出去的每一个重新赋过值的li\n\n        oUl.innerHTML = '';//清空oul的内容\n        forEach.call(li, item => {\n            oUl.appendChild(item);\n        })//将新的li重新放到oul中"},{"title":"解决以下异步代码问题","questions_id":"pwrym-ypsrgi-3smad-bm9d1m","json_path":"pwrym-ypsrgi-3smad-bm9d1m.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"检索并计算属于同一教室中每个学生的平均分数，例子中教室 ID 为 75。每个学生可以在一年内参加一门或多门课程。以下 API 可用于检索所需数据。\n```\n// GET LIST OF ALL STUDENTS\nGET /api/students\nResponse:\n[{\n    \"id\": 1,\n    \"name\": \"John\",\n    \"classroomId\": 75\n}]\n// GET COURSES FOR GIVEN A STUDENT\nGET /api/courses?filter=studentId eq 1\nResponse:\n[{\n    \"id\": \"history\",\n    \"studentId\": 1\n}, {\n    \"id\": \"algebra\",\n    \"studentId\": 1\n}]\n// GET EVALUATION FOR EACH COURSE\nGET /api/evaluation/history?filter=studentId eq 1\nResponse:\n{\n    \"id\": 200,\n    \"score\": 50,\n    \"totalScore\": 100\n}\n```\n编写一个接受教室 ID 的函数，并根据该函数计算该教室中每个学生的平均值。 该函数的最终输出应该是带有平均分数的学生列表：\n```\n[\n  { \"id\": 1, \"name\": \"John\", \"average\": 70.5 },\n  { \"id\": 3, \"name\": \"Lois\", \"average\": 67 },\n}\n```\n使用普通回调，promises，observables，generator 或 async-wait 编写所需的函数。 尝试使用至少 2 种不同的技术解决这个问题。\n代码素材用于代替接口\n```\nconst APIS = {\n  STUDENTS: '/api/students',\n  COURSES: '/api/courses',\n  EVALUATION: '/api/evaluation/'\n}; \nfunction fetchData(api) {\n  return new Promise(resolve => {\n    let data = null;\n    switch (api) {\n      case APIS.STUDENTS:\n        data = [{\n          id: 1,\n          name: 'John',\n          classroomId: 75\n        }, {\n          id: 1,\n          name: 'Tom',\n          classroomId: 75\n        }];\n        break;\n      case APIS.COURSES:\n        data = [{\n          id: 'history',\n          studentId: 1\n        }, {\n          id: 'algebra',\n          studentId: 1\n        }];\n        break;\n      case APIS.EVALUATION:\n        data = {\n          id: '200',\n          score: 50,\n          totalScore: 100\n        };\n        break;\n    } \n    resolve(data);\n  });\n} \n```","student_answer":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n</head>\n\n<body>\n    <script>\n        // GET LIST OF ALL STUDENTS\n        // GET /api/students\n        // Response:\n        var STUDENTS = [{\n            \"id\": 1,\n            \"name\": \"John\",\n            \"classroomId\": 75\n        }]\n\n        var COURSES = [{\n            \"id\": \"history\",\n            \"studentId\": 1\n        }, {\n            \"id\": \"algebra\",\n            \"studentId\": 1\n        }]\n\n        var EVALUATION = [{\n            \"id\": 200,\n            \"score\": 50,\n            \"totalScore\": 100\n        }]\n\n        // const APIS = {\n        //   STUDENTS: '/api/students',\n        //   COURSES: '/api/courses',\n        //   EVALUATION: '/api/evaluation/'\n        // }; \n\n        async function CountById(id) {\n            let res = await fetchData(STUDENTS);\n            console.log(res);\n\n            let testArr = res.filter(item => {\n                return item.classroomId === id;\n            });\n\n            let subject = testArr.map(async (item) => {\n                return await fetchData(EVALUATION);\n            });\n\n            let res = subject.map(async (item, i) => {\n                let eachLength = item.length;\n                totscore = item.map(async (item2) => {\n                    let score = await fetchData(EVALUATION);\n\n                    return score.score;\n                });\n                let eachTotscore = totscore.reduce((tot, each) => tot + each);\n\n                return {\n                    id: item[0].id,\n                    name: item[0].name,\n                    average: Math.floor(eachTotscore / eachLength)\n                }\n            })\n\n\n            return new Promise((resolve, reject) => {\n                if (res && res.length) {\n                    resolve({\n                        res\n                    })\n                } else {\n                    reject({\n                        msg: \"error\"\n                    })\n                }\n            })\n        }\n\n        CountById(75).then(res => {\n            console.log(res)\n        });\n\n\n        function fetchData(api) {\n            return new Promise(resolve => {\n                let data = null;\n                switch (api) {\n                    case APIS.STUDENTS:\n                        data = [{\n                            id: 1,\n                            name: 'John',\n                            classroomId: 75\n                        }, {\n                            id: 1,\n                            name: 'Tom',\n                            classroomId: 75\n                        }];\n                        break;\n                    case APIS.COURSES:\n                        data = [{\n                            id: 'history',\n                            studentId: 1\n                        }, {\n                            id: 'algebra',\n                            studentId: 1\n                        }];\n                        break;\n                    case APIS.EVALUATION:\n                        data = {\n                            id: '200',\n                            score: 50,\n                            totalScore: 100\n                        };\n                        break;\n                }\n                resolve(data);\n            });\n        }\n    </script>\n</body>\n\n</html>"}]