[{"title":"使用async函数实现多张图片的依次加载（哪张加载完哪张添加到页面）","questions_id":"5oxqyl-8dnbaa-3dt3o9-qrecrk","json_path":"5oxqyl-8dnbaa-3dt3o9-qrecrk.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 使用async函数实现多张图片的依次加载（哪张加载完哪张添加到页面）\n\n```js\n// 封装加载图片的promise  \nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}   \nconst imgs = ['url1', 'url2', 'url3'];\n// 依次加载图片\nasync function fAsync(imgs){\n   // write your code here\n}\n\nfAsync(imgs);\n```","student_answer":"let loadImg = (src) => {\n            return new Promise((resolve, reject) => {\n                let img = document.createElement('img')\n                img.src = src\n                document.body.append(img)\n                setTimeout(() => {\n                    resolve(true)\n                }, 1000)\n            })\n        }\n        const imgs = ['1.jpg', '2.jpg', '3.jpg', '4.jpg'];\n        // 依次加载图片\n        async function fAync(imgs) {\n            for (let i of imgs) {\n                await loadImg(i)\n            }\n        }\n        fAync(imgs);"},{"title":"vue自定义指令","questions_id":"6ivrh-g7kp8a-2gixkg-p117t","json_path":"6ivrh-g7kp8a-2gixkg-p117t.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"## 阅读如下代码，写出代码的功能，输入和输出\n```js\nVue.filter('formatDate', function(value){\n  let date = new Date();\n  date.setTime(value);\n  let year = date.getFullYear(),\n      month = (date.getMonth() + 1).toString().padStart(2, '0'),\n      day = date.getDate().toString().padStart(2, '0'),\n      hour = date.getHours().toString().padStart(2, '0'),\n      min = date.getMinutes().toString().padStart(2, '0'),\n      sec = date.getSeconds().toString().padStart(2, '0');\n  return `${year}-${month}-${day} ${hour}:${min}:${sec}`\n});\n```","student_answer":"Vue.filter('dateFormat', function(dateStr, time) {\n            var date = new Date(dateStr);\n            var year = date.getFullYear();\n            var month = date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1;\n            var day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n            var hh = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\n            var mm = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n            var ss = date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds();\n\n            if (time && time.toLowerCase() === 'yyyy-mm-dd') {\n                return `${year}-${month}-${day}`;\n            } else if (time && time.toLowerCase() === 'hh:mm:ss') {\n                return `${hh}:${mm}:${ss}`;\n            } else {\n                return `${year}-${month}-${day} ${hh}:${mm}:${ss}`;\n            }\n        });\n        new Vue({\n            el: \"#app\",\n            data: {\n                date: new Date()\n            }\n        })"},{"title":"vue自定义指令","questions_id":"9wck8-qt73nd-0v6s8-f6jyid","json_path":"9wck8-qt73nd-0v6s8-f6jyid.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"## 阅读如下代码，写出代码的功能，输入和输出\n```js\nVue.filter('toThousandFilter', function(num){\n  return (+num || 0).toString().replace(/^-?\\d+/g, m => m.replace(/(?=(?!\\b)(\\d{3})+$)/g, ','))\n});\n```","student_answer":"全局过滤器:我们可以直接在vue对象上使用filter方法注册过滤器，这种全局注册的过滤器在任何一个组件内都可以使用。\n注册全局filter的方法：（接收2个参数：1.过滤器名，2.过滤器函数）\nnum 是通过管道传来的数据\nreturn 返回处理后的数据\n千分位 例如：（111,222,222,223）"},{"title":"Vue导航守卫做鉴权处理","questions_id":"42cuvb-7216fb-zlkab2-wwns3d","json_path":"42cuvb-7216fb-zlkab2-wwns3d.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"wbxm4-jf8q6k-lvt2ca-ze96mg","exam_name":"月考","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 在Vue中我们可以使用导航守卫做鉴权，现有要求如下：  \n可以根据getToken()是否返回token判断  \n- 1.如果用户已经登陆  \n  - a. 如果用户要去/login页面，则重定向到/路径  \n  - b. 如果用户要去其他页面，则不做处理直接跳转    \n- 2.如果用户未登陆  \n  - a. 如果用户要去的页面在白名单内，则不做处理直接跳转  \n  - b. 如果用户要去的页面不在白名单内，则重定向到/login页面，并把要去的页面路径作为查询字符串的query的值\n\n```js\nimport router from './router'\nimport { getToken } from '@/utils/auth' // getToken from cookie\n\nconst whiteList = ['/login', '/register', '/auth-redirect']// no redirect whitelist\n\nrouter.beforeEach((to, from, next) => {\n  if (getToken()) { // determine if there has token\n    // write your code here\n  } else {\n    // write your code here\n  }\n})\n```","student_answer":" import router from './router'\n        import {\n            getToken\n        } from '@/utils/auth' // getToken from cookie\n\n        const whiteList = ['/login', '/register', '/auth-redirect'] // no redirect whitelist\n\n        router.beforeEach((to, from, next) => {\n            if (getToken()) { // determine if there has token\n                next();\n            } else {\n                alert(\"请先去登录吧\")\n                next(\"/login\")\n            }\n        })"}]