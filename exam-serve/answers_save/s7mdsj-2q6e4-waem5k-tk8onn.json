[{"title":"使用async函数实现多张图片的依次加载（哪张加载完哪张添加到页面）","questions_id":"5oxqyl-8dnbaa-3dt3o9-qrecrk","json_path":"5oxqyl-8dnbaa-3dt3o9-qrecrk.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 使用async函数实现多张图片的依次加载（哪张加载完哪张添加到页面）\n\n```js\n// 封装加载图片的promise  \nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}   \nconst imgs = ['url1', 'url2', 'url3'];\n// 依次加载图片\nasync function fAsync(imgs){\n   // write your code here\n}\n\nfAsync(imgs);\n```","student_answer":"// 封装加载图片的promise  \nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n       // write your code here\n      let img = document.createElement('img')\n            img.src = src\n            document.body.append(img)\n            setTimeout(() => {\n                resolve(true)\n            }, 1000)\n    })\n}   \nconst imgs = ['url1', 'url2', 'url3'];\n// 依次加载图片\nasync function fAsync(imgs){\n   // write your code here\n   for (let i of imgs) {\n     await loadImg(i)\n   }\n}\n\nfAsync(imgs);"},{"title":"vue自定义指令","questions_id":"6ivrh-g7kp8a-2gixkg-p117t","json_path":"6ivrh-g7kp8a-2gixkg-p117t.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"## 阅读如下代码，写出代码的功能，输入和输出\n```js\nVue.filter('formatDate', function(value){\n  let date = new Date();\n  date.setTime(value);\n  let year = date.getFullYear(),\n      month = (date.getMonth() + 1).toString().padStart(2, '0'),\n      day = date.getDate().toString().padStart(2, '0'),\n      hour = date.getHours().toString().padStart(2, '0'),\n      min = date.getMinutes().toString().padStart(2, '0'),\n      sec = date.getSeconds().toString().padStart(2, '0');\n  return `${year}-${month}-${day} ${hour}:${min}:${sec}`\n});\n```","student_answer":"格式化日期时间\n//输入\n\"2018-03-15T09:53:16.613Z\"\n//输出\n2018-03-15 17:52:35"},{"title":"vue自定义指令","questions_id":"9wck8-qt73nd-0v6s8-f6jyid","json_path":"9wck8-qt73nd-0v6s8-f6jyid.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"## 阅读如下代码，写出代码的功能，输入和输出\n```js\nVue.filter('toThousandFilter', function(num){\n  return (+num || 0).toString().replace(/^-?\\d+/g, m => m.replace(/(?=(?!\\b)(\\d{3})+$)/g, ','))\n});\n```","student_answer":"//全局过滤器  将每三位数字以，隔开：\nVue.filter('toThousandFilter', function(num){\n  return (+num || 0).toString().replace(/^-?\\d+/g, m => m.replace(/(?=(?!\\b)(\\d{3})+$)/g, ','))\n});\n//输入\nconsole.log(toThousandFilter（123456789））\n//输出\n123，456，789"},{"title":"Vue导航守卫做鉴权处理","questions_id":"42cuvb-7216fb-zlkab2-wwns3d","json_path":"42cuvb-7216fb-zlkab2-wwns3d.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"wbxm4-jf8q6k-lvt2ca-ze96mg","exam_name":"月考","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 在Vue中我们可以使用导航守卫做鉴权，现有要求如下：  \n可以根据getToken()是否返回token判断  \n- 1.如果用户已经登陆  \n  - a. 如果用户要去/login页面，则重定向到/路径  \n  - b. 如果用户要去其他页面，则不做处理直接跳转    \n- 2.如果用户未登陆  \n  - a. 如果用户要去的页面在白名单内，则不做处理直接跳转  \n  - b. 如果用户要去的页面不在白名单内，则重定向到/login页面，并把要去的页面路径作为查询字符串的query的值\n\n```js\nimport router from './router'\nimport { getToken } from '@/utils/auth' // getToken from cookie\n\nconst whiteList = ['/login', '/register', '/auth-redirect']// no redirect whitelist\n\nrouter.beforeEach((to, from, next) => {\n  if (getToken()) { // determine if there has token\n    // write your code here\n  } else {\n    // write your code here\n  }\n})\n```","student_answer":"import router from './router'\nimport { getToken } from '@/utils/auth' // getToken from cookie\n\nconst whiteList = ['/login', '/register', '/auth-redirect']// no redirect whitelist\n \nconst routes =[\n    {\n        path:'/',\n        component: resolve => require(['../components/mainTem/Filtrate.vue'],resolve),\n        meta:{auth:true,keepAlive: false},\n        name:'Filtrate'\n    },//首页\n    {\n        path:'/Home',\n        component: resolve => require(['../components/mainTem/Home.vue'],resolve),\n        meta:{auth:true,keepAlive: true },\n        name:'Home'\n    },//登录\n    {\n        path:'/Login',\n        component: resolve => require(['../components/mainTem/Login.vue'],resolve),\n        meta:{auth:true,keepAlive: false},\n        name:'Login'\n    },//最新案例\n    {\n        path:'/NewCase',\n        component: resolve => require(['../components/mainTem/NewCase.vue'],resolve),\n        meta:{auth:true,keepAlive: true},\n        name:'NewCase'\n    },//推荐\n    {\n        path:'/Recommend',\n        component: resolve => require(['../components/mainTem/Recommend.vue'],resolve),\n        meta:{auth:true,keepAlive: true},\n        name:'Recommend'\n    },//个人中心\n    {\n        path:'/User',\n        component: resolve => require(['../components/mainTem/User.vue'],resolve),\n        meta:{auth:true,keepAlive: true},\n        name:'User'\n    },//筛选\n    {\n        path:'/Filtrate',\n        component: resolve => require(['../components/mainTem/Filtrate.vue'],resolve),\n        meta:{auth:true,keepAlive: false},\n        name:'Filtrate'\n    },\n    {//详情\n        path:'/Detail',\n        component: resolve => require(['../components/mainTem/Detail.vue'],resolve),\n        meta:{auth:true,keepAlive: false},\n        name:'Detail'\n    }\n]\nrouter.beforeEach((to, from, next) => {\n  if (getToken()) { // determine if there has token\n    // write your code here\n    // console.log(\"先判断是否登录\");\n        if(to.name=='Login'){\n            next();\n        }else{\n          if(localStorage.getItem('token')){\n\n          //访问服务器缓存数据，判断当前token是否失效\n            Vue.http.get(\"http:xxxx/Login/UserIsLogin?token=\"+localStorage.getItem('token')+\"&url=\"+to.name,{withCredentials:        true}).then(response => response.json()).then(num => {\n                    // console.log('是否登录',num);\n                    if(num.code==1001){\n                        next();\n                    }else{\n                        alert('您的token已超时，请重新登录');\n                        next('/Login');\n                    }\n            })\n          }else{\n            next('/Login');\n          }\n\n        }\n  } else {\n    // write your code here\n    console.log(\"请先登录\");\n        next()\n  }\n})"}]