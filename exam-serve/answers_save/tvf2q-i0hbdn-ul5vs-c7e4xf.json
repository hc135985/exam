[{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"let number = 0;//设置初始化\nfunction jump(num, array) { //封装函数\n    if (num == 0) { //等于0\n        array = [] // array为空数组\n    }\n    var i = 1; // 声明变量i\n    while (i < 3) { // 当i小于3的时候 while循环\n        if (num + i <= 10) {  //如果初始化值加变量i 小于等于10 \n            let _array = [...array] //展开数组\n            _array.push(i);//push进去\n            if (num + i === 10) { \n                number++;\n            } else {\n                jump(num + i, _array);\n            }\n        }\n        i++\n    }\n}\njump(0) //调用函数"},{"title":"大小文件读取","questions_id":"z9ndnc-qhzc6-wb5vju-0pvnzk","json_path":"z9ndnc-qhzc6-wb5vju-0pvnzk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个方法适配大小文件的读取，限定值2M","student_answer":"\n//引入fs这个nodejs内置模块\nlet fs = requier(\"fs\")\n\n//封装函数\nfunction read(){\n  //创建流式读取文件对象\n  let readstream =  fs.createReadStream(\"./a.mp4\")//读取路径\n   let size = fs.statSync(\"./a.mp4\").size / 1024 / 1024// 转成MB\n    if (size > 2) { //大于2MB 返回\n        return // 返回 中止执行函数\n    }\n}\n\n"},{"title":"实现多维数组转换为一维数组","questions_id":"60gn1-9nj3mi-hv4xz-t6ecp","json_path":"60gn1-9nj3mi-hv4xz-t6ecp.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个函数可以使得n维数组转换为1维数组，输出","student_answer":"let array = [1,2,3,[1,[5],[8,[3]]]\n\nfunction instull(array){ //封装方法\n  let newArray = [];  //创建空数组\n  setArray(array,newArray)  //调用函数\n  function setArray(array,newArray){\t//封装转换数组\t\n    array.forEach(val => { //遍历数组\n    \t if(val instansof Array){ //检测数组 \n         setArray(val) // 是数组的话继续调用函数 递归\n       }eles{\n\t\t\tnewArray.push(val) // push进新数组\n       }    \n    } )\n    return newArray //返回新数组\n  }\n  return newArray //返回新数组\n}\ninstull()\n\n"},{"title":"实现一个评星方法","questions_id":"tak6bp-2bpj3-xh6jpg-elkb8u","json_path":"tak6bp-2bpj3-xh6jpg-elkb8u.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"实现一个评星方法\n说明\n* 可根据传入的评分和总数，返回评星结果（用 ★ 和 ☆ 描述）\n* 评分必选项，四舍五入，总数可选，大于0的整数，默认为5\n* 对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回'errror'\n示例\n```\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":" function getRate(a, b = 5) { // 封装函数 a => 评分 b => 总数，默认值为5\n    let Bstar = \"★\"; //设定实心星，空心星字符串\n    let Wstar = \"☆\";\n    let str = \"\"; //空字符串方便字符串拼接\n    if (a > b || a < 1 ) { //如果评分大于总数  或者 评分小于1 或者 总数 不是一个数字   返回一个“error”\n       return str = \"error\"\n     } else if (a < b) { //如果a<b 进入\n       let num = Math.round(a) // 把评分四舍五入取值\n       str = Bstar.repeat(num) //重复 num 次\n       str += Wstar.repeat(b - num) //重复 总数减去num 次\n                \n       //或者  str = str.padEnd(b, Wstar)\n\n      }\n     return str //返回str\n\n}\ngetRate(3, 9)"}]