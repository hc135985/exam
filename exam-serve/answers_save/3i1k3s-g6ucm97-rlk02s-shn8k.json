[{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":"let flag = true;\nwindow.onresize = () => {\n  if(document.documentElement.clientWidth>=600){\n      if(flag){\n     \t\tconsole.log('hello') \n      }\n  } else {\n  \t\tif(!flag){\n     \t\tconsole.log('') \n      }\n      flag = true;\n   }\n}"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"1、函数式定义的无状态组件\n\t组件不会被实例化，整体渲染性能得到提升\n   组件不能访问this对象\n   组件无法访问生命周期的方法\n   无状态组件只能访问输入的props，同样的props会得到同样的渲染结果，不会有副作用。所以只要有可能，尽量使用无状态组件。\n   \n2、es5原生方式React.createClass 定义的组件\n\n3、es6形式的extends React.Component 定义的组件\n\nReact.createClass与React.Component区别\n    函数this自绑定\n        React.createClass 创建的组件，其每一个成员函数的this都有React自动绑定，任何时候使用，直接使用this.method 即可，函数中的this会被正确设置\n\n    组件属性类型propTypes及其默认props属性defaultProps配置不同\n        React.createClass 在创建组件时，有关组件props的属性类型及组件默认的属性会作为组件实例的属性来配置，其中defaultProps是使用getDefaultProps的方法来获取默认组件属性的\n        React.Component 在创建组件时配置这两个对应信息时，他们是作为组件类的属性，不是组件实例的属性，也就是所谓的类的静态属性来配置的\n\n    组件初始状态state的配置不同\n      \t\tReact.createClass 创建的组件，其状态state是通过getInitialState方法来配置组件相关的状态；\n    \t\tReact.Component 创建的组件，其状态state是在constructor中像初始化组件属性一样声明的。\n\n    Mixins的支持不同\n        Mixins(混入)是面向对象编程OOP的一种实现，其作用是为了复用共有的代码，将共有的代码通过抽取为一个对象，然后通过Mixins进该对象来达到代码复用。具体可以参考React Mixin的前世今生。\n\n    React.createClass在创建组件时可以使用mixins属性，以数组的形式来混合类的集合。\n\n\n"},{"title":"封装图片加载Promise","questions_id":"gt8z4u-ufd66j-najaef-y8ytir","json_path":"gt8z4u-ufd66j-najaef-y8ytir.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 封装加载图片的promise  \n```js\nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}\n```\n","student_answer":"function loadImageAsync(url) {\n  return new Promise(function(resolve, reject) {\n    const image = new Image();\n    image.onload = function() {\n      resolve(image);\n    };\n    image.onerror = function() {\n      reject(new Error('Could not load image at ' + url));\n    };\n    image.src = url;\n  });\n};\nloadImageAsync(url);"}]