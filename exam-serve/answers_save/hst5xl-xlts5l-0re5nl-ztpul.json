[{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":"var innerWidths=document.documentElement.clientWidth\nwindow.flag=false\nwindow.onresize=function(){\n  if(innerWidth>=600){\n  if(!window.flag){\n  console.log('hellow word')\n  }\n    window.flag=true\n  }else{\n  window.flag=false\n  }\n}\n"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"三种创建方式：\n\t函数式定义的无状态组件\n\tes5原生方式React.createClass定义的组件\n\tes6形式的extends React.Component定义的组件\n区别：\n无状态函数式组件：为了创建纯展示组件，这种组件只负责根据传入的props来展示，不涉及到要state状态的操作\n\t\t\t\t\t无状态函数式组件形式上表现为一个只带有一个render方法的组件类，通过函数形式或者ES6 arrow function的形式在创建，并且该组件是无state状态的\n               组件不会被实例化，整体渲染性能得到提升\n               组件不能访问this对象\n               组件无法访问生命周期的方法\n               无状态组件只能访问输入的props，同样的props会得到同样的渲染结果，不会有副作用\n React.createClass与React.Component区别：\n①函数this自绑定：React.createClass创建的组件，其每一个成员函数的this都有React自动绑定，任何时候使用，直接使用this.method即可，函数中的this会被正确设置;React.Component创建的组件，其成员函数不会自动绑定this，需要开发者手动绑定，否则this不能获取当前组件实例对象。\n②组件属性类型propTypes及其默认props属性defaultProps配置不同：React.createClass在创建组件时，有关组件props的属性类型及组件默认的属性会作为组件实例的属性来配置，其中defaultProps是使用getDefaultProps的方法来获取默认组件属性的;React.Component在创建组件时配置这两个对应信息时，他们是作为组件类的属性，不是组件实例的属性，也就是所谓的类的静态属性来配置的。\n③组件初始状态state的配置不同：React.createClass创建的组件，其状态state是通过getInitialState方法来配置组件相关的状态；\nReact.Component创建的组件，其状态state是在constructor中像初始化组件属性一样声明的。\n④Mixins的支持不同：React.createClass在创建组件时可以使用mixins属性，以数组的形式来混合类的集合。React.Component这种形式并不支持Mixins\n"},{"title":"封装图片加载Promise","questions_id":"gt8z4u-ufd66j-najaef-y8ytir","json_path":"gt8z4u-ufd66j-najaef-y8ytir.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 封装加载图片的promise  \n```js\nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}\n```\n","student_answer":"let loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n      //loadImg代码\n    let image = new Image();\n    image.onload = function(){\n      resolve(image)\n      }\n    image.onerror = function(){\n      reject(new Error('Could not image at'+url));\n      }\n    image.src=src;\n    document.body.appendChild(image)\n    })\n}\n//async函数代码\n//ait loadImg(imgs[0])\n//ait loadImg(imgs[1])\n//ait loadImg(imgs[2])"},{"title":"防抖场景实现","questions_id":"pee5rm-didl4v-b5ty-eay7yo","json_path":"pee5rm-didl4v-b5ty-eay7yo.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"题目 有一个 input 查询框，每一次 change 都会触发一个“ a 函数”\n要求\n1.此 input 框的 change 请求 在间隔 0.3s 内的过滤掉\n2.提供一个包装函数，可以对上述的“ a 函数”请求过滤做统一的封装\n```\n<input id=\"input\" />\n```","student_answer":"function a(value){\n  console.log(`输入内容${value}`)\n}\nconst ipt = document.getElementById('input')\nfunction debounce(fun,delay){\n  let timer;\n  return function(argus){\n    const that = this\n    clearTimeout(timer)\n    timer = setTimeout(function(){\n      fun.call(that,argus)\n    },delay)\n  }\n}\nconst debounceInput = debounce(a,300)\nipt.addEventListener('change',function(e){\n  debounceInput(e.target.value)\n})"}]