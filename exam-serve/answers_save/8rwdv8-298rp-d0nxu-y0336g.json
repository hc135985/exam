[{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"let number = 0;\nfunction wa(num,res){\nif(num ===0){\n  res=[]}\n  var i=1;\n  while(i<3){\n    if(num +i<=10){\n      let arr = [...res];\n      arr.push(i);\n      if(num+i===10){\n        number++;\n        console.log(number,arr);\n      }else{\n        wa(num+i,arr);\n      }\n    }\n    i++;\n  }\n}\nwa (0);"},{"title":"大小文件读取","questions_id":"z9ndnc-qhzc6-wb5vju-0pvnzk","json_path":"z9ndnc-qhzc6-wb5vju-0pvnzk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个方法适配大小文件的读取，限定值2M","student_answer":"let fs = require(\"fs\"),\n    path = require(\"path\"),\n    readfliepath = path.join(__dirname, \"demo.js\"); //获取读取文件的路径\nclass ReadFile {\n    constructor(readfliepath) {\n        this.readfliepath = readfliepath; //传入的文件路径\n    }\n    getFile() {\n        let size = fs.statSync(this.readfliepath).size / 1024 / 1024; //文件大小的换算\n        if (!fs.existsSync(this.readfliepath)) { //检测路径是否正确否则直接返回\n            return;\n        } else {\n            if (size >= 2) { //如果文件大于2M\n                console.log(11);\n                let stream = fs.createReadStream(this.readfliepath); //读取文件\n                let writeStream = fs.createWriteStream(\"./page.js\"); //写入文件\n                stream.pipe(writeStream); //通过流式的方式\n            } else {\n                let wfile = path.join(__dirname, \"page.js\"); //写入的文件路径\n                let con = fs.readFileSync(this.readfliepath); //读取文件\n                fs.writeFileSync(wfile, con);//写入相应的文件里\n            }\n        }\n    }\n}\nnew ReadFile(readfliepath).getFile();"},{"title":"实现多维数组转换为一维数组","questions_id":"60gn1-9nj3mi-hv4xz-t6ecp","json_path":"60gn1-9nj3mi-hv4xz-t6ecp.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个函数可以使得n维数组转换为1维数组，输出","student_answer":"let array = function(arr) {\n    while (arr.some(arr => Array.isArray(arr))) {//遍历arr  检测是否是数组，如果是数组\n        arr = [].concat(...arr);  //空数组拼接遍历出的arr\n    }\n    return arr;//返回遍历好的arr；\n};\n//array([1, {},\n//     [3, [\n//         [4]\n//     ]]\n// ])\nmodule.exports = { array };"},{"title":"实现一个评星方法","questions_id":"tak6bp-2bpj3-xh6jpg-elkb8u","json_path":"tak6bp-2bpj3-xh6jpg-elkb8u.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"实现一个评星方法\n说明\n* 可根据传入的评分和总数，返回评星结果（用 ★ 和 ☆ 描述）\n* 评分必选项，四舍五入，总数可选，大于0的整数，默认为5\n* 对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回'errror'\n示例\n```\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":" function getRate(black, write) {\n\n        if (write < 0 || black > write || !Number.isInteger(write)) {\n            return \"error\";//评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回’errror’ \n        }\n        let starlength = Math.round(write) || 5;//评分四舍五入 默认5\n        for (var i = 0; i <= starlength; i++) {\n            process.stdout.write(\"☆\");\n        }\n    }\n    let star = getRate(4, 8);\n    console.log(star);"}]