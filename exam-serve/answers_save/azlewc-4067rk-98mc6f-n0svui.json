[{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"let count = 0;//定义一个计数器用来计算方法的个数\n    function jump(num, res) {\n        //如果参数是0时 返回一个空数组\n        if (num = 0) {\n            res = [];\n        }\n        //定义青蛙跳的次数\n        let i = 1;\n        //循环条件为每次跳一个或者两个台阶\n        while (i < 3) {\n             //十个台阶没跳完时\n            if (num + i <= 10) {\n                let _res = [...res];\n                _res.push(i);  //把每次跳的个数追加到数组里\n\n                //跳的台阶个数等于10\n                if (num + i === 10) {\n                    count++;  //方法+1\n                    console.log(count,_res);\n                } else {\n                    jump(num + i, _res);  \n                }\n            }\n            i++;\n        }\n    }\n    jump(0);"},{"title":"大小文件读取","questions_id":"z9ndnc-qhzc6-wb5vju-0pvnzk","json_path":"z9ndnc-qhzc6-wb5vju-0pvnzk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个方法适配大小文件的读取，限定值2M","student_answer":"let fs = require('fs');  //nodejs内置模块fs\nlet path = require('path');   //nodejs内置模块path\nlet str = '';\n\nfunction readFile(floderPath){\n    let isPath = fs.existsSync(floderPath);  //是否是路径\n    //不是路径的情况\n    if(!isPath){\n        return;   //直接返回\n    }\n    //是路径的情况：直接读取这个文件夹\n    let child = fs.readdirSync(floderPath);  //得到一个数组：该文件夹里的子文件或子文件夹\n\n    //遍历这个数组\n    child.forEach(val=>{\n        let newPath = path.join(floderPath,val);  //整合成子文件或子文件夹的路径\n        let isFile = fs.statSync(newPath);   //查看文件信息\n        let size = isFile.size / 1024 /1024;  //文件的大小\n        if(isFile.isFile()){\n            //如果大小大于2\n            if(size>2){\n                //流式读取\n                let readStream = fs.createReadStream(newPath);\n                let writeStream = fs.createWriteStream('./one.mp4');\n                readStream.pipe(writeStream);\n            }else{\n                str += `${newPath}`;  //是小于2m文件就直接追加到空字符串 \n            }\n        }else{\n            readFile(newPath);   //是文件夹就调用函数  参数为是文件夹的路径\n        }\n    })    \n    fs.writeFileSync('./show.js',str); //写\n}\n\nlet allPath = path.join(__dirname,'./dir'); //整合要读取的路径\nreadFile(allPath);\n"},{"title":"实现多维数组转换为一维数组","questions_id":"60gn1-9nj3mi-hv4xz-t6ecp","json_path":"60gn1-9nj3mi-hv4xz-t6ecp.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个函数可以使得n维数组转换为1维数组，输出","student_answer":"function runFn(arr) {\n            // while满足条件才循环 不满足就不循环\n            //所以循环条件是 用方法遍历arr  是数组就是true \n            while(arr.some(val=>Array.isArray(val))){\n                arr = [].concat(...arr);  //...arr  解构出来的值用concat拼接到新数组  \n            };\n            return arr;\n        }\n        console.log(runFn([1, [2, [3]]]));"},{"title":"实现一个评星方法","questions_id":"tak6bp-2bpj3-xh6jpg-elkb8u","json_path":"tak6bp-2bpj3-xh6jpg-elkb8u.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"实现一个评星方法\n说明\n* 可根据传入的评分和总数，返回评星结果（用 ★ 和 ☆ 描述）\n* 评分必选项，四舍五入，总数可选，大于0的整数，默认为5\n* 对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回'errror'\n示例\n```\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"function getRate(num, sum) {\n            if (num < 0 && sum == null) {\n                return 'error';\n            } else if (num > sum) {\n                return 'error';\n            } else if (num < sum) {\n            }\n        }\n\n        console.log(getRate(4));\n        console.log(getRate(4, 8));\n        console.log(getRate(3.4));\n        console.log(getRate(5, 2));\n        console.log(getRate(-2));\n        console.log(getRate(3, 5.5));"}]