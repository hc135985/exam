[{"title":"computed 和 watch 区别","questions_id":"joo9h2-q79phw-pskuido-ua4t7k","json_path":"joo9h2-q79phw-pskuido-ua4t7k.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"computed 和 watch 区别?\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"Vue的watch属性可以用来监听data属性中数据的变化，同时还可以直接在监听的function中使用参数来获取新值与旧值。\nwatch:{\n    firstname:function(newValue,OldValue){\n     console.log(newValue);\n    console.log(OldValue);\n     }\n }其中第一个参数是新值，第二个参数是旧值\n同时Watch还可以被用来监听路由router的变化，只是这里的监听的元素是固定的\n\ncomputed属性的作用与watch类似，也可以监听属性的变化。\n\ncomputed 属性的结果会被缓存，除非依赖的响应式属性变化才会重新计算。主要当作属性来使用；\nwatch 一个对象，键是需要观察的表达式，值是对应回调函数。主要用来监听某些特定数据的变化，从而进行某些具体的业务逻辑操作；可以看作是 computed 和 methods 的结合体；"},{"title":"实现双向数据绑定","questions_id":"nodsz-nme56x-51nrc-tklsfn","json_path":"nodsz-nme56x-51nrc-tklsfn.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"使用js实现一个数据双向绑定效果, input中输入的内容同步到p标签中\n```\n<div id=\"app\">\n    <input type=\"text\" id=\"txt\">\n    <p id=\"show-txt\"></p>\n</div>\n```","student_answer":"<div id=\"app\">\n    <input type=\"text\" id=\"txt\">\n    <p id=\"show-txt\"></p>\n</div>\n<script>\n      var obj={},\n        Object.defineProperty(obj,'txt',{\n        get:function(){\n          return obj\n        },\n        set:function(newValue){\n          document.getElementById('txt').value=newValue\n          document.getElementById(\"show-txt\").innerHTML=newValue\n        }\n      })\n    document.addEventListener('keyup',function(e){\n      obj.txt=e.target.value\n    })\n</script>"},{"title":"Vue导航守卫做鉴权处理","questions_id":"42cuvb-7216fb-zlkab2-wwns3d","json_path":"42cuvb-7216fb-zlkab2-wwns3d.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"wbxm4-jf8q6k-lvt2ca-ze96mg","exam_name":"月考","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 在Vue中我们可以使用导航守卫做鉴权，现有要求如下：  \n可以根据getToken()是否返回token判断  \n- 1.如果用户已经登陆  \n  - a. 如果用户要去/login页面，则重定向到/路径  \n  - b. 如果用户要去其他页面，则不做处理直接跳转    \n- 2.如果用户未登陆  \n  - a. 如果用户要去的页面在白名单内，则不做处理直接跳转  \n  - b. 如果用户要去的页面不在白名单内，则重定向到/login页面，并把要去的页面路径作为查询字符串的query的值\n\n```js\nimport router from './router'\nimport { getToken } from '@/utils/auth' // getToken from cookie\n\nconst whiteList = ['/login', '/register', '/auth-redirect']// no redirect whitelist\n\nrouter.beforeEach((to, from, next) => {\n  if (getToken()) { // determine if there has token\n    // write your code here\n  } else {\n    // write your code here\n  }\n})\n```","student_answer":"{ path: '/repository',\n name: 'repository', \n meta: { \n  requireAuth: true,  \n },\n        component: Repository    \n},\n  router.beforeEach((to, from, next) => {\n if (to.matched.some(record => record.meta.requireAuth)){// 判断该路由是否需要登录权限\n   if (token) { // 判断当前的token是否存在\n  next();\n }\n else {\n  next({\n  path: '/login',\n  query: {redirect: to.fullPath}// 将跳转的路由path作为参数，登录成功后跳转到该路由\n    })\n }\n }\n else {\n next();\n }\n});\n"},{"title":"Vue基础知识","questions_id":"uecyx-3qim4-rwk9o-v43sj8","json_path":"uecyx-3qim4-rwk9o-v43sj8.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"wbxm4-jf8q6k-lvt2ca-ze96mg","exam_name":"月考","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 谈谈对Vue响应原理的理解?","student_answer":"vue将data初始化为一个Observer并对对象中的每个值，重写了其中的get、set，data中的每个key，都有一个独立的依赖收集器。\n在get中，向依赖收集器添加了监听\n在mount时，实例了一个Watcher，将收集器的目标指向了当前Watcher\n在data值发生变更时，触发set，触发了依赖收集器中的所有监听的更新，来触发Watcher.update"}]