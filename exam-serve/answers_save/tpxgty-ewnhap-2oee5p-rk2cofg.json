[{"title":"commonjs规范","questions_id":"ayf32j-5kv76-qvfqh-cigaoo","json_path":"ayf32j-5kv76-qvfqh-cigaoo.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"请简述node环境下的commonjs规范（说出如何导出模块，如何引入模块，如何创建模块）？","student_answer":"导出模块 module.exports\n module.exports属性表示当前模块对外输出的接口，其他文件加载该模块，实际上就是读取module.exports变量。        exports变量node为每一个模块提供了一个exports变量(可以说是一个对象)，指向 module.exports。这相当于每个模块中都有一句这样的命令 var exports = module.exports;\n\n.模块引入：通过require()方法并传入一个模块标识来引入一个模块的API到当前上下文中，如var math = require('math');\n创建一个文件就相等于创建一个模块    一个文件相等于一个模块\n"},{"title":"let和var的区别","questions_id":"h7f6hq-cezl0g-fyu3o-6onwjf","json_path":"h7f6hq-cezl0g-fyu3o-6onwjf.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"在声明变量的时候，使用`let`和`var`有什么区别呢？","student_answer":"let : 变量只能声明一次；var : 变量可以多次声明\nvar 存在变量提升 但let没有\nlet 存在块级作用域，但var没有；\nlet不可以重复定义变量,var可以重复定义"},{"title":"解构赋值和数组的map方法","questions_id":"izvfy-572mw-thxrmm-7aba5s","json_path":"izvfy-572mw-thxrmm-7aba5s.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"如下：是一段html结构\n```   \n    <ul>\n        <li key=\"1\"></li>\n        <li key=\"2\"></li>\n        <li key=\"3\"></li>\n        <li key=\"4\"></li>\n    </ul>\n```\n加载一段对应的javaScript代码\n\n```\n        let oUl = document.getElementsByTagName('ul')[0];\n        let li = document.getElementsByTagName('li');\n        const {map,forEach} = [];\n        li = map.call(li,item=>{\n            let key = 2 * item.getAttribute('key') - 1;\n            item.setAttribute('key',key);\n            return item;\n        });\n        oUl.innerHTML = '';\n        forEach.call(li,item=>{\n            oUl.appendChild(item);\n        })\n```\n\n请结合html和javaScript描述出这段代码的运行效果，并给每句代码添加注释，在注释中指明该句代码的含义","student_answer":"JavaScript\n1、 获取到ul元素\n<ul>\n        <li key=\"1\"></li>\n        <li key=\"2\"></li>\n        <li key=\"3\"></li>\n        <li key=\"4\"></li>\n    </ul>\n2、获取到所有li元素\n     [li, li, li, li]\n3.用map循环遍历li元素 并改变 每个li里key属性的值 并返回li集合的一个数组\n\t\t [li, li, li, li]\n这时li中的key值变成了 1 3 5 7\n\t\t\t<li key=\"1\"></li>\n        <li key=\"3\"></li>\n        <li key=\"5\"></li>\n        <li key=\"7\"></li>\n\n4. 先清空ul的innerHTML内容   遍历最新的li集合   然后追加到ul元素中 最后生成\n\t\n<ul>\n       <li key=\"1\"></li>\n        <li key=\"3\"></li>\n        <li key=\"5\"></li>\n        <li key=\"7\"></li>\n    </ul>\n"},{"title":"async配合transition实现自定义动画","questions_id":"bqq54a-jly2z9-m9fg7pj-oio193","json_path":"bqq54a-jly2z9-m9fg7pj-oio193.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"html结构\n```html\n<div id=\"box\"></div>\n```\ncss样式\n```css\n#box{\n  width:100px; height:100px; background-color:red; border-radius:50%; transition:transform 0.5s;\n}\n```\njavaScript代码\n```js\n        const oBox = document.getElementById('box');\n        oBox.addEventListener('transitionend',()=>{\n            let {x,y} = oBox;\n            moveTo.reslove({x,y});\n        },false);\n        function moveTo(x,y){\n            return new Promise((reslove,reject)=>{\n                moveTo.reslove = reslove;\n                oBox.x = x;\n                oBox.y = y;\n                oBox.style.transform = `translate(${x}px,${y}px)`;\n            })\n        }\n```\n\n补全以上代码，使点击oBox后，使oBox走出一个  W 的轨迹（使用async函数实现），并简单写出整体的代码思路。","student_answer":"  \n\n    //实现w走位\n    //小球走动的位置 共四个点\n    let arr = [{ //第一个点\n        x: 0,\n        y: 0\n    }, { //第二个点\n        x: 100,\n        y: 150\n    }, { //第三个点\n        x: 200,\n        y: 0\n    }, { //第四个点\n        x: 300,\n        y: 150\n    }, { //第五个点\n        x: 400,\n        y: 0\n    }];\n    //点击执行动画\n    oBox.onclick = async function() {\n        for (let v of arr) {\n            await moveTo(v.x, v.y)\n        }\n    }\n    "},{"title":"输入的reduce方法","questions_id":"zyocwi-drka9-kx8vv-blrmw9p","json_path":"zyocwi-drka9-kx8vv-blrmw9p.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"现在有一个数组如下：\n```js\n    const car = [\n            {\n                groupName:'水果',\n                type:[\n                    {\n                        name:'苹果',\n                        price:10\n                    },\n                    {\n                        name:'橘子',\n                        price:40\n                    },\n                    {\n                        name:'香蕉',\n                        price:90\n                    }\n                ]\n            },\n            {\n                groupName:'蔬菜',\n                type:[\n                    {\n                        name:'芹菜',\n                        price:10\n                    },\n                    {\n                        name:'菠菜',\n                        price:15\n                    },\n                    {\n                        name:'土豆',\n                        price:8\n                    }\n                ]\n            }\n        ]\n```\n\n根据上述数据，编写一个函数，该函数(computedPrice)接收上述的数据作为参数，返回一个对象，请输入用数组的reduce方法实现。对象的格式如下\n\n```js\n       {\n            allPrice:所有商品的总价格,\n            group:[\n                {\n                    typeName:'水果',\n                    price:所有水果的总价格\n                },\n                {\n                    typeName:'蔬菜',\n                    price:所有蔬菜的总价格\n                }\n            ]\n        } \n```  ","student_answer":"const car = [{\n        groupName: '水果',\n        type: [{\n            name: '苹果',\n            price: 10\n        }, {\n            name: '橘子',\n            price: 40\n        }, {\n            name: '香蕉',\n            price: 90\n        }]\n    }, {\n        groupName: '蔬菜',\n        type: [{\n            name: '芹菜',\n            price: 10\n        }, {\n            name: '菠菜',\n            price: 15\n        }, {\n            name: '土豆',\n            price: 8\n        }]\n    }]\n\n    let arrs = car.map(item => {\n        let obj = {\n\n            groupName: '',\n            price: \"\"\n        };\n        let arr = [...item.type];\n        let prices = arr.map(val => val.price);\n        obj.groupName = item[\"groupName\"]\n        obj.price = fn(prices);\n        return obj\n\n\n    });\n\n    console.log(\"所有商品的总价格\", ...arrs);\n\n    function fn(...n) {\n        return `${n[0].reduce((prev,next) => prev+next)}`\n    }"}]