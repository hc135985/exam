[{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":"window.onresize = ()=>{\n  if(document.documentElement.clientWidth>=600){\n    const Time=setTimeout(function(){\n    },800)\n\n    if(Time==1){\n      clearTimeout(Time)\n      console.log(\"hello\")\n    }\n\n  }\n  //document.documentElement.clientWidth>=600?console.log(\"hellow\"):null\n}"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":" 1，函数式定义的无状态函数式组件,它是为了创建纯展示组件，这种组件只负责根据传入的props来展示，没有state状态的操作，不能访问this对象和生命周期，不会被实例化，渲染性能得到提升\n           2，es5原生方式React.createClass定义的组件,这种组件必须实例化，可以访问声明周期，其状态state是通过getInitialState方法来配置组件相关的状态；缺点自绑定函数方法，导致不必要的性能开销，增加代码过时的可能性。\n           3，es6形式的extends React.Component定义的组件，它创建的组件，其成员函数不会自动绑定this，需要开发者手动绑定，否则this不能获取当前组件实例对象。其状态state是在constructor中像初始化组件属性一样声明的。"},{"title":"封装图片加载Promise","questions_id":"gt8z4u-ufd66j-najaef-y8ytir","json_path":"gt8z4u-ufd66j-najaef-y8ytir.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 封装加载图片的promise  \n```js\nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}\n```\n","student_answer":"let loadImg = (src)=>{\n  return new Promise((resolve, reject)=>{\n    const image = new Image();\n    image.onload = function() {\n      resolve(image);\n    };\n    image.onerror = function() {\n      reject(new Error(\"加载失败\"));\n    };\n    image.src = src;\n  })\n}src"},{"title":"防抖场景实现","questions_id":"pee5rm-didl4v-b5ty-eay7yo","json_path":"pee5rm-didl4v-b5ty-eay7yo.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"题目 有一个 input 查询框，每一次 change 都会触发一个“ a 函数”\n要求\n1.此 input 框的 change 请求 在间隔 0.3s 内的过滤掉\n2.提供一个包装函数，可以对上述的“ a 函数”请求过滤做统一的封装\n```\n<input id=\"input\" />\n```","student_answer":"function a(value){\n\t\tconsole.log(`输入的内容${value}`)\n\t}\n\tconst ipt=document.getElementById('inp')\n\tfunction debounce(fun,delay){\n\t\tlet timer;\n\t\treturn function (args){\n\t\t\tconst that=this\n\t\t\tclearTimeout(timer)\n\t\t\ttimer=setTimeout(function(){\n\t\t\t\tfun.call(that,args)\n\t\t\t})\n\t\t}\n\t}\n\tconst debounceInput=debounce(a,300)\n\tipt.addEventListener('change',function(e){\n\t\tdebounceInput(e.target.value)\n\t})"}]