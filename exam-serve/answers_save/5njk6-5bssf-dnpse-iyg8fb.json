[{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"public int JumpFloor(int target) {\n        int x=1, y=2, z;\n        if(target == 1){\n            return 1;\n        }\n        if(target == 2){\n            return 2;\n        }\n        for(int i = 3; i <= target; i ++){\n            z = y;\n            y = x + y;\n            x = z;\n        }\n        return y;\n}"},{"title":"大小文件读取","questions_id":"z9ndnc-qhzc6-wb5vju-0pvnzk","json_path":"z9ndnc-qhzc6-wb5vju-0pvnzk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个方法适配大小文件的读取，限定值2M","student_answer":"(function(win,undefined){\n    var fso = new ActiveXObject(\"Scripting.FileSystemObject\");\n    var file=null;\n    var FileUtil=function(){\n \n    };\n    FileUtil.prototype={\n        createTextFile:function(filename){\n            file=fso.CreateTextFile(filename, true);\n        },\n        write:function(content){\n            file.WriteLine(content);\n        },\n        closeStream:function(){\n            file=null;\n        }\n    }\n    win.FileUtil=FileUtil; \n}(window))"},{"title":"实现多维数组转换为一维数组","questions_id":"60gn1-9nj3mi-hv4xz-t6ecp","json_path":"60gn1-9nj3mi-hv4xz-t6ecp.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个函数可以使得n维数组转换为1维数组，输出","student_answer":"--定义一个三维数组和一个空的一维数组\nlocal arr3 = {\n  {{0, 1, 2, 3}, {0, 1, 2, 3}, {0, 1, 2, 3}},\n  {{0, 1, 2, 3}, {0, 1, 2, 3}, {0, 1, 2, 3}},\n};\nlocal arr1 = {};\n\n--可由三维数组得\nlocal maxI, maxJ, maxK = 2, 3, 4;\n\n--遍历\nlocal function convert()\n  for i=1, maxI do\n    for j=1, maxJ do\n      for k=1, maxK do\n        local n = (i-1) * (maxJ * maxK) + (j-1) * maxK + k;\n        arr1[n] = arr3[i][j][k];\n      end\n    end\n  end\nend\n\nconvert()"},{"title":"实现一个评星方法","questions_id":"tak6bp-2bpj3-xh6jpg-elkb8u","json_path":"tak6bp-2bpj3-xh6jpg-elkb8u.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"实现一个评星方法\n说明\n* 可根据传入的评分和总数，返回评星结果（用 ★ 和 ☆ 描述）\n* 评分必选项，四舍五入，总数可选，大于0的整数，默认为5\n* 对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回'errror'\n示例\n```\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"window.onload = function(){\n\tstars(7) //  满分 7 分 根据 html 自定义星星数\n}\nfunction stars(size){\n        //获取总的星星数\n        var stars = document.querySelectorAll('.stars> span')\n        // 得分数组\n        var scores=[]\n        // 评分项数组\n        var starArrs = []\n        //数组分割\n        for(var i = 0; i<Math.ceil(stars.length/size);i++ ){\n            var start = i*size\n            var end = start+size\n            //初始评分为0\n            scores.push(0)\n            starArrs.push([].slice.call(stars,start,end))\n        }\n        // 事件委托父元素\n        document.querySelector('.stars-wrapper').onclick = function(e){\n            //获取点击的星星 在 总数组中的index\n            var index = [].indexOf.call(stars,e.target)\n            // 如果点击的 不是星星 \n            if(index===-1) return\n            // 判断 该星星归属 评分项数组\n            var i = parseInt(index/size)\n            var starArr =starArrs[ i ]\n             // 计算归属评分项 的评分\n             index = index%size\n             // 评分未更改\n             if(index ===( scores[ i ] - 1)){\n             \tconsole.log(scores)\n             \t return scores\n            }\n            scores[ i ] =  index+1\n            \n               //显示评分红色托马斯基柴夫波娃效果\n            starArr.forEach(function(star,i){\n                if(i<= index){\n                    star.classList.toggle('active',true)\n                }else{\n                    star.classList.toggle('active',false)\n                }\n            })\n            console.log(scores)\n            return scores\n        }\n    }\n// 数组分割 可以自定义成一个函数\n  function arrayChunck(arr,size){\n        if(!arr.length) return\n        var arrs = []\n        for(var i=0; i< Math.ceil(arr.length/7);i++){\n            var start = i*size\n            var end = start+size\n            arrs.push([].slice.call(arr,start,end))\n        }\n        return arrs\n    }"}]