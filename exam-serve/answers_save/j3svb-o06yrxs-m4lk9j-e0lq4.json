[{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":"window.onresize = function() {\n\tthis.innerWidth >= 600 && console.log(\"hello\");\n};"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"创建方式：\n1：函数式组件\n\tfunction Components() { return (<div></div>); }\n2：es5原生React.createClass\n\tvar Components = React.createClass({ render: function () { return (<div></div>); } })\n3: es6继承React.Component\n\tclass Components extends React.Component { render() { return (<div></div>); } }\n区别：\n1：函数式组件 无state，有props，不能访问this和生命周期，不能实例化\n2：es5 可以实例化，有state和prop，可以访问生命周期，但是会自动绑定函数this造成不必要的性能消耗，且不够直观，目前已被es6替代\n3：es6 可以实例化，有state和prop，可以访问生命周期，不会自动绑定函数this必须手动绑定，使用方式简单，直观高效"},{"title":"封装图片加载Promise","questions_id":"gt8z4u-ufd66j-najaef-y8ytir","json_path":"gt8z4u-ufd66j-najaef-y8ytir.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 封装加载图片的promise  \n```js\nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}\n```\n","student_answer":"let img = new Image();\nimg.src = \"路径\";\nimg.onload = function() {\n\tresolve(\"success\");\n};\nimg.onerror = function() {\n\treject(\"error\");\n};"}]