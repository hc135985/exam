[{"title":"创建一副扑克牌","questions_id":"4vu7t9-t9vv08-chvz3r-n8i3nq","json_path":"4vu7t9-t9vv08-chvz3r-n8i3nq.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"dingshaoshan","user_id":"ypay2t-7uxsd","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"一副扑克牌有54张牌，其中52张是正牌，另2张是副牌（大王和小王）。\n\n52张正牌又均分为13张一组，并以黑桃、红桃、梅花、方块四种花色表示各组，每组花色的牌包括从1-10（1通常表示为A）以及J、Q、K标示的13张牌。\n\n要求：根据以下数据生成一副扑克牌（数组）。\n\n    var types = [\"红桃\", \"黑桃\", \"方块\", \"梅花\"]; // 花色\n    var points = [\"A\", 2, 3, 4, 5, 6, 7, 8, 9, 10, \"J\", \"Q\", \"K\"]; // 点数\n    var cards = [\"大王\", \"小王\"]; // 所有扑克牌","student_answer":"var types = [“红桃”, “黑桃”, “方块”, “梅花”], // 花色\npoints = [“A”, 2, 3, 4, 5, 6, 7, 8, 9, 10, “J”, “Q”, “K”], // 点数\ncards = [“大王”, “小王”]; // 所有扑克牌\n// 遍历所有花色与点数\n\tfor (var i in types) {\n\t\tfor (var j in points) {\n\t\t\tcards.push(types[i] + points[j])\n\t\t}\n\t}\n\t// 显示\n\tconsole.log(cards);\n\n\t// 洗牌\n\t// 遍历 cards 数组\n\tfor (var i = 0, len = cards.length; i < len; i++) {\n\t\t// 生成一个随机的数组下标(0~53)\n\t\tvar index = Math.floor(Math.random() * len);\n\t\t// 将当前遍历到的元素与随机下标处的元素交换位置\n\t\tvar tmp = cards[i];\n\t\tcards[i] = cards[index];\n\t\tcards[index] = tmp;\n\t}\n\n\t/*\n\tcards.sort(function(){\n\t\treturn Math.random() - 0.5;\n\t});*/\n\n\tconsole.log(cards);\n\n\t// 发牌\n\tvar first = cards.splice(0, 17);\n\tvar second = cards.splice(0, 17);\n\tvar third = cards.splice(0, 17);\n\n\tconsole.log(first)\n\tconsole.log(second)\n\tconsole.log(third)\n\tconsole.log(cards)\n"},{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":"<script>\n  \n  let str =  '';\n\twindow.onresize = function(){\n\t\t\tif(document.body.clientWidth>= 600){\n\t\t\t\t\tif(str === \"\"){\n\t\t\t\t\t\tstr='hello';\n\t\t\t\t\t\tconsole.log(str);\n\t\t\t\t\t}else{\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t}\n\t}\n\n  </script>"},{"title":"二叉树路径总和","questions_id":"41lnu-hbmz3-n6v989-hhfvtu","json_path":"41lnu-hbmz3-n6v989-hhfvtu.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"heinan","user_id":"fdjfr-msxp8a","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"给定一个二叉树和一个目标和，判断该树中是否存在根节点到叶子节点的路径，这条路径上所有节点值相加等于目标和。\n\n说明: 叶子节点是指没有子节点的节点。\n\n示例一：\n给定如下二叉树，以及目标和 sum = 22\n```md\n             5\n             / \\\n            4   8\n           /   / \\\n          11  13  4\n         /  \\      \\\n        7    2      1\n```\n返回 true, 因为存在目标和为 22 的根节点到叶子节点的路径 5->4->11->2。","student_answer":"/**\n     * @param node 根节点\n     * @param nodeList 到根节点为止已经形成的路径\n     * @param pathList 存储所有路径结果的结果集\n     */\n    private void leftRight(TreeNode node, List<Integer> nodeList, List<List<Integer>> pathList) {\n        if (node.left==null && node.right==null){\n            pathList.add(nodeList);\n        }\n        if(node.right!=null){                   /**如果右节点不为空*/\n            List nodeList2 = new ArrayList();\n            nodeList2.addAll(nodeList);        /**把当前节点的路径复制一份*/\n            nodeList2.add(node.right.val);      /**加入右节点的值路径*/\n            if(node.right.left==null && node.right.right==null){\n                pathList.add(nodeList2);        /**如果右节点是个叶子节点，就把这个路径放入结果集*/\n            }else{\n                leftRight(node.right,nodeList2,pathList); /**如果右节点不是叶子节点，进行下一次递归*/\n            }\n        }\n        if(node.left!=null){\n            nodeList.add(node.left.val);       /**遍历的左节点都用参数传进来的list，不新建路径列表（使用参数的节点处理得放在后面，因为处理完之后参数会被改变）*/\n            if(node.left.left==null && node.left.right==null){\n                pathList.add(nodeList);       /**如果左节点是个叶子节点，就把这个路径放入结果集*/\n            }else{\n                leftRight(node.left, nodeList,pathList); /**如果左节点不是叶子节点，进行下一次递归*/\n            }\n        }\n\n    }"},{"title":"最高产的猪","questions_id":"oynzjn-gvvv5s-uowecl-m4yg2h","json_path":"oynzjn-gvvv5s-uowecl-m4yg2h.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"dingshaoshan","user_id":"ypay2t-7uxsd","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"我们用一个 HTML 结构来表示一头猪的子子孙孙：\n<div class=\"pig\">\n  <div class=\"pig\">\n    <div class=\"pig\">\n      <div class=\"pig\"></div>\n    </div>\n    <div class=\"pig\">\n      <div class=\"pig\"></div>\n    </div>\n  </div>\n  <div class=\"pig\">\n    <div class=\"pig\"></div>\n    <div class=\"pig\"></div>\n  </div>\n  <div class=\"pig\">\n    <div class=\"pig\">\n      <div class=\"pig\"></div>\n      <div class=\"pig\"></div>\n      <div class=\"pig\"></div>\n      <div class=\"pig\"></div>\n      <div class=\"pig\"></div>\n    </div>\n  </div>\n</div>\n\n每个 DOM 节点都是一头猪，子节点就是这头猪的孩子。\n请你完成一个函数 mostProductivePigCount 它接受一个 DOM 节点作为参数，返回一个数组。存放同代猪的孩子的数量。\n\n比如第一代猪的孩子有3个，第二代猪的孩子分别有[2, 2, 1]，第三代猪的孩子分别有[1,1,0,0,5]","student_answer":"\n<ul id='list' style='color: red'>\n  <li class='item'>Item 1</li>\n  <li class='item'>Item 2</li>\n  <li class='item'>Item 3</li>\n</ul>\n\nconst ul = {\n  tagName: 'ul', // 节点标签名\n  props: { // DOM的属性，用一个对象存储键值对\n    id: 'list',\n    style: 'color: red'\n  },\n  children: [ // 该节点的子节点\n    {tagName: 'li', props: {class: 'item'}, children: [\"Item 1\"]},\n    {tagName: 'li', props: {class: 'item'}, children: [\"Item 2\"]},\n    {tagName: 'li', props: {class: 'item'}, children: [\"Item 3\"]},\n  ]\n}\n//tagName：代表 DOM 节点的标签名。\n//props：这个 DOM 节点的属性，用一个对象表示。\n//children：这个 DOM 节点的子节点，是一个数组；数组的元素可以是 字符串 或者 对象。如果是字符串就表示这个子节点是文本节点，否则就表示是另/外一个 DOM 节点\n\nconst ul = h('ul', {id: 'list', style: 'color: red'}, [\n  h('li', {class: 'item'}, ['Item 1']),\n  h('li', {class: 'item'}, ['Item 2']),\n  h('li', {class: 'item'}, ['Item 3'])\n])\n\n"}]