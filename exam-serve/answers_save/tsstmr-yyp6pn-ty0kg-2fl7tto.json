[{"title":"commonjs规范","questions_id":"ayf32j-5kv76-qvfqh-cigaoo","json_path":"ayf32j-5kv76-qvfqh-cigaoo.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"请简述node环境下的commonjs规范（说出如何导出模块，如何引入模块，如何创建模块）？","student_answer":"只能用于服务端\n创建：var sample  = require('./module.js');\n\t console.log( sample.方法名(参数));\n    require('./module.js');，我们调用require模块，前面创建了名为module.js的模块。\n引入：require(module path路径)\n抛出：两种方法：1）exports 不可以直接赋值，可以添加方法或属性添加  例：exporets.name = ...\n\t\t\t\t2)module.exports  可以直接赋值，可以抛出任意类型的值，出现多个时，抛出最后一个\n"},{"title":"let和var的区别","questions_id":"h7f6hq-cezl0g-fyu3o-6onwjf","json_path":"h7f6hq-cezl0g-fyu3o-6onwjf.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"在声明变量的时候，使用`let`和`var`有什么区别呢？","student_answer":"var 声明的变量有声明提升的过程  而let没有\n例：console.log(a); //输出undefined(注意要注释掉下面一行才能运行)\n   console.log(b); //直接报错：ReferenceError: letTest is not defined\n   var a = 'test var OK.';\n   let b = 'test let OK.';\n重复声明同一个变量 let会报错  var 则会覆盖前一个\n\nlet 还会产生块级作用域 而var不会\n例： var a = 'test var OK.';\n   let b = 'test let OK.';\n   {\n   var a = 'varTest changed.';\n   let b = 'letTest changed.';\n   }\n"},{"title":"解构赋值和数组的map方法","questions_id":"izvfy-572mw-thxrmm-7aba5s","json_path":"izvfy-572mw-thxrmm-7aba5s.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"如下：是一段html结构\n```   \n    <ul>\n        <li key=\"1\"></li>\n        <li key=\"2\"></li>\n        <li key=\"3\"></li>\n        <li key=\"4\"></li>\n    </ul>\n```\n加载一段对应的javaScript代码\n\n```\n        let oUl = document.getElementsByTagName('ul')[0];\n        let li = document.getElementsByTagName('li');\n        const {map,forEach} = [];\n        li = map.call(li,item=>{\n            let key = 2 * item.getAttribute('key') - 1;\n            item.setAttribute('key',key);\n            return item;\n        });\n        oUl.innerHTML = '';\n        forEach.call(li,item=>{\n            oUl.appendChild(item);\n        })\n```\n\n请结合html和javaScript描述出这段代码的运行效果，并给每句代码添加注释，在注释中指明该句代码的含义","student_answer":"\t\t\tlet oUl = document.getElementsByTagName('ul')[0];//获取ul\n        let li = document.getElementsByTagName('li');//获取li\n        const {map,forEach} = [];//数组结构 把map方法和forEach方法结构出来\n        li = map.call(li,item=>{  //map就可以直接用 遍历li\n            let key = 2 * item.getAttribute('key') - 1;//声明一个key变量等于每个li自定义属性key的2倍减一\n            item.setAttribute('key',key);//让每个li的自定义属性key的值全都变成上一行的key变量的值\n            return item;//返回每个li\n        });\n        oUl.innerHTML = '';//直接把ul里面内容清空。。。\n        forEach.call(li,item=>{//遍历li\n            oUl.appendChild(item);//把新的li全都追加到ul里面\n        })\n"},{"title":"async配合transition实现自定义动画","questions_id":"bqq54a-jly2z9-m9fg7pj-oio193","json_path":"bqq54a-jly2z9-m9fg7pj-oio193.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"html结构\n```html\n<div id=\"box\"></div>\n```\ncss样式\n```css\n#box{\n  width:100px; height:100px; background-color:red; border-radius:50%; transition:transform 0.5s;\n}\n```\njavaScript代码\n```js\n        const oBox = document.getElementById('box');\n        oBox.addEventListener('transitionend',()=>{\n            let {x,y} = oBox;\n            moveTo.reslove({x,y});\n        },false);\n        function moveTo(x,y){\n            return new Promise((reslove,reject)=>{\n                moveTo.reslove = reslove;\n                oBox.x = x;\n                oBox.y = y;\n                oBox.style.transform = `translate(${x}px,${y}px)`;\n            })\n        }\n```\n\n补全以上代码，使点击oBox后，使oBox走出一个  W 的轨迹（使用async函数实现），并简单写出整体的代码思路。","student_answer":"const runW = [\n            {x:0,y:0},\n            {x:100,y:200},\n            {x:200,y:0},\n            {x:300,y:200},\n            {x:400,y:0},\n        ]\noBox.onclick = async function(){\n            for( let i of runW){\n                await move(i.x,i.y)\n            }\n        }"},{"title":"输入的reduce方法","questions_id":"zyocwi-drka9-kx8vv-blrmw9p","json_path":"zyocwi-drka9-kx8vv-blrmw9p.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"现在有一个数组如下：\n```js\n    const car = [\n            {\n                groupName:'水果',\n                type:[\n                    {\n                        name:'苹果',\n                        price:10\n                    },\n                    {\n                        name:'橘子',\n                        price:40\n                    },\n                    {\n                        name:'香蕉',\n                        price:90\n                    }\n                ]\n            },\n            {\n                groupName:'蔬菜',\n                type:[\n                    {\n                        name:'芹菜',\n                        price:10\n                    },\n                    {\n                        name:'菠菜',\n                        price:15\n                    },\n                    {\n                        name:'土豆',\n                        price:8\n                    }\n                ]\n            }\n        ]\n```\n\n根据上述数据，编写一个函数，该函数(computedPrice)接收上述的数据作为参数，返回一个对象，请输入用数组的reduce方法实现。对象的格式如下\n\n```js\n       {\n            allPrice:所有商品的总价格,\n            group:[\n                {\n                    typeName:'水果',\n                    price:所有水果的总价格\n                },\n                {\n                    typeName:'蔬菜',\n                    price:所有蔬菜的总价格\n                }\n            ]\n        } \n```  ","student_answer":"function obj(car) {\n            let sum = car.map(item => {\n                return item.type.reduce((prev, cur) => {\n                    return cur.price + prev;\n                }, 0)\n            })\n            return ` {\n                    allPrice:${sum[0]+sum[1]},\n                    group:[\n                        {\n                            typeName:'水果',\n                            price:${sum[0]}\n                        },\n                        {\n                            typeName:'蔬菜',\n                            price:${sum[1]}\n                        }\n                    ]\n                } `\n        }\n\n        console.log(obj(car))"}]