[{"title":"Vue基础知识","questions_id":"05snch-6eq8dn-szfd6q-t34nld","json_path":"05snch-6eq8dn-szfd6q-t34nld.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 控制元素显示隐藏的指令v-if与v-show之间的区别及适用场景？","student_answer":"控制元素显示隐藏的指令v-if与v-show之间的区别及适用场景？\n   区别：\n     相同：v-if 可以动态控制dom元素显示隐藏，v-show 也可以动态控制dom元素显示隐藏\n     不同点：v-if显示隐藏是将dom元素整个添加或删除，\n          v-show隐藏则是为该元素添加css--display:none，dom元素还存在\n          \n          列子1：\n          <div id=\"app\">\n            <span>今天下雨了</span>\n             <span>昨天下雨了</span>\n            </div>\n           var a=new Vue({\n            el:\"#app\",\n             data:{\n             isIf:false,\n               isShow:false\n             }\n          })\n          改为false后，第一个span是直接被移除掉了\n          \n          列子2\n           <div id=\"app\">\n            <span>今天下雨了</span>\n             <span style=\"display：none\">昨天下雨了</span>\n            </div>\n           var a=new Vue({\n            el:\"#app\",\n             data:{\n             isIf:true,\n               isShow:true\n             }\n          })\n          \n       显示隐藏切换，只是会修改element style为display:\"\"或者display:none,并不会覆盖掉或修改已存在的css属性。\n          "},{"title":"使用async函数实现多张图片的依次加载（哪张加载完哪张添加到页面）","questions_id":"5oxqyl-8dnbaa-3dt3o9-qrecrk","json_path":"5oxqyl-8dnbaa-3dt3o9-qrecrk.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 使用async函数实现多张图片的依次加载（哪张加载完哪张添加到页面）\n\n```js\n// 封装加载图片的promise  \nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}   \nconst imgs = ['url1', 'url2', 'url3'];\n// 依次加载图片\nasync function fAsync(imgs){\n   // write your code here\n}\n\nfAsync(imgs);\n```","student_answer":"let loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n        let img = document.createElement('img')\n            img.src = src\n            document.body.append(img)\n            setTimeout(() => {\n                resolve(true)\n            }, 1000)\n    })\n}   \nconst imgs = ['url1', 'url2', 'url3'];\n// 依次加载图片\nasync function fAsync(imgs){\n   // write your code here\n    for (let i of imgs) {\n       await loadImg(i)\n    }\n}\n\nfAsync(imgs);\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n"},{"title":"vue自定义指令","questions_id":"6ivrh-g7kp8a-2gixkg-p117t","json_path":"6ivrh-g7kp8a-2gixkg-p117t.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"## 阅读如下代码，写出代码的功能，输入和输出\n```js\nVue.filter('formatDate', function(value){\n  let date = new Date();\n  date.setTime(value);\n  let year = date.getFullYear(),\n      month = (date.getMonth() + 1).toString().padStart(2, '0'),\n      day = date.getDate().toString().padStart(2, '0'),\n      hour = date.getHours().toString().padStart(2, '0'),\n      min = date.getMinutes().toString().padStart(2, '0'),\n      sec = date.getSeconds().toString().padStart(2, '0');\n  return `${year}-${month}-${day} ${hour}:${min}:${sec}`\n});\n```","student_answer":"Vue.filter('formatDate', function(value){   //过滤\n  let date = new Date() ;  //new 一个实列data   \n  date.setTime(value);\n  let year = date.getFullYear(),   //2019 年   获取到今年的年\n      month = (date.getMonth() + 1).toString().padStart(2, '0'), \"440\" //获取到今年的月 转换为字符串  padStart() 方法用于头部补全\n      day = date.getDate().toString().padStart(2, '0'),     220    //获取到今年的日 转换为字符串  padStart() 方法用于头部补全\n      hour = date.getHours().toString().padStart(2, '0'),    990    //小时\n      min = date.getMinutes().toString().padStart(2, '0'),   000     //分钟\n      sec = date.getSeconds().toString().padStart(2, '0');   110     //秒\n  return `${year}-${month}-${day} ${hour}:${min}:${sec}`      //年月日 相减   2019-440-220= 1359\n          2019-440-220= 1359     990 : 000： 110\n});"},{"title":"vue自定义指令","questions_id":"9wck8-qt73nd-0v6s8-f6jyid","json_path":"9wck8-qt73nd-0v6s8-f6jyid.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"## 阅读如下代码，写出代码的功能，输入和输出\n```js\nVue.filter('toThousandFilter', function(num){\n  return (+num || 0).toString().replace(/^-?\\d+/g, m => m.replace(/(?=(?!\\b)(\\d{3})+$)/g, ','))\n});\n```","student_answer":"Vue.filter('toThousandFilter', function(num){   \n  return (+num || 0).toString().replace(/^-?\\d+/g, m => m.replace(/(?=(?!\\b)(\\d{3})+$)/g, ',')) \n});\n //过滤toThousandFilter 数据 \n   //返回的是 参数num 或者是0 并转换为 除了数字以外的字符全部都去掉，\n// 以/开头 只要满足开头有一个\\d后面至少有一个\\d{3} 灰色是\\d{3} + 以$为结束 全局匹配一次 \n"}]