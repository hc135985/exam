[{"title":"匿名自执行函数的应用","questions_id":"vh80e-3d3g3o-6hy47e-ib2x4c","json_path":"vh80e-3d3g3o-6hy47e-ib2x4c.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"heinan","user_id":"fdjfr-msxp8a","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"代码如下：\n```js\nfor (var i = 0; i < 5; i++) {\n    setTimeout(function () {\n        console.log(i)\n    })\n}\n输出\n5\n5\n5\n5\n5\n```\n修改上面代码，打印结果要求为：0,1，2，3，4","student_answer":"for(var i=0;i<5;i++){\n\tfunction(){\n      console.log(i)\n}"},{"title":"react生命周期","questions_id":"xt05yo-prna5g-f7zqo-ltl5rh","json_path":"xt05yo-prna5g-f7zqo-ltl5rh.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"dingshaoshan","user_id":"ypay2t-7uxsd","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"# react常用生命周期图\n\n## 请在 “其他“ 中查看图片。 \n \n\n\n如图是react常用生命周期图，请阅读图，并在1，2，3，4处填写对应的生命周期","student_answer":"1.shouldComponentUpdate\n2.componentDidMount\n3.componentDidUpdate"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"函数式定义的无状态组件\nes5原生方式React.createClass定义的组件\nes6形式的extends React.Component定义的组件\n\n无状态组件创建形式使代码的可读性更好，并减少了冗余代码\n组件不会被实例化，整体渲染性能得到提升\n组件不能访问this对象 \n组件无法访问生命周期的方法\n无状态组件只能访问输入的props"},{"title":"分别使用DOM0级DOM2级给一个DIV绑定事件","questions_id":"1gsxn-k09c2j-gq8peo-sohe9","json_path":"1gsxn-k09c2j-gq8peo-sohe9.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"分别使用DOM0级DOM2级给一个button绑定事件，并且描述这两种方式的区别","student_answer":"//通过id获取节点\n//绑定DOM0级事件\ndocument.getElementById('button').onclick = function() {\n  alert('输出当前元素id：'this.id);\n}\n//绑定DOM2级事件   提供三个参数，事件名称、事件函数、是否在捕获阶段触发(boolean, 默认false)\ndocument.getElementById('button').addEventListener('click', function(){\n  alert('i am issac');\n}, false);\n\n区别：\n1.this指向：\n用DOM0级的方式绑定事件是在元素对象的作用域内运行，因此在事件函数内的this属性不是引用全局对象，而是引用当前元素对象，\nDOM2的事件函数的this引用的是全局对象。\n2.绑定事件：\nDOM0事件绑定是通过赋值给元素的事件属性绑定事件的，因此当绑定赋值第二个事件函数的引用给同一事件属性就会覆盖上一个事件函数的引用。\nDOM2级可以给同一元素绑定多个相同的事件。\n\n综上所述：\nDOM0级\n1 使用赋值方式绑定事件；\n2 只能在冒泡阶段触发；\n3 只能绑定一个事件函数；\n4 通过置空onclick属性解绑事件；\n5 事件函数this属性引用当前函数对象。\nDOM2级\n1 非IE方式\n1.1 使用addEventListeren绑定事件；\n1.2 事件名无on前缀；\n1.3 使用addEventListeren第三个参数控制事件触发阶段；\n1.4 可绑定多个事件函数；\n1.5 多个事件函数的书法顺序和绑定顺序一样；\n1.6 事件函数this属性引用当前函数对象；\n2 IE方式\n和非IE不同的是以下几点：\n2.1 事件名带on前缀；\n2.2 事件函数this属性引用全局对象；\n2.3 多个事件函数的书法顺序和绑定顺序相反；"},{"title":"最少两种方式实现点击每个li都弹出下标","questions_id":"puaqas-1modca-2y04jh-brcz59g","json_path":"puaqas-1modca-2y04jh-brcz59g.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"<ul id=”test”>\n    <li>这是第一条</li>\n    <li>这是第二条</li>\n    <li>这是第三条</li>\n</ul>","student_answer":"方式一，使用利用事件冒泡委托给列表的父节点去处理的方式：\n \n\nvar ulObj = document.getElementById(\"myUl\"); \nulObj.onclick = function (event) { \nvar tg = event.target; \nvar liArray = ulObj.getElementsByTagName(\"li\"); \nfor (var i = 0; i < liArray.length; i++) { \nif (liArray[i] === tg) { \nalert(i + 1); \n} \n} \n}\n\n　　方式二，使用闭包：\n\nvar liArray = document.getElementById(\"myUl\").getElementsByTagName(\"li\"); \nfor (var i = 0; i < liArray.length; i++) { \n(function () { \nvar n = i; \nliArray[i].onclick = function () { \nalert(n + 1); \n} \n})(i) \n}\nHTML代码：\n\n　　代码如下:\n\n<ul id='myUl'> \n<li>这是第一条<> \n<li>这是第二条<> \n<li>这是第三条<> \n"}]