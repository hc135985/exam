[{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":"let flag=true;\nwindow.onresize=function(){\n\tif(windiw.innerWidth>=600){\n      if(flag){\n        console.log(\"hello);\n         flag=false;\n       }else{\n          console.log(window.innerWidth)\n        }\n    }\n}\n//两次嵌套判断1.>=600时 2.只打印一次，设置开关。"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":" 1.react 创建组件的三种方式及其区别:\n 1.react 创建组件的三种方式及其区别:\n(1)无状态函数式组件：\n只负责根据传入的props来展示，不涉及到要state状态的操作，是一个只带有一个render方法的组件类\n特点：\n1.组件不会被实例化，整体渲染性能得到提升\n2.组件不能访问this对象\n3.组件无法访问生命周期的方法\n4.无状态组件只能访问输入的props，同样的props会得到同样的渲染结果，不会有副作用\n5.无状态组件使得代码结构更加清晰，减少代码冗余，在开发过程中，尽量使用无状态组件\n（2）React.createClass\n是ES5的原生的JavaScript来实现的React组件\n特点：\nReact.createClass会自绑定函数方法导致不必要的性能开销\nReact.createClass的mixins不够自然、直观\n（3）React.Component\nES6的形式来创建react的组件的，是React目前极为推荐的创建有状态组件的方式，\n特点：\nReact.Component创建的组件，其成员函数不会自动绑定this，需要手动绑定，\nReact.Component三种手动绑定this的方法\n在构造函数中绑定；使用bind绑定；使用arrow function绑定\n只要有可能，尽量使用无状态组件创建形式\n否则（如需要state、生命周期方法等），使用React.Component这种es6形式创建组件.\nvue的组件创建方式及其区别\n1.全局注册组件\n①通过Vue.extend()和Vue.component()注册\n②通过Vue.component()字面量注册\n③通过<template id=\"tmp1\"> 方式注册\n2.定义局部组件\n局部组件定义在vue实例内部，该组件只能在vue实例控制范围内才能使用\n\n\n"},{"title":"封装图片加载Promise","questions_id":"gt8z4u-ufd66j-najaef-y8ytir","json_path":"gt8z4u-ufd66j-najaef-y8ytir.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 封装加载图片的promise  \n```js\nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}\n```\n","student_answer":"const image=new Image();\nimage.onload=()=>{\n\t\tresolve(image)\n}\nimage.onerror=()=>{\n  reject(new Error(\"Could not find src\"+src))\n}\nimage.src=src;\ndocument.body.appendChild(image);"}]