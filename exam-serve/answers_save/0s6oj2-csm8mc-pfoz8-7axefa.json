[{"title":"使用类实现任务调度","questions_id":"sue8v-wa50ws-jss7qm-592yt8","json_path":"sue8v-wa50ws-jss7qm-592yt8.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 使用js实现以下效果 \nvar priorityQueue = new PriorityQueue();  \npriorityQueue.enqueue('优先级1-1', 1);  \npriorityQueue.enqueue('优先级3-1', 3);  \npriorityQueue.enqueue('优先级1-2', 1);  \npriorityQueue.enqueue('优先级2-1', 2);  \npriorityQueue.print();  \n// 优先级1-1 优先级1-2 优先级2-1 优先级3-1 priorityQueue.dequeue();   \n```js\nclass PriorityQueue{\n    constuctor(obj){\n        this.arr=[];\n    }\n    enqueue(str,num){\n        // write your code here\n    }\n    print(){\n       // write your code here \n    }\n}\n```","student_answer":"  var priorityQueue = new PriorityQueue();\n    \n        priorityQueue.enqueue('优先级1-1', 1);\n        priorityQueue.enqueue('优先级3-1', 3);\n        priorityQueue.enqueue('优先级1-2', 1);\n        priorityQueue.enqueue('优先级2-1', 2);\n\n    console.log(priorityQueue.print());\n    class PriorityQueue() {\n        onstuctor(obj){\n        this.arr=[];\n        }\n\n        //需要插入队列的元素（该元素为对象，包括值和优先级）\n        function QueueElement(str,num) {\n            this.str =str;\n            this.num = num;\n        }\n\n        //插入元素到队列中的方法\n        this.enqueue = (str,num)=> {\n            //需要插入队列的元素\n            var queueElement = new QueueElement(str, num);\n\n            if(this.isEmpty()) {\n                //当队列为空时，直接往队列中添加元素\n                items.push(queueElement);\n            }else{\n                //当队列不为空时，遍历队列中的元素，当需要添加的元素的优先级小于（队列中）当前元素的优先级，就把该元素插入到当前元素之前\n                var added = false;\n                for(var i = 0; i < items.length; i++){\n                    if(queueElement.num < items[i].num) {\n                        items.splice(i, 0, queueElement);\n                        added = true;\n                        break;//终止队列循环\n                    }\n                }\n                //当需要添加的元素的优先级比队列中任何一个元素的优先级都要高时，把该元素插入到队列的末尾\n                if(!added){\n                    items.push(queueElement);\n                }\n            }\n        }\n\n        //查看队列是否为空，如果为空，返回true；否则返回false\n        this.isEmpty = ()=> {\n            return items.length == 0;\n        }    \n\n        //查看队列\n        this.print = ()=> {\n            return items;\n        }        \n    }\n\n  "},{"title":"react生命周期","questions_id":"xt05yo-prna5g-f7zqo-ltl5rh","json_path":"xt05yo-prna5g-f7zqo-ltl5rh.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"dingshaoshan","user_id":"ypay2t-7uxsd","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"# react常用生命周期图\n\n## 请在 “其他“ 中查看图片。 \n \n\n\n如图是react常用生命周期图，请阅读图，并在1，2，3，4处填写对应的生命周期","student_answer":"1.shouldComponentUpdate\n2.componentDidMount\n3.componentDidUpdata"},{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":"var flag=true;\nwindow.onresize = function() {\n     if(document.documentElement.clientWidth>=600){\n       if(flag){\n          console.log('hello');\n\t\t\t\tflag=false\n       }\n     }else{\n      \t\t flag=true\n       }\n}\n"},{"title":"async配合transition实现自定义动画","questions_id":"bqq54a-jly2z9-m9fg7pj-oio193","json_path":"bqq54a-jly2z9-m9fg7pj-oio193.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"html结构\n```html\n<div id=\"box\"></div>\n```\ncss样式\n```css\n#box{\n  width:100px; height:100px; background-color:red; border-radius:50%; transition:transform 0.5s;\n}\n```\njavaScript代码\n```js\n        const oBox = document.getElementById('box');\n        oBox.addEventListener('transitionend',()=>{\n            let {x,y} = oBox;\n            moveTo.reslove({x,y});\n        },false);\n        function moveTo(x,y){\n            return new Promise((reslove,reject)=>{\n                moveTo.reslove = reslove;\n                oBox.x = x;\n                oBox.y = y;\n                oBox.style.transform = `translate(${x}px,${y}px)`;\n            })\n        }\n```\n\n补全以上代码，使点击oBox后，使oBox走出一个  W 的轨迹（使用async函数实现），并简单写出整体的代码思路。","student_answer":"var data = [{\n            x: 0,\n            y: 0\n        }, {\n            x: 40,\n            y: 80\n        }, {\n            x: 80,\n            y: 0\n        }, {\n            x: 120,\n            y: 80\n        }, {\n            x: 160,\n            y: 0\n        }];\n        oBox.onclick=()=>{\n            for(var i=0;i<data.length;i++){\n                setTimeout(`move(${i})`,500*i);\n            }\n        }\n        function move(i){\n            moveTo(data[i].x,data[i].y)\n        }"}]