[{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":"let flag = true;\nwindow.onresize = function () {\n    if (flag && window.innerWidth > 600) {\n        flag = false;\n        console.log('hello');\n    }\n}"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"类组件  //类组件采用驼峰命名\n// 有状态组件 \n// 包含state状态 props属性 可以通过setState更改 有子元素children\n类组件有两种写法 es5和es6的方法\n//es6方法 \nclass Index extends React.Component {\n    constructor(props){\n        super(props)\n        this.state={  //组件内部状态 state\n            msg: 'hello word', \n        }\n    }\n    render(){ //类里面的渲染函数 作用：生成虚拟dom\n        return (\n            <div>\n                <h1>hello</h1> \n            </div>\n        )\n    }\n}\n//es5方法\n//创建的类组件 需要用React.createElement()的方法进行包装\nReact.createElement(Index, {}, []); 组件元素 \n//参数一：对应<Index/>  参数二：对应<Index/>的props属性 参数三：render里面的结构\nrender(<Index/>,document.getElementBy('app'))\n\n函数式组件 \n//无状态组件没有state 有属性props 返回的是虚拟dom 可以描述视图\nfunction Info(props) {\n    return ( \n        <div>\n            内容\n        </div>\n    )\n}\n//函数式组件 - > 无状态组件 没有state 有属性props 可以接受外部传值 \n//无状态组件不能描述视图的活动过程，只可以展示视图\n"},{"title":"封装图片加载Promise","questions_id":"gt8z4u-ufd66j-najaef-y8ytir","json_path":"gt8z4u-ufd66j-najaef-y8ytir.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 封装加载图片的promise  \n```js\nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}\n```\n","student_answer":"let loadImg = (src) => {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n        image.onload = function () {\n            resolve(image);\n        };\n        image.onerror = function () {\n            reject(new Error('Could not load image at ' + src));\n        };\n        image.src = src;\n    })\n}"}]