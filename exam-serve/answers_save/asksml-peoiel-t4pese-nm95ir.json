[{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"function steps(number) {\n    if (number >= 0 && number < 10) {\n        return number;\n    }\n    for (var i = 10; i <= number; i++) {\n        return steps(number - 1) * 2;\n    }\n}\nconsole.log(steps(10));"},{"title":"大小文件读取","questions_id":"z9ndnc-qhzc6-wb5vju-0pvnzk","json_path":"z9ndnc-qhzc6-wb5vju-0pvnzk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个方法适配大小文件的读取，限定值2M","student_answer":"const fs = require('fs')\nlet fs = require('fs')\nfunction copySmall(originPath, targetPath) {\n    const content = fs.readFileSync(originPath)\n    fs.writeFileSync(targetPath, content)\n}\ncopySmall('./data.txt','./data_copy.txt')\n\nfunction copyBig(originPath, targetPath) {\n    let rs = fs.createReadStream(originPath)\n    let ws = fs.createWriteStream(targetPath)\n    rs.pipe(ws)\n}\ncopyBig('./data.txt', './data_copy2.txt')\n\nfunction copy(originPath, targetPath, size = 20000) {\n    // 如果是大文件，就copyBig(originPath, targetPath)\n    // 如果是小文件，就copySmall(originPath, targetPath)\n    const isBigFile = fs.statSync(originPath).size > size\n    isBigFile ? copyBig(originPath, targetPath) : copySmall(originPath, targetPath)\n}\ncopy(\"./data.txt\", \"./data_copy3.txt\")"},{"title":"实现多维数组转换为一维数组","questions_id":"60gn1-9nj3mi-hv4xz-t6ecp","json_path":"60gn1-9nj3mi-hv4xz-t6ecp.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个函数可以使得n维数组转换为1维数组，输出","student_answer":"var arr = [\n    [1, 3],\n    [2, 4],\n    [3, 6],\n    [4, 8],\n    [5, 10],\n    [6, 12]\n];\nconsole.log([].concat.apply([], arr));"},{"title":"实现一个评星方法","questions_id":"tak6bp-2bpj3-xh6jpg-elkb8u","json_path":"tak6bp-2bpj3-xh6jpg-elkb8u.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"实现一个评星方法\n说明\n* 可根据传入的评分和总数，返回评星结果（用 ★ 和 ☆ 描述）\n* 评分必选项，四舍五入，总数可选，大于0的整数，默认为5\n* 对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回'errror'\n示例\n```\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"<!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n    <style>\n        ul {\n            padding-left: 0;\n            overflow: hidden;\n        }\n        \n        ul li {\n            float: left;\n            list-style: none;\n            width: 27px;\n            height: 27px;\n            background: url(img/star.gif)\n        }\n        \n        ul li a {\n            display: block;\n            width: 100%;\n            padding-top: 27px;\n            overflow: hidden;\n        }\n        \n        ul li.light {\n            background-position: 0 -29px;\n        }\n    </style>\n</head>\n\n<body>\n    <ul>\n        <li class=\"light\"><a href=\"javascript:;\">1</a></li>\n        <li><a href=\"javascript:;\">2</a></li>\n        <li><a href=\"javascript:;\">3</a></li>\n        <li><a href=\"javascript:;\">4</a></li>\n        <li><a href=\"javascript:;\">5</a></li>\n    </ul>\n    <script>\n        var num = finalnum = tempnum = 0;\n        var lis = document.getElementsByTagName(\"li\");\n        //num:传入点亮星星的个数\n        //finalnum:最终点亮星星的个数\n        //tempnum:一个中间值\n        function fnShow(num) {\n            finalnum = num || tempnum; //如果传入的num为0，则finalnum取tempnum的值\n            for (var i = 0; i < lis.length; i++) {\n                lis[i].className = i < finalnum ? \"light\" : \"\"; //点亮星星就是加class为light的样式\n            }\n        }\n        for (var i = 1; i <= lis.length; i++) {\n            lis[i - 1].index = i;\n            lis[i - 1].onmouseover = function() { //鼠标经过点亮星星。\n                fnShow(this.index); //传入的值为正，就是finalnum\n            }\n            lis[i - 1].onmouseout = function() { //鼠标离开时星星变暗\n                fnShow(0); //传入值为0，finalnum为tempnum,初始为0\n            }\n            lis[i - 1].onclick = function() { //鼠标点击,同时会调用onmouseout,改变tempnum值点亮星星\n                tempnum = this.index;\n            }\n        }\n    </script>\n</body>\n\n</html>"}]