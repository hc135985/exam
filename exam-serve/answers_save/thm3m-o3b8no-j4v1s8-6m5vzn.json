[{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"\nfunction getSum (n) {\n    if(n == 1){\n        return 1\n    }else if(n == 2){\n        return 2\n    }else{\n        return getSum(n-1) + getSum(n-2)\n    }\n}"},{"title":"大小文件读取","questions_id":"z9ndnc-qhzc6-wb5vju-0pvnzk","json_path":"z9ndnc-qhzc6-wb5vju-0pvnzk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个方法适配大小文件的读取，限定值2M","student_answer":" var fs = require('fs')\nfunction geFileList(path)\n{\n   var filesList = [];\n   readFile(path,filesList);\n   return filesList;\n}\n\n//遍历读取文件\nfunction readFile(path,filesList)\n{\n   files = fs.readdirSync(path);//需要用到同步读取\n   files.forEach(walk);\n   function walk(file)\n   {  \n        states = fs.statSync(path+'/'+file);         \n        if(states.isDirectory())\n        {\n            readFile(path+'/'+file,filesList);\n        }\n        else\n        {   \n            //创建一个对象保存信息\n            var obj = new Object();\n            obj.size = states.size;//文件大小，以字节为单位\n            obj.name = file;//文件名\n            obj.path = path+'/'+file; //文件绝对路径\n            filesList.push(obj);\n        }     \n    }\n}\n\n//写入文件utf-8格式\nfunction writeFile(fileName,data)\n{  \n  fs.writeFile(fileName,data,'utf-8',complete);\n  function complete()\n  {\n     console.log(\"文件生成成功\");\n  } \n}\n\n\nvar filesList = geFileList(\"G:/nodejs\");\nfilesList.sort(sortHandler);\nfunction sortHandler(a,b)\n{\n  if(a.size > b.size)\n   return -1;\n  else if(a.size < b.size) return 1\n   return 0;\n}\nvar str='';\nfor(var i=0;i<filesList.length;i++)\n{\n   var item = filesList[i];\n   var desc =\"文件名:\"+item.name + \"  \"\n        +\"大小:\"+(item.size/1024).toFixed(2) +\"/kb\"+\"  \"\n        +\"路径:\"+item.path;\n   str+=desc +\"\\n\"\n}"},{"title":"实现多维数组转换为一维数组","questions_id":"60gn1-9nj3mi-hv4xz-t6ecp","json_path":"60gn1-9nj3mi-hv4xz-t6ecp.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个函数可以使得n维数组转换为1维数组，输出","student_answer":"Array.prototype.chunk = function (length) {\n    //获取要切割的数组的长度\n    var length= parseInt(length);\n    //如果长度小于要划分的长度，返回原数组\n    if (len <= 1 || this.length < length)\n        return this;\n    var groups = []; \n    //拆分成的二维数组的个数\n    var number= Math.ceil(this.length / length);\n    //用slice方法，每四个截取一次\n    for (var i = 0; i < number; i++)\n        groups.push(this.slice(len * i, len * (i + 1)));\n    return groups;\n}"},{"title":"实现一个评星方法","questions_id":"tak6bp-2bpj3-xh6jpg-elkb8u","json_path":"tak6bp-2bpj3-xh6jpg-elkb8u.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"实现一个评星方法\n说明\n* 可根据传入的评分和总数，返回评星结果（用 ★ 和 ☆ 描述）\n* 评分必选项，四舍五入，总数可选，大于0的整数，默认为5\n* 对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回'errror'\n示例\n```\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n\t\t<style>\n*{\n    margin: 0;\n    padding: 0;\n}\n#pingfen{\n    width: 135px;\n    margin: 40px auto;\n    height: 28px;\n}\n#pingfen li{\n    width: 27px;\n    float: left;\n    height: 28px;\n    cursor: pointer;\n    background: url(\"star.gif\") no-repeat 0 0;\n    list-style: none;\n}\n</style>\n</head>\n<body>\n<div id=\"pingfen\">\n    <ul>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n        <li></li>\n    </ul>\n</div>\n</body>\n<script>\nwindow.onload = function () {\n    var oPf = document.getElementById('pingfen');\n    var aLi = oPf.getElementsByTagName('li');\n    var i = 0;\n    for (i = 0; i < aLi.length; i++) {\n        aLi[i].index = i;\n        aLi[i].onmouseover = function () {\n            for (i = 0; i < aLi.length; i++) {\n                if (i <= this.index) {\n                    aLi[i].style.background = \"url(star.gif) no-repeat 0 -29px\";\n                }\n                else {\n                    aLi[i].style.background = \"url(star.gif) no-repeat 0 0\";\n                }\n            }\n        };\n \n        aLi[i].onmousedown = function () {\n            alert('提交成功:' + (this.index + 1) + '分');\n        };\n    }\n};\n</script>"}]