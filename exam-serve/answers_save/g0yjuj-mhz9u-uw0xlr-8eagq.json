[{"title":"使用async函数实现多张图片的依次加载（哪张加载完哪张添加到页面）","questions_id":"5oxqyl-8dnbaa-3dt3o9-qrecrk","json_path":"5oxqyl-8dnbaa-3dt3o9-qrecrk.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 使用async函数实现多张图片的依次加载（哪张加载完哪张添加到页面）\n\n```js\n// 封装加载图片的promise  \nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}   \nconst imgs = ['url1', 'url2', 'url3'];\n// 依次加载图片\nasync function fAsync(imgs){\n   // write your code here\n}\n\nfAsync(imgs);\n```","student_answer":"let loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n      let img = document.createElement('img')  // 每传进来一个 就传进一个img节点\n            img.src = src  // 设置一下img 的路径\n            document.body.append(img)  // 追加到  页面上\n            setTimeout(() => {  // 设置延时调用\n                resolve(true)\n            }, 1000) // 设置时间  1 秒之后 执行成功\n    })\n}   \nconst imgs = ['url1', 'url2', 'url3'];  \n// 依次加载图片\nasync function fAsync(imgs){\n   // write your code here\n  for (let i of imgs) { // 遍历传进来的 图片  \n     await loadImg(i)  // 将每一个路径传进 loadimg 函数里面\n   }\n}\n\nfAsync(imgs); // 调用 异步 函数\n\n"},{"title":"vue自定义指令","questions_id":"6ivrh-g7kp8a-2gixkg-p117t","json_path":"6ivrh-g7kp8a-2gixkg-p117t.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"## 阅读如下代码，写出代码的功能，输入和输出\n```js\nVue.filter('formatDate', function(value){\n  let date = new Date();\n  date.setTime(value);\n  let year = date.getFullYear(),\n      month = (date.getMonth() + 1).toString().padStart(2, '0'),\n      day = date.getDate().toString().padStart(2, '0'),\n      hour = date.getHours().toString().padStart(2, '0'),\n      min = date.getMinutes().toString().padStart(2, '0'),\n      sec = date.getSeconds().toString().padStart(2, '0');\n  return `${year}-${month}-${day} ${hour}:${min}:${sec}`\n});\n```","student_answer":"Vue.filter('formatDate', function(value){  // 输入 毫秒数 1000\n  let date = new Date();// 设置时间对象\n  date.setTime(value); //  将毫秒数  传入时间对象\n  let year = date.getFullYear(),  // 获取当前年\n      month = (date.getMonth() + 1).toString().padStart(2, '0'), // 获取 月份\n      day = date.getDate().toString().padStart(2, '0'),  // 获取   日期\n      hour = date.getHours().toString().padStart(2, '0'), // 获取  小时\n      min = date.getMinutes().toString().padStart(2, '0'),   // 获取  分钟\n      sec = date.getSeconds().toString().padStart(2, '0');  // 获取秒\n  return `${year}-${month}-${day} ${hour}:${min}:${sec}`    // 用模版字符串 返回  正确格式的  日期  年月日 小时分钟秒\n});\n\n\n功能：将向 当前时间  添加 value 毫秒，并显示新的日期和时间\n\n 输入：1000   毫秒数\n \n 输出：返回  输入毫秒数 之后的 正确时间和日期\n"},{"title":"vue自定义指令","questions_id":"9wck8-qt73nd-0v6s8-f6jyid","json_path":"9wck8-qt73nd-0v6s8-f6jyid.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"## 阅读如下代码，写出代码的功能，输入和输出\n```js\nVue.filter('toThousandFilter', function(num){\n  return (+num || 0).toString().replace(/^-?\\d+/g, m => m.replace(/(?=(?!\\b)(\\d{3})+$)/g, ','))\n});\n```","student_answer":" Vue.filter('toThousandFilter', function(num){  // 将 整数传进去  \n   \t\t\t// 返回的是 切割好的 已 千分位分割是 格式  逢 三位 \n        return (+num || 0).toString().replace(/^-?\\d+/g, m => m.replace(/(?=(?!\\b)(\\d{3})+$)/g, ','))\n    });\n\t\t \n\n    功能：千分位自定义过滤器, 将整数部分逢三一断\n    例如：输入：1000\n        输出：1,000\n        输入：1000000\n        输出：1,000,000\n\n"},{"title":"Vue导航守卫做鉴权处理","questions_id":"42cuvb-7216fb-zlkab2-wwns3d","json_path":"42cuvb-7216fb-zlkab2-wwns3d.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"wbxm4-jf8q6k-lvt2ca-ze96mg","exam_name":"月考","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 在Vue中我们可以使用导航守卫做鉴权，现有要求如下：  \n可以根据getToken()是否返回token判断  \n- 1.如果用户已经登陆  \n  - a. 如果用户要去/login页面，则重定向到/路径  \n  - b. 如果用户要去其他页面，则不做处理直接跳转    \n- 2.如果用户未登陆  \n  - a. 如果用户要去的页面在白名单内，则不做处理直接跳转  \n  - b. 如果用户要去的页面不在白名单内，则重定向到/login页面，并把要去的页面路径作为查询字符串的query的值\n\n```js\nimport router from './router'\nimport { getToken } from '@/utils/auth' // getToken from cookie\n\nconst whiteList = ['/login', '/register', '/auth-redirect']// no redirect whitelist\n\nrouter.beforeEach((to, from, next) => {\n  if (getToken()) { // determine if there has token\n    // write your code here\n  } else {\n    // write your code here\n  }\n})\n```","student_answer":"import router from './router'\nimport { getToken } from '@/utils/auth' // getToken from cookie\nconst whiteList = ['/login', '/register', '/auth-redirect']// no redirect whitelist\nrouter.beforeEach((to, from, next) => {\n    if (getToken('/login') {// determine if there has token\n      // write your code here\n    next();\n  } else {\n     // write your code here\n    let token = localStorage.getItem('Authorization');   // 本地存储\n    if (token === 'null' || token === '') {  // 判断 有没有存入数据 \n      next('/login');\n    } else {\n      next();\n    }\n  }\n\n\n"}]