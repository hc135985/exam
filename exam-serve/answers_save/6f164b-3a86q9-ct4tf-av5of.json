[{"title":"匿名自执行函数的应用","questions_id":"vh80e-3d3g3o-6hy47e-ib2x4c","json_path":"vh80e-3d3g3o-6hy47e-ib2x4c.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"heinan","user_id":"fdjfr-msxp8a","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"代码如下：\n```js\nfor (var i = 0; i < 5; i++) {\n    setTimeout(function () {\n        console.log(i)\n    })\n}\n输出\n5\n5\n5\n5\n5\n```\n修改上面代码，打印结果要求为：0,1，2，3，4","student_answer":"for (let = 0; i < 5; i++) {\n    setTimeout(function () {\n        console.log(i)\n    })\n}\n因为let命令声明的变量只在其块级作用域中有效"},{"title":"react生命周期","questions_id":"xt05yo-prna5g-f7zqo-ltl5rh","json_path":"xt05yo-prna5g-f7zqo-ltl5rh.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"dingshaoshan","user_id":"ypay2t-7uxsd","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"# react常用生命周期图\n\n## 请在 “其他“ 中查看图片。 \n \n\n\n如图是react常用生命周期图，请阅读图，并在1，2，3，4处填写对应的生命周期","student_answer":"constructor\nshouldComponentUpdate\ncomponentDidMount\ncomponentDidUpdate\n"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"1. 函数组件  无状态\n  创建纯展示组件，只负责根据传入的props来展示，不涉及state的操作。\n  无状态函数式组件形式上表现为一个直带有一个render方法的组件类。 \n  特点是精简，避免冗余，以及：\n\t1.组件不会实例化，整体渲染性能提升\n\t2.组件不能访问this对象\n\t3.组件无法访问生命周期的方法\n\t4.无状态组件只能访问输入的props\n\n2.es5原生方式React.createClass定义的组件\n\t有状态的组件，会被实例化，可以访问组件生命周期。\n\tReact,createClass会自绑定函数方法导致不必要的性能开销，增加代码过时的可能性\n\tReact.createClass的mixins不够自然，直观。适合高阶组件。\n\n3. es6，React.Component\n\t与上面的区别：\n\t\tA. React.createClass创建的组件，每个成员函数的this都有React自动绑定，任何时候使用，直接使用this.method即可\n\t\tReact.Component需要开发者手动绑定this（在构造函数完成绑定；调用时使用bind；使用箭头函数）\n\t\tB. React.createClass在创建组件时，有关组件props的属性类型及组建默认的属性会作为组件实例的属性来配置\n\t\tReact.Component则是作为组建类的属性，也就是所谓的类的静态属性配置的\n\t\tC. React.createClass创建的组件，其状态state是通过getInitialState方法来配置组件相关的状态\n\t\tReact.Component创建组建是，state是在constructor中像初始化组件属性一样声明的\n"},{"title":"分别使用DOM0级DOM2级给一个DIV绑定事件","questions_id":"1gsxn-k09c2j-gq8peo-sohe9","json_path":"1gsxn-k09c2j-gq8peo-sohe9.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"分别使用DOM0级DOM2级给一个button绑定事件，并且描述这两种方式的区别","student_answer":"//dom0绑定：\ndocument.getElementsByTagName(\"button\").onclick = function(){};\n//这是dom2级：\ndocument.getElementsByTagName(\"button\").addEventListener(\"click\", function(){}, false);\n//dom0级后面绑定的事件会覆盖前面绑定的事件，点击的时候会执行新绑定的 只能绑定一个\n//dom2级不会覆盖前面绑定的事件，点击的时候所有绑定的事件会依次执行一遍 可以绑定多个"},{"title":"最少两种方式实现点击每个li都弹出下标","questions_id":"puaqas-1modca-2y04jh-brcz59g","json_path":"puaqas-1modca-2y04jh-brcz59g.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"<ul id=”test”>\n    <li>这是第一条</li>\n    <li>这是第二条</li>\n    <li>这是第三条</li>\n</ul>","student_answer":"var li =  document.getElementsByTagName(\"li\")//获取到所有li标签\nvar length = document.getElementsByTagName(\"li\").length;//获取li长度\n//循环\nfor (var i=0;i<length;i++) {\n    //下标属性方法\n    li[i].index=i;\n    li[i].onclick=function(){\n        alert(this.index);\n    }\n}\n//---------------------------\n//JQ\n$(\"ul li\").click(function(){\n  var item = $(this).index();  //获取索引下标 也从0开始\n  alert(\"item\"); \n})\n"}]