[{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"let count=0;\n//接受总可能的次数\nfunction jump(num,res){\n    //num是总台阶数，res为结果数组\n        let i=1;\n        while (i<3){\n            //i值只能是1和2\n            if(num+i<=10){\n                //不够10的时候追加到数组里\n                let result=[...res];\n                result.push(i);\n            if(num + i===10){\n                //当累加和正好为10时，输出结果\n                count++;\n                console.log(count,result)\n            }else{\n                //递归调自己\n                jump(num+i,result)\n            }\n        }\n        i++\n    }\n}\n\njump(0,[])"},{"title":"大小文件读取","questions_id":"z9ndnc-qhzc6-wb5vju-0pvnzk","json_path":"z9ndnc-qhzc6-wb5vju-0pvnzk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个方法适配大小文件的读取，限定值2M","student_answer":"//封装一个方法适配大小文件的读取，限定值2M\nfunction readFile(url){\n    let fs=require(\"fs\");\n    //引入内置fileSystem模块\n    if(fs.existsSync(url)){\n        //判断该路径文件是否存在\n        fs.stat(url,function(err,msg){\n            //通过stat方法下的size属性获取文件大小，单位是b\n            console.log(msg.size/1024/1024)\n            if(msg.size/1024/1024<=2){\n                //转换单位成M，比较大小\n                console.log(\"成功\")\n            }\n            else{\n                //超出2M时报错\n                console.log('文件大小超出2M')\n            }\n        })\n    }\n    else{\n        //路径文件不存在时报错\n        console.log('文件路径有误')\n    }\n}\nreadFile(url)"},{"title":"实现多维数组转换为一维数组","questions_id":"60gn1-9nj3mi-hv4xz-t6ecp","json_path":"60gn1-9nj3mi-hv4xz-t6ecp.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个函数可以使得n维数组转换为1维数组，输出","student_answer":"function tobeone(arr){\n    arr.map((ele,i)=>{\n        //遍历数组每一项，如果是数组则展开继续遍历\n        if(Array.isArray(ele)){\n            let str= ele.toString().slice(0);\n            // console.log(str)\n            let newArr=Array.from(str.split(\",\"))\n            arr.push(...newArr)\n            \n            tobeone(ele)\n        }\n        else{\n            // console.log(arr)\n            return arr;\n        }\n        console.log(arr)\n    })\n}\ntobeone([1,2,[3,4,[5]]])"},{"title":"实现一个评星方法","questions_id":"tak6bp-2bpj3-xh6jpg-elkb8u","json_path":"tak6bp-2bpj3-xh6jpg-elkb8u.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"实现一个评星方法\n说明\n* 可根据传入的评分和总数，返回评星结果（用 ★ 和 ☆ 描述）\n* 评分必选项，四舍五入，总数可选，大于0的整数，默认为5\n* 对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回'errror'\n示例\n```\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"function star(point,sum){\n    //默认总分是5\n    sum=sum||5;\n    //评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回’errror’ \n    if(point>sum||point==''||sum<0){\n        console.log(\"error\")\n    }\n    else{\n        //写空星\n        let strkong='☆'.repeat(sum)\n        //写实星\n        let strshi=strkong.slice(0,point)\n        //用实星替换空星\n        let res=strkong.replace(strshi.repeat()\n        console.log(strkong,res)\n    }\n}\nstar(3,6)"}]