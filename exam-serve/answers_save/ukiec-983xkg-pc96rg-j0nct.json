[{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":"  window.onresize =function(){\n            let num = this.innerWidth;\n            if(num < 600){\n                console.log(\"hello\")\n                \n            }\n        }"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"//创建的组件，其每一个成员函数的this都有React自动绑定，任何时候使用，直接使用this.method即可，函数中的this会被正确设置。\n        const Conteacts = React.createClass({\n            handleClick(){\n                console.log(this)\n            },\n            render(){\n                return(\n                    <div onClick={this.handleClick}></div>\n                )\n            }\n        })\n\n        //React.Component创建的组件，其成员函数不会自动绑定this，需要开发者手动绑定，否则this不能获取当前组件实例对象。\n        class Conteacts extends React.Component{\n            constructor(props){\n                super(props)\n            }\n            hendleClick(){\n                console.log(this);\n                \n            }\n            render(){\n                return(<div onClick={this.handleClick}></div>)\n            }\n        }\n\n        //无状态函数组件\n        function HelloComponent(props) {\n            return <div>Hello {props.name}</div>\n            }\n        ReactDOM.render(<HelloComponent name=\"Sebastian\" />, mountNode)"},{"title":"封装图片加载Promise","questions_id":"gt8z4u-ufd66j-najaef-y8ytir","json_path":"gt8z4u-ufd66j-najaef-y8ytir.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 封装加载图片的promise  \n```js\nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}\n```\n","student_answer":" let loadImg = (src)=>{\n            return new Promise((resolve, reject)=>{\n                // write your code here\n                const image = new Image();\n                image.onload = function(){\n                    resolve(image);\n                }\n                image.onerror = function(){\n                    reject(new Error(\"Could not load image at\" + src));\n                }\n                image.src = src;\n            })\n        }"}]