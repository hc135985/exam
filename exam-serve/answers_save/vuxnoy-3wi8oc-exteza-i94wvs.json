[{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":"window.onresize =function(){\n  changeDivHeight();\n}\nfunction changeDivHeight（）{\n  var h=document.documentElement.clientWidth;\n  if(h>=600){\n  \t\tconsole.log(\"hello\")\n  \t}\n}"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"创建方式\n    函数式定义的无状态组件\n    es5原生方式React.createClass定义的组件\n    es6形式的extends React.Component定义的组件\n区别\n  React.createClass与React.Component区别\n    React.createClass创建的组件，其每一个成员函数的this都有React自动绑定，任何时候使用，直接使用this.method即可，函数\t\t 中的this会被正确设置。\n    React.Component创建的组件，其成员函数不会自动绑定this，需要开发者手动绑定，否则this不能获取当前组件实例对象。\n\n  组件属性类型propTypes及其默认props属性defaultProps配置不同\n    React.createClass在创建组件时，有关组件props的属性类型及组件默认的属性会作为组件实例的属性来配置，其中\t\t       defaultProps是使用getDefaultProps的方法来获取默认组件属性的\n    React.Component在创建组件时配置这两个对应信息时，他们是作为组件类的属性，不是组件实例的属性，也就是所谓的类的静态     属性来配置的\n  组件初始状态state的配置不同\n    React.createClass创建的组件，其状态state是通过getInitialState方法来配置组件相关的状态；\n    React.Component创建的组件，其状态state是在constructor中像初始化组件属性一样声明的。\n  Mixins的支持不同\n    React.createClass在创建组件时可以使用mixins属性，以数组的形式来混合类的集合\n    React.Component暂不不支持Mixins\n\n  React.Component是以ES6的形式来创建react的组件的，是React目前极为推荐的创建有状态组件的方式，最终会取代        \t\tReact.createClass形式；相对于 React.createClass可以更好实现代码复用。\n"},{"title":"封装图片加载Promise","questions_id":"gt8z4u-ufd66j-najaef-y8ytir","json_path":"gt8z4u-ufd66j-najaef-y8ytir.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 封装加载图片的promise  \n```js\nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}\n```\n","student_answer":"let loadImg=(src)=>{\n\treturn new Promise((resolve,reject)=>{\n    const image = new Image();\n    image.onload = function() {\n      resolve(image);\n    \t};\n    image.onerror = function() {\n      reject(new Error('Could not load image at ' + src));\n    };\n    image.src = src;\n    })\n}"}]