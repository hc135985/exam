[{"title":"computed 和 watch 区别","questions_id":"joo9h2-q79phw-pskuido-ua4t7k","json_path":"joo9h2-q79phw-pskuido-ua4t7k.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"computed 和 watch 区别?\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"computed 属性的结果会被缓存，除非依赖的响应式属性变化才会重新计算。主要当作属性来使用；\nwatch 监听某一个值，当被监听的值发生变化时，执行对应的操作 ,可以看作是 computed 和 methods 的结合体；\n与computed的区别是，watch更加适用于监听某一个值的变化并做对应的操作，比如请求后台接口等，而computed适用于计算已有的值并返回结果"},{"title":"实现双向数据绑定","questions_id":"nodsz-nme56x-51nrc-tklsfn","json_path":"nodsz-nme56x-51nrc-tklsfn.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"使用js实现一个数据双向绑定效果, input中输入的内容同步到p标签中\n```\n<div id=\"app\">\n    <input type=\"text\" id=\"txt\">\n    <p id=\"show-txt\"></p>\n</div>\n```","student_answer":"<div id='app'>\n  <input type=\"text\" v-model=\"input\">\n  <p id=\"show-txt\">{{text}}</p>\t\n </div>\n<script>\n  var obj = {};\n  Object.defineProperty(obj, 'cont', {\n    get: function () {\n      return obj;\n    },\n    set: function (vals) {\n      document.getElementById('txt').value = vals;\n      document.getElementById('show-txt').innerHTML = vals;\n     }\n   });\n   document.getElementById('txt').addEventListener('keyup', function (e) {\n    obj.cont = e.target.value;\n   });\n</script>\n\n"},{"title":"Vue导航守卫做鉴权处理","questions_id":"42cuvb-7216fb-zlkab2-wwns3d","json_path":"42cuvb-7216fb-zlkab2-wwns3d.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"wbxm4-jf8q6k-lvt2ca-ze96mg","exam_name":"月考","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 在Vue中我们可以使用导航守卫做鉴权，现有要求如下：  \n可以根据getToken()是否返回token判断  \n- 1.如果用户已经登陆  \n  - a. 如果用户要去/login页面，则重定向到/路径  \n  - b. 如果用户要去其他页面，则不做处理直接跳转    \n- 2.如果用户未登陆  \n  - a. 如果用户要去的页面在白名单内，则不做处理直接跳转  \n  - b. 如果用户要去的页面不在白名单内，则重定向到/login页面，并把要去的页面路径作为查询字符串的query的值\n\n```js\nimport router from './router'\nimport { getToken } from '@/utils/auth' // getToken from cookie\n\nconst whiteList = ['/login', '/register', '/auth-redirect']// no redirect whitelist\n\nrouter.beforeEach((to, from, next) => {\n  if (getToken()) { // determine if there has token\n    // write your code here\n  } else {\n    // write your code here\n  }\n})\n```","student_answer":"<template>\n  <div>\n  \t\t<input type=\"text\" v-model=\"loginForm.username\" placeholder=\"用户名\"/>\n  \t\t<input type=\"text\" v-model=\"loginForm.password\" placeholder=\"密码\"/>\n \t\t<button @click=\"login\">登录</button>\n  </div>\n</template>  \n<script>\n\timport { mapMutations } from 'vuex';\nexport default {\n  data () {\n    return {\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      userToken: ''\n    };\n  },\n   methods: {\n    ...mapMutations(['changeLogin']),\n    login () {\n      let _this = this;\n      if (this.loginForm.username === '' || this.loginForm.password === '') {\n        alert('账号或密码不能为空');\n      } else {\n        this.axios({\n          method: 'post',\n          url: '/user/login',\n          data: _this.loginForm\n        }).then(res => {\n          console.log(res.data);\n          _this.userToken = 'Bearer ' + res.data.data.body.token;\n          _this.changeLogin({ Authorization: _this.userToken });\n          _this.$router.push('/home');\n          //如果用户要去的页面在白名单内，则不做处理直接跳转\n          alert(\"登陆成功\");\n          location.href=\"/\";\n        }).catch(error => {\n          alert('账号或密码错误');\n          //如果用户要去的页面不在白名单内，不作处理，直接跳转\n          location.href=\"./indexs.html\";\n        });\n        }\n    }\n  }\n};\n</script>"},{"title":"Vue基础知识","questions_id":"uecyx-3qim4-rwk9o-v43sj8","json_path":"uecyx-3qim4-rwk9o-v43sj8.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"wbxm4-jf8q6k-lvt2ca-ze96mg","exam_name":"月考","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 谈谈对Vue响应原理的理解?","student_answer":"当你把一个普通的 JavaScript 对象传给 Vue 实例的 data 选项，Vue 将遍历此对象所有的属性，并使用 Object.defineProperty 把这些属性全部转为 getter/setter。这些 getter/setter 对用户来说是不可见的，但是在内部它们让 Vue 追踪依赖，在属性被访问和修改时通知变化。更改属性的默认特性则是通过Object.defineProperty。"}]