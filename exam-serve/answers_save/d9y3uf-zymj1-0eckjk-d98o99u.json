[{"title":"实现发布订阅模式","questions_id":"aihpv-1ru212-wun87-0hli3","json_path":"aihpv-1ru212-wun87-0hli3.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"现在有一个类 \n\n```\nclass Watch{\n  on(){\n   // 实现该方法逻辑\n  }\n  emit(){\n   // 实现该方法逻辑 \n  }\n}\n\n//调用示例如下：\nconst w1 = new Watch();\nw1.on('www',(options) => {\n  console.log(options)\n});\nw1.emit('www','success');\n\n// 最后的打印结果是  success\n\n```\n\n请实现要求的逻,可以对该类进行任意修改","student_answer":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n</head>\n<body>\n    <script>\n        class Watch{\n            constructor(){\n                this.events={}\n            }\n            on(eventName,ck){\n                if(typeof this.events[eventName]==='object'){\n                    this.events[eventName].push(ck) \n                }else{\n                    this.events[eventName]=[ck]\n                } \n            }\n            emit(eventName,...arg){\n                this.events[eventName].forEach(item=>{\n                    item(...arg)\n                })\n            }\n        }\n            \n            const watch = new Watch();\n            watch.on('www',(options) => {\n            console.log(options)\n            });\n            watch.emit('www','success');\n    </script>\n</body>\n</html>"},{"title":"async配合transition实现自定义动画","questions_id":"bqq54a-jly2z9-m9fg7pj-oio193","json_path":"bqq54a-jly2z9-m9fg7pj-oio193.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"html结构\n```html\n<div id=\"box\"></div>\n```\ncss样式\n```css\n#box{\n  width:100px; height:100px; background-color:red; border-radius:50%; transition:transform 0.5s;\n}\n```\njavaScript代码\n```js\n        const oBox = document.getElementById('box');\n        oBox.addEventListener('transitionend',()=>{\n            let {x,y} = oBox;\n            moveTo.reslove({x,y});\n        },false);\n        function moveTo(x,y){\n            return new Promise((reslove,reject)=>{\n                moveTo.reslove = reslove;\n                oBox.x = x;\n                oBox.y = y;\n                oBox.style.transform = `translate(${x}px,${y}px)`;\n            })\n        }\n```\n\n补全以上代码，使点击oBox后，使oBox走出一个  W 的轨迹（使用async函数实现），并简单写出整体的代码思路。","student_answer":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>Document</title>\n    <style>\n        .box{\n            width: 50px;\n            height: 50px;\n            background: red;\n            border-radius: 50%;\n            transition: transform 0.5s ;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"box\"></div>\n    <button id=\"wbtn\">按w运行</button>\n    <script>\n        class RouteTransition{\n            constructor(box,arr){\n                this.box = document.querySelector(box);\n                this.arr = arr;\n                this.resolve = null;\n                this.moveEnd();\n                this.start().then(()=>{\n                    this.endCallback();\n                })\n            }\n            moveEnd(){\n                this.box.addEventListener('transitionend',()=>{\n                    this.resolve && this.resolve();\n                })\n            }\n            move(x,y){\n                return new Promise((resolve,reject)=>{\n                    this.box.style.transform = `translate(${x}px,${y}px)`;\n                    this.resolve = resolve;\n                })\n            }\n            async start(){\n                for(let val of this.arr){  \n                   await this.move(val.x,val.y);\n                }\n            }\n            end(ck){\n                this.endCallback = ck;\n            }\n        }\n        wbtn.onclick = function(){\n            let ani = new RouteTransition('.box',[\n                {\n                    x:0,y:0\n                },\n                {\n                    x:40,y:100\n                },\n                {\n                    x:80,y:0\n                },\n                {\n                    x:120,y:100\n                },\n                {\n                    x:160,y:0\n                }\n            ])\n            ani.end(()=>{\n                //运行完触发\n                alert('end');\n            })\n        }\n        \n        \n    </script>\n</body>\n</html>"},{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"function Fibonacci(n) {\n    if(n == 0) {\n        return 0;\n    }\n    if(n == 1) {\n        return 1;\n    }\n    if(n == 2) {\n        return 2;\n    }\n    var minusOne = 1;\n    var minusTwo = 2;\n    var num;\n    for(var i = 3; i <= n; i++) {\n        num = minusOne + minusTwo;\n        minusOne = minusTwo;\n        minusTwo = num;\n    }\n    return num;\n}\nconsole.log(Fibonacci(4));"},{"title":"输入的reduce方法","questions_id":"zyocwi-drka9-kx8vv-blrmw9p","json_path":"zyocwi-drka9-kx8vv-blrmw9p.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"现在有一个数组如下：\n```js\n    const car = [\n            {\n                groupName:'水果',\n                type:[\n                    {\n                        name:'苹果',\n                        price:10\n                    },\n                    {\n                        name:'橘子',\n                        price:40\n                    },\n                    {\n                        name:'香蕉',\n                        price:90\n                    }\n                ]\n            },\n            {\n                groupName:'蔬菜',\n                type:[\n                    {\n                        name:'芹菜',\n                        price:10\n                    },\n                    {\n                        name:'菠菜',\n                        price:15\n                    },\n                    {\n                        name:'土豆',\n                        price:8\n                    }\n                ]\n            }\n        ]\n```\n\n根据上述数据，编写一个函数，该函数(computedPrice)接收上述的数据作为参数，返回一个对象，请输入用数组的reduce方法实现。对象的格式如下\n\n```js\n       {\n            allPrice:所有商品的总价格,\n            group:[\n                {\n                    typeName:'水果',\n                    price:所有水果的总价格\n                },\n                {\n                    typeName:'蔬菜',\n                    price:所有蔬菜的总价格\n                }\n            ]\n        } \n```  ","student_answer":"function computedPrice(car){\n  let res={\n    group:car.map((v,i)=>{\n      return {\n        typeName:v.groupName,\n        price:v.type.reduce((prev,next)=>prev+next.price,0)\n      }\n    })\n  }\n  res.allPrice=res.group.reduce((prev,next)=>prev+next.price,0)\n  return res\n}\nconsole.log(computedPrice(car))"}]