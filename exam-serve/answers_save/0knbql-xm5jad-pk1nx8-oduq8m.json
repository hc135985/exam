[{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"function gua(num,set){  //接受参数  第一个记步数  第二个走的步数显示是一个数组\n  if(num==0){           //如果记步数从0开始\n    set=[]             //set  赋值set为一个空数组\n  }\n  let i=1;            //声明一个i  为每次跳的台阶数\n  while(i<3){\n  if (num + i <= 10) {       //当上次总步数 加上当前的  不够十步执行\n     let _set = [...set]      //利用_set来赋值上一次的所有步数\n       _set.push(i)          //然后加进去当前步数\n       if (num + i === 10) {    //如果总步数等于10\n       console.log( _set)    //打印出来当前走过的路程 集合\n       } else {\n       gua(num + i, _set)     //否则继续调用  直到步数总和大于等于10停止\n      }\n    }\n   i++             //两步走\n  }\n}\ngua(0)//调用方法  传入记步数"},{"title":"大小文件读取","questions_id":"z9ndnc-qhzc6-wb5vju-0pvnzk","json_path":"z9ndnc-qhzc6-wb5vju-0pvnzk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个方法适配大小文件的读取，限定值2M","student_answer":"let fs=require(\"fs\")      //配置fs模块\nlet path=require(\"path\")   //配置path模块\nfunction read(path){\n  let ispath=fs.existsSync(path) //判断路径是否存在\n  if(!ispath){          //如果不存在 return 结束\n   return\n  }\n  let paths=fs.readdirSync(path)   //获取传入的目录下的文件\n  paths.forEach((val)=>{     \n   let newPath=path.join(path,val)  //拼接绝对路径\n   let isFile=fs.statSync(newPath).isFile() //获取信息 判断是否文件\n   if(isFile){       \n     let size=fs.statSync(newPath).size/1024/1024   //如果是文件的话  获取文件的大小 判断是否大于2MB\n     if(size<2){\n      let html=fs.readFileSync(newPath)   //读取内容  \n      console.log(html)\n     }\n   }else{\n    read(newPath)//否者自调   传入新的路径\n   }\n  })\n}\nlet path=path.join(__dirname,需要求的文件路径)//获取你想要获取的文件的路径\nread(path)   //调用传入路径"},{"title":"实现多维数组转换为一维数组","questions_id":"60gn1-9nj3mi-hv4xz-t6ecp","json_path":"60gn1-9nj3mi-hv4xz-t6ecp.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个函数可以使得n维数组转换为1维数组，输出","student_answer":"function oneArr(arr){\n let newArr=[]   //声明空数组\n function fu(arr){\n arr.forEach((val)=>{  //遍历多维数组\n  if(!Array.isArray(val)){  //如果 遍历的每一项不是数组的话  添加进去新数组\n      newArr.push(val)  \n    }else{\n      fu(val)   //否者 自调  继续判断\n    }\n })\n}\n  return newArr   //返回一个新的一维数组\n }\n \nlet arr=[1,2,[3,[5],[6,[9]]]]\noneArr(arr)   //调用方法  传入一个多维数组"},{"title":"实现一个评星方法","questions_id":"tak6bp-2bpj3-xh6jpg-elkb8u","json_path":"tak6bp-2bpj3-xh6jpg-elkb8u.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"实现一个评星方法\n说明\n* 可根据传入的评分和总数，返回评星结果（用 ★ 和 ☆ 描述）\n* 评分必选项，四舍五入，总数可选，大于0的整数，默认为5\n* 对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回'errror'\n示例\n```\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"function getRate(num,cont){//接受参数  第一个为评分数  第二个为总数\n   cont=cont||5    //如果总数传的话为他本身  否则默认为5\n  if(Math.round(num)>cont||Math.round(num)<=0||(cont%1!=cont)){  //如果评分为空或小于0、评分大于总数、总数小于0或总数    非整数的情况，返回’errror’\n    return \"error\"\n    }\n  let str=\"★\".repeat(Math.round(num))+\"☆\".repeat(cont-Math.round(num)) //利用传入的评分数和总数来计算星星的数\n  return str     //返回一个字符串\n}\ngetRate(5,8) //调用  传入参数"}]