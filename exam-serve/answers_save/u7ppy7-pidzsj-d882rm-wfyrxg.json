[{"title":"匿名自执行函数的应用","questions_id":"vh80e-3d3g3o-6hy47e-ib2x4c","json_path":"vh80e-3d3g3o-6hy47e-ib2x4c.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"heinan","user_id":"fdjfr-msxp8a","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"代码如下：\n```js\nfor (var i = 0; i < 5; i++) {\n    setTimeout(function () {\n        console.log(i)\n    })\n}\n输出\n5\n5\n5\n5\n5\n```\n修改上面代码，打印结果要求为：0,1，2，3，4","student_answer":"        for (let i = 0; i < 5; i++) {\n            setTimeout(function() {\n                console.log(i)\n            })\n        }"},{"title":"react生命周期","questions_id":"xt05yo-prna5g-f7zqo-ltl5rh","json_path":"xt05yo-prna5g-f7zqo-ltl5rh.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"dingshaoshan","user_id":"ypay2t-7uxsd","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"# react常用生命周期图\n\n## 请在 “其他“ 中查看图片。 \n \n\n\n如图是react常用生命周期图，请阅读图，并在1，2，3，4处填写对应的生命周期","student_answer":"1 shouldComponentUpdate 应该更新组件吗？ return false/true\n2 componentDidMount  组件渲染完成\n3 componentDidUpdate  组件更新完毕"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"A  函数式定义的无状态组件\n  \t（组件不会被实例化，整体渲染性能得到提升\n\t因为组件被精简成一个render方法的函数来实现的，由于是无状态组件，所以无状态组件就不会在有组件实例化的过程，\t \t实例化过程也就不需要分配多余的内存，从而性能得到一定的提升。\n\t组件不能访问this对象\n\t无状态组件由于没有实例化过程，所以无法访问组件this中的对象，例如：this.ref、this.state等均不能访问。若想访\t\t就不能使用这种形式来创建组件\n\t组件无法访问生命周期的方法\n\t因为无状态组件是不需要组件生命周期管理和状态管理，所以底层实现这种形式的组件时是不会实现组件的生命周期方·\t\t法。所以无状态组件是不能参与组件的各个生命周期管理的。\n\t无状态组件只能访问输入的props，同样的props会得到同样的渲染结果，不会有副作用\n\t无状态组件被鼓励在大型项目中尽可能以简单的写法来分割原本庞大的组件，未来React也会这种面向无状态组件在譬如无\t\t意义的检查和内存分配领域进行一系列优化，所以只要有可能，尽量使用无状态组件。）\n    function HelloComponent(props, /* context */) {\n  \t\t\treturn <div>Hello {props.name}</div>\n\t  }\n\t ReactDOM.render(<HelloComponent name=\"Sebastian\" />, mountNode) \nB es5原生方式React.createClass定义的组件\n\t\tReact.createElement(标签名， 属性， 子元素) 返回值：React元素\n     ReactDOM.render(<标签名 />, mountNode) \n\t\tReact.createClass会自绑定函数方法（不像React.Component只绑定需要关心的函数）导致不必要的性能开销，增加\t\t\t\t代码\t\t过时的可能性。\n\t\tReact.createClass的mixins不够自然、直观；React.Component形式非常适合高阶组件（Higher Order Components--\t\t\tHOC）,它以更直观的形式展示了比mixins更强大的功能，并且HOC是纯净的JavaScript，不用担心他们会被废弃。HOC\t\t可以参考无状态组件(Stateless Component) 与高阶组件。\n\nC es6形式的extends React.Component定义的组件\n\t\t\tclass Home extends React.Component{\n            render() {\n        \t\t\treturn <div></div>\n    \t\t\t}\n          }\n\t\t\tReactDOM.render(<标签名 />, mountNode) \n\t函数this自绑定"},{"title":"分别使用DOM0级DOM2级给一个DIV绑定事件","questions_id":"1gsxn-k09c2j-gq8peo-sohe9","json_path":"1gsxn-k09c2j-gq8peo-sohe9.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"分别使用DOM0级DOM2级给一个button绑定事件，并且描述这两种方式的区别","student_answer":"\nbutton.onclick = function(){\n\talert(\"aaa\");\n}\nbutton.addEventListener(“事件名”，事件执行语句，布尔值)\n\nDOM0级 : 只能触发事件冒泡阶段不能触发事件捕获阶段。\n\t\t 同一元素绑定相同的事件，后面的会覆盖前面的。\n      还可以通过行内式给元素绑定事件\nDOM2级 : 对于精确的元素不区分事件捕获和事件冒泡，事件的执行顺序是按照绑定顺序来的。\n\t\t同一个元素绑定相同的事件，后面的不会覆盖前面的。因为DOM2级事件绑定不是给元素添加属性是直接添加的事件。等\t\t\t同于给一个元素绑定了多个事件。\n      在DOM2级事件处理中通过addEventListener()添加的匿名函数无法移除，要先给函数命名：\n\n"},{"title":"最少两种方式实现点击每个li都弹出下标","questions_id":"puaqas-1modca-2y04jh-brcz59g","json_path":"puaqas-1modca-2y04jh-brcz59g.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"<ul id=”test”>\n    <li>这是第一条</li>\n    <li>这是第二条</li>\n    <li>这是第三条</li>\n</ul>","student_answer":"    <ul>\n        <li>这是第一条</li>\n        <li>这是第二条</li>\n        <li>这是第三条</li>\n    </ul>\n\n\t1     let lis = [...document.querySelectorAll('li')];\n        lis.forEach((item, i) => {\n            item.onclick = () => {\n                console.log(i)\n            }\n        })\n\n\t2 \t\t let ul = document.querySelector('ul');\n        let lis = [...document.querySelectorAll('li')];\n        ul.onclick = (e) => {\n            if (e.target.tagName === 'LI') {\n               lis.forEach((item, i) => {\n                   if (lis[i] === e.target) {\n                       console.log(i)\n                   }\n               })\n            }\n        }"}]