[{"title":"匿名自执行函数的应用","questions_id":"vh80e-3d3g3o-6hy47e-ib2x4c","json_path":"vh80e-3d3g3o-6hy47e-ib2x4c.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"heinan","user_id":"fdjfr-msxp8a","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"代码如下：\n```js\nfor (var i = 0; i < 5; i++) {\n    setTimeout(function () {\n        console.log(i)\n    })\n}\n输出\n5\n5\n5\n5\n5\n```\n修改上面代码，打印结果要求为：0,1，2，3，4","student_answer":"for (let i = 0; i < 5; i++) {\n    setTimeout(function () {\n        console.log(i)\n    })\n}"},{"title":"react生命周期","questions_id":"xt05yo-prna5g-f7zqo-ltl5rh","json_path":"xt05yo-prna5g-f7zqo-ltl5rh.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"dingshaoshan","user_id":"ypay2t-7uxsd","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"# react常用生命周期图\n\n## 请在 “其他“ 中查看图片。 \n \n\n\n如图是react常用生命周期图，请阅读图，并在1，2，3，4处填写对应的生命周期","student_answer":"shouldComponentUpdate\ncomponentDidMount\ncomponentDidUpdate"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"函数式定义的无状态组件:创建纯展示组件，只负责根据传入的props来展示，不涉及到要state状态的操作，是一个只带有一个render方法的组件类\n\t组件不会被实例化，整体渲染性能得到提升\n\t组件不能访问this对象\n\t组件无法访问生命周期的方法\n\t无状态组件只能访问输入的props，同样的props会得到同样的渲染结果，不会有副作用\nes5原生方式React.createClass定义的组件\n\tReact.createClass会自绑定函数方法导致不必要的性能开销\n\tps：React 版本16以后，React.createClass({})创建组件的方式失效。\nes6形式的extends React.Component定义的组件\n  区别： function创建组件的方式最为高效，但是其只能传递props，而不能使用状态等。 extends React.component 的方式功能更为强大，他不仅可以通案过 this.props 来使用prop并且还可以使用状态管理，另外，还可以通过 extends 继承 React.pureComponent ，这样，我们就更加容易使用钩子函数等。\n  React.createClass与extends React.Component的不同:\n  \t\t 一、函数this自绑定\n      二,组件属性类型propTypes及其默认props属性defaultProps配置不同\n\t\t 三,组件初始状态state的配置不同\n      四、 Mixins的支持不同"},{"title":"分别使用DOM0级DOM2级给一个DIV绑定事件","questions_id":"1gsxn-k09c2j-gq8peo-sohe9","json_path":"1gsxn-k09c2j-gq8peo-sohe9.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"分别使用DOM0级DOM2级给一个button绑定事件，并且描述这两种方式的区别","student_answer":"<button id=\"btn\"></button>\n<script>\n  DOM0级:btn.onclick=function(){\n\tconsole.log(1)\n}\nDOM2级:btn.addEventListener(\"click\",function(){\n\tconsole.log(1)\n},false)\n </script>\n区别:DOM0级事件绑定 会存在覆盖的问题；DOM2级支持绑定多个函数,不会覆盖，会依次执行,dom0和dom2是可以共存的\n\tDOM0级事件不支持事件捕获,DOM2级事件可以通过设置true/false来实现冒泡或者捕获。但是注意\n冒泡可以被阻止，捕获不能被阻止。"},{"title":"最少两种方式实现点击每个li都弹出下标","questions_id":"puaqas-1modca-2y04jh-brcz59g","json_path":"puaqas-1modca-2y04jh-brcz59g.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"<ul id=”test”>\n    <li>这是第一条</li>\n    <li>这是第二条</li>\n    <li>这是第三条</li>\n</ul>","student_answer":" let lis= [...document.querySelectorAll(\"ul li\")] \n  lis.map((item,i)=>{\n      item.onclick=()=>{\n        console.log(i)\n      }\n  })\nlet lis= Array.from(document.querySelectorAll(\"ul li\"),function(item,i){\n      item.onclick=(e)=>{\n          console.log(i)\n      }\n  })"}]