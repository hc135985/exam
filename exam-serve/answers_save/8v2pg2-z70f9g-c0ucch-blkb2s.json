[{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"let su = 0; //定义变量\nfunction wawa(n, r) { //声明一个函数\n    if (n === 0) { //判断n参数是否全等于0\n        r = [];\n    }\n    var j = 1;\n    //如果不全等于0切小于3\n    while (j < 3) {\n        if (num + j <= 10) {\n            let r_l = [...r]; //将数组展开\n            r_l.push(j);\n            if (n + j === 10) {\n                su++;\n                console.log(r_l)\n            } else {\n                wawa(n + j, r_l)\n            }\n        }\n        i++;\n    }\n}\nwawa(0) //调用初始值为0"},{"title":"大小文件读取","questions_id":"z9ndnc-qhzc6-wb5vju-0pvnzk","json_path":"z9ndnc-qhzc6-wb5vju-0pvnzk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个方法适配大小文件的读取，限定值2M","student_answer":"// 封装一个方法适配大小文件的读取，限定值2M\nlet fs = require('fs');\nlet path = require('path');\n//假设一个文件夹路径是lxt./aa\nlet as = path.join(__dirname, './aa');\nconsole.log(as); //此刻的as是\n//C:\\Users\\598\\Desktop\\lxt\\aa\n\nlet daxiao = 2000000; //声明一个2M的变量\n\nfunction wenjian(as) { //封装一个判断文件的大小是否大于2M\n    let isTrue = fs.existsSync(as); //判断所接收的参数的文件是否存在\n    //console.log(isTrue); //打印出来的是一个布尔类型的true\n    //if判断\n    if (!isTrue) {\n        return; //如果不存在就直接给他return\n    }\n    //如果没有被返回出去那就证明是个文件或文件夹是存在的\n    let ziyu = fs.readdirSync(as); //\n    //console.log(ziyu); //[ 'aa.mp4' ]‘-----’以数组的形式把as的子文件给打印显示出来\n    ziyu.forEach(val => {\n        let lujin = path.join(as, val); //给as的每一项子文件拼接路径\n        // console.log(lujin);\n        let xinxi = fs.statSync(lujin); //获取文件信息\n        // console.log(xinxi);\n        let size = xinxi.size; //获取文件信息的大小\n        // console.log(size);\n        //判断文件大小\n        if (size > daxiao) {\n            console.log('文件超过2M')\n        } else {\n            console.log('文件大小复合要求')\n        }\n    })\n};\nwenjian(as);\n\n\n"},{"title":"实现多维数组转换为一维数组","questions_id":"60gn1-9nj3mi-hv4xz-t6ecp","json_path":"60gn1-9nj3mi-hv4xz-t6ecp.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个函数可以使得n维数组转换为1维数组，输出","student_answer":"let arr = [1, 2, 3, [4, [5, [6]]]]; //模拟一个数组\nlet newarr = []; //设一个空数组\nfunction arrFn(arr) { //封装遍历数组的函数\n    arr.forEach((val) => { //遍历数组\n        // console.log(val);\n        let chang = val.length; //获取每一个val的长度\n        // console.log(chang)\n        if (chang >= 1) { //判断如果长度大于等于1 就让函数在执行一遍 回调一波\n            //如果长度大于2的话会有bug 打印出来的会是[ 1, 2, 3, 4, 5, [ 6 ] ]\n            arrFn(val);\n        } else {\n            newarr.push(val); //否则直接拼接\n        }\n    })\n    return newarr; //然后返回结果\n}\n// arrFn(arr);\nconsole.log(arrFn(arr)); //[ 1, 2, 3, 4, 5, 6 ]"},{"title":"实现一个评星方法","questions_id":"tak6bp-2bpj3-xh6jpg-elkb8u","json_path":"tak6bp-2bpj3-xh6jpg-elkb8u.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"实现一个评星方法\n说明\n* 可根据传入的评分和总数，返回评星结果（用 ★ 和 ☆ 描述）\n* 评分必选项，四舍五入，总数可选，大于0的整数，默认为5\n* 对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回'errror'\n示例\n```\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"/*封装一个函数  getRate(ge, su = 0)\n    ge:这个参数 代表 决定有几个★\n    su:这个参数 代表 决定有几个☆\n    moren:这个参数 代表 评分默认5\n    并且要给su设一个默认值为0    因为在不知道它的参数传的是两个还是一个  以便于后面最判断\n*/\n// console.log(5 % 1, '-----', 5.5 % 1)\nlet str = ''; //定义一个空数组\nlet kong = ''; //定义一个空数组\nfunction getRate(ge, su = 0, moren = 5) {\n    if (ge + su < 0) { //判断评分是否小于0\n        // getRate(-2); // 'error'\n        console.log('error')\n    } else if (su < moren && ge + su > 0) {\n        // getRate(4); // ★★★★☆\n        // getRate(3.4); //  ★★★☆☆\n        let newge = Math.round(ge); //四舍五入\n        //判断su值是否大于moren值 并且 ge+ su 是否大于 0\n        for (var i = 1; i <= newge; i++) { //循环ge打印★\n            str += '★';\n        }\n        for (var j = 1; j <= moren - ge; j++) { //循环 moren - ge打印☆\n            kong += '☆';\n        }\n        newstr = str + kong;\n        console.log(newstr)\n    } else if (ge + su > 0 && su > moren) {\n        // getRate(4, 8); // ★★★★☆☆☆☆\n        // getRate(3, 5.5); // 'error'\n        //判断su值是否大于moren值 并且 ge+ su 是否大于 0;\n        //同上\n        if (su % 1 != 0) {\n            console.log('error')\n        } else {\n            for (var i = 1; i <= ge; i++) {\n                str += '★';\n            }\n            for (var j = 1; j <= su - ge; j++) {\n                kong += '☆';\n            }\n            newstr = str + kong;\n            console.log(newstr)\n        }\n    } else if (ge + su > 0 && su < moren) {\n        // getRate(5, 2); // 'error'\n        console.log('error')\n    }\n}\ngetRate(3, 5.5);\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'"}]