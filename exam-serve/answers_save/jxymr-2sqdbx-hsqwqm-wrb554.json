[{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":"var resizeFlag = null;\n    window.onresize = function(){\n    if(resizeFlag != null){\n        clearTimeout(resizeFlag);\n    }\n    resizeFlag = setTimeout(function(){\n        changeDivHeight();\n    },500)\n    }\n   function changeDivHeight(){\n       if(document.body.clientWidth>=600){\n                 console.log('hello');\n       }\n   }"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"1、函数式定义的无状态组件  区别：组件不会被实例化，整体渲染性能得到提升，不能访问this对象 ，无法访问生命周期的方法 无状态组件只能访问输入的props同样的props会得到同样的渲染结果，不会有副作用\n2、ea5原生方式React.createClass定义的组件  区别：React.createClass会自绑定函数方法导致不必要的性能开销 mixins不够自然、直观  （现在已经失效）\n\n3、es6形式的extends React.Component定义的组件   区别：React.createClass可以更好实现代码复用"},{"title":"封装图片加载Promise","questions_id":"gt8z4u-ufd66j-najaef-y8ytir","json_path":"gt8z4u-ufd66j-najaef-y8ytir.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 封装加载图片的promise  \n```js\nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}\n```\n","student_answer":"const image = new Image();\nimage.onload=function(){\n  resolve(image)\n}\nimage.onerror=function(){\n  reject(new Error(‘无法加载图片’+url))\n}\nimages.src=url;"}]