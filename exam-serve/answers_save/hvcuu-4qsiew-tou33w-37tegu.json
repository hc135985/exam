[{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":"    let open=true\n        window.onresize=function(){  \n            if(document.documentElement.clientWidth>=600){\n               if(open){\n                   console.log(\"hellow\")\n                   open=false\n               }\n            }else{\n                open=true\n            }\n        }"},{"title":"肥猫列表","questions_id":"a2u5p-vzci28-ctdv2a-zux3v","json_path":"a2u5p-vzci28-ctdv2a-zux3v.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"dingshaoshan","user_id":"ypay2t-7uxsd","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"现在有很多只猫，都很肥：\n\nconst cats = [\n  { name: 'Tom', weight: 300 },\n  { name: 'Lucy', weight: 400 },\n  { name: 'Lily', weight: 700 },\n  { name: 'Jerry', weight: 600 },\n  ...\n]\n\n现在你需要把它们按照由胖到瘦的顺序排个序","student_answer":"cats.sort((a,b)=>{\n   return  b.weight-a.weight\n})"},{"title":"实现双向数据绑定","questions_id":"nodsz-nme56x-51nrc-tklsfn","json_path":"nodsz-nme56x-51nrc-tklsfn.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"使用js实现一个数据双向绑定效果, input中输入的内容同步到p标签中\n```\n<div id=\"app\">\n    <input type=\"text\" id=\"txt\">\n    <p id=\"show-txt\"></p>\n</div>\n```","student_answer":"  var txt=document.querySelector(\"#txt\")\n        var show=document.querySelector(\"#show-txt\")\n        txt.oninput=(e)=>{\n           show.innerHTML =e.target.value\n        }"},{"title":"最高产的猪","questions_id":"oynzjn-gvvv5s-uowecl-m4yg2h","json_path":"oynzjn-gvvv5s-uowecl-m4yg2h.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"dingshaoshan","user_id":"ypay2t-7uxsd","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"我们用一个 HTML 结构来表示一头猪的子子孙孙：\n<div class=\"pig\">\n  <div class=\"pig\">\n    <div class=\"pig\">\n      <div class=\"pig\"></div>\n    </div>\n    <div class=\"pig\">\n      <div class=\"pig\"></div>\n    </div>\n  </div>\n  <div class=\"pig\">\n    <div class=\"pig\"></div>\n    <div class=\"pig\"></div>\n  </div>\n  <div class=\"pig\">\n    <div class=\"pig\">\n      <div class=\"pig\"></div>\n      <div class=\"pig\"></div>\n      <div class=\"pig\"></div>\n      <div class=\"pig\"></div>\n      <div class=\"pig\"></div>\n    </div>\n  </div>\n</div>\n\n每个 DOM 节点都是一头猪，子节点就是这头猪的孩子。\n请你完成一个函数 mostProductivePigCount 它接受一个 DOM 节点作为参数，返回一个数组。存放同代猪的孩子的数量。\n\n比如第一代猪的孩子有3个，第二代猪的孩子分别有[2, 2, 1]，第三代猪的孩子分别有[1,1,0,0,5]","student_answer":"   const ul = h('ul', { id: 'list', style: 'color: red' }, [\n            h('li', { class: 'item' }, ['Item 1']),\n            h('li', { class: 'item' }, ['Item 2']),\n            h('li', { class: 'item' }, ['Item 3'])\n        ]);\n\n        const urlDom = ul.render() // 渲染 DOM 节点和它的子节点\n        ulDom.getAttribute('id') === 'list' // true\n        ulDom.querySelectorAll('li').length === 3 // true\n        \n\n        class VNode {\n  constructor (tagName, props, children) {\n    this.tagName = tagName\n    this.props = props\n    this.children = children\n  }\n  render () {\n    // 根据 tagName 构建 DOM 节点\n    const el = document.createElement(this.tagName)\n    // 设置 DOM 节点属性\n    Object.entries(this.props).forEach(([key, value]) => el.setAttribute(key, value))\n    var children = this.children || []\n    /* 渲染子节点 */\n    children.forEach((child) => {\n      var childNode = (child instanceof VNode)\n        ? child.render() // 如果子节点也是虚拟DOM，递归构建DOM节点\n        : document.createTextNode(child) // 如果字符串，只构建文本节点\n      el.appendChild(childNode)\n    })\n    return el\n  }\n}\n\nconst h = (tagName, props, children) => {\n  return new VNode(tagName, props, children)\n}\n"}]