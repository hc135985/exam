[{"title":"实现发布订阅模式","questions_id":"aihpv-1ru212-wun87-0hli3","json_path":"aihpv-1ru212-wun87-0hli3.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"现在有一个类 \n\n```\nclass Watch{\n  on(){\n   // 实现该方法逻辑\n  }\n  emit(){\n   // 实现该方法逻辑 \n  }\n}\n\n//调用示例如下：\nconst w1 = new Watch();\nw1.on('www',(options) => {\n  console.log(options)\n});\nw1.emit('www','success');\n\n// 最后的打印结果是  success\n\n```\n\n请实现要求的逻,可以对该类进行任意修改","student_answer":"class Watch{\n  constructor(){\n    this.events={}\n  }\n  on(type,ck){\n    if(this.events[type]){\n      this.events[type].push(ck)\n    }else{\n      this.events[type]=[ck]\n    }\n  }\n  emit(type,...vals){\n    this.events[type].forEach(item=>item(...vals))\n  }\n}\nconst w1=new Watch();\nw1.on('www',(options)=>{\n  console.log(options)\n})\nw1.emit('www','success')"},{"title":"async配合transition实现自定义动画","questions_id":"bqq54a-jly2z9-m9fg7pj-oio193","json_path":"bqq54a-jly2z9-m9fg7pj-oio193.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"html结构\n```html\n<div id=\"box\"></div>\n```\ncss样式\n```css\n#box{\n  width:100px; height:100px; background-color:red; border-radius:50%; transition:transform 0.5s;\n}\n```\njavaScript代码\n```js\n        const oBox = document.getElementById('box');\n        oBox.addEventListener('transitionend',()=>{\n            let {x,y} = oBox;\n            moveTo.reslove({x,y});\n        },false);\n        function moveTo(x,y){\n            return new Promise((reslove,reject)=>{\n                moveTo.reslove = reslove;\n                oBox.x = x;\n                oBox.y = y;\n                oBox.style.transform = `translate(${x}px,${y}px)`;\n            })\n        }\n```\n\n补全以上代码，使点击oBox后，使oBox走出一个  W 的轨迹（使用async函数实现），并简单写出整体的代码思路。","student_answer":" const oBox = document.getElementById('box');\n        class Circle {\n            constructor(parent, arr) {\n                this.parent = document.querySelector(parent);\n                this.arr = arr;\n                this.reslove=null;\n                this.start().then(()=>{\n                  this.callback()\n                })\n                this.moveEnd()\n            }\n            moveEnd() {\n                oBox.addEventListener('transitionend', () => {\n                    this.reslove&&this.reslove();\n                })\n            }\n            moveTo(x, y) {\n                return new Promise((reslove, reject) => {\n                    oBox.style.transform = `translate(${x}px,${y}px)`;\n                    this.reslove= reslove;\n                })\n            }\n            async start() {\n                for (var i of this.arr) {\n                    await this.moveTo(i.x,i.y);\n                }\n            }\n            end(ck){\n                this.callback=ck\n            }\n        }\n        oBox.onclick = () => {\n            let pos = new Circle('#box', [{\n                x: 0,\n                y: 0\n            }, {\n                x: 40,\n                y: 80\n            }, {\n                x: 80,\n                y: 0\n            }, {\n                x: 120,\n                y: 80\n            }, {\n                x: 160,\n                y: 0\n            }])\n            pos.end(()=>{\n              console.log('动画结束')\n            })\n        }"},{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"        //跳法1，一次跳一个\n        const jump1 = (n) => {\n            if (n == 1) {\n                return 1\n            } else if (n == 2) {\n                return 2\n            } else {\n                return jump1(n - 1) + jump1(n - 2)\n            }\n        }\n        //跳法2，一次跳两个\n        const jump2 = (n) => {\n            if (n == 1) {\n                return 1\n            } else if (n == 2) {\n                return 2\n            } else {\n                return 2 * jump1(n - 1)\n            }\n        }\n        //结果可能性，10个台阶\n        console.log(jump1(10))//89\n        console.log(jump2(10))//110"},{"title":"输入的reduce方法","questions_id":"zyocwi-drka9-kx8vv-blrmw9p","json_path":"zyocwi-drka9-kx8vv-blrmw9p.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"现在有一个数组如下：\n```js\n    const car = [\n            {\n                groupName:'水果',\n                type:[\n                    {\n                        name:'苹果',\n                        price:10\n                    },\n                    {\n                        name:'橘子',\n                        price:40\n                    },\n                    {\n                        name:'香蕉',\n                        price:90\n                    }\n                ]\n            },\n            {\n                groupName:'蔬菜',\n                type:[\n                    {\n                        name:'芹菜',\n                        price:10\n                    },\n                    {\n                        name:'菠菜',\n                        price:15\n                    },\n                    {\n                        name:'土豆',\n                        price:8\n                    }\n                ]\n            }\n        ]\n```\n\n根据上述数据，编写一个函数，该函数(computedPrice)接收上述的数据作为参数，返回一个对象，请输入用数组的reduce方法实现。对象的格式如下\n\n```js\n       {\n            allPrice:所有商品的总价格,\n            group:[\n                {\n                    typeName:'水果',\n                    price:所有水果的总价格\n                },\n                {\n                    typeName:'蔬菜',\n                    price:所有蔬菜的总价格\n                }\n            ]\n        } \n```  ","student_answer":"          //数组\n          const car = [\n            {\n                groupName:'水果',\n                type:[\n                    {\n                        name:'苹果',\n                        price:10\n                    },\n                    {\n                        name:'橘子',\n                        price:40\n                    },\n                    {\n                        name:'香蕉',\n                        price:90\n                    }\n                ]\n            },\n            {\n                groupName:'蔬菜',\n                type:[\n                    {\n                        name:'芹菜',\n                        price:10\n                    },\n                    {\n                        name:'菠菜',\n                        price:15\n                    },\n                    {\n                        name:'土豆',\n                        price:8\n                    }\n                ]\n            }\n        ]\n         //计算方法\n        function computedPrice(car) {\n            let res = {\n                group: car.map(item => {\n                    return {\n                        typeName: item.groupName,\n                        price: item.type.reduce((prev, next) => prev + next.price, 0)\n                    }\n                })\n            }\n            //总价  \n            res.allPrice = res.group.reduce((prev, next) => prev + next.price, 0);\n            return res;\n        }\n        console.log(computedPrice(car))"}]