[{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":"var offsetWid = document.documentElement.clientWidth;\n    var offsetHei = document.documentElement.clientHeight;\n\nwindow.onresize=function(){  \n if(offsetWid>=600){\n  console.log('hello') \n }\n   \n}"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"\n1 函数式定义的无状态组件\n2.es5原生方式React.createClass定义的组件\n3.es6形式的extends React.Component定义的组件\n\n//无状态组件\n组件不会被实例化，整体渲染性能得到提升\n组件不能访问this对象\n组件无法访问生命周期的方法\n无状态组件只能访问输入的props，同样的props会得到同样的渲染结果，不会有副作用\n\n\n//React.createClass与React.Component区别\n函数this自绑定\n组件属性类型propTypes及其默认props属性defaultProps配置不同\n组件初始状态state的配置不同\nMixins的支持不同\n"},{"title":"封装图片加载Promise","questions_id":"gt8z4u-ufd66j-najaef-y8ytir","json_path":"gt8z4u-ufd66j-najaef-y8ytir.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 封装加载图片的promise  \n```js\nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}\n```\n","student_answer":"{\n  function loadImg(src) {\n    return new Promise((resolve, reject) => {\n      let img = document.createElement('img');\n      img.src = src;\n      img.onload = function() {\n        resolve(img);\n      }\n      img.onerror = function(err) {\n        reject(err)\n      }\n    })\n  }\n\n  function showImgs(imgs) {\n    imgs.forEach(img => {\n      document.body.appendChild(img)\n    })\n  }\n\n  Promise.all([\n    loadImg('http://img4.imgtn.bdimg.com/it/u=1020383179,3062284491&fm=26&gp=0.jpg'),\n    loadImg('http://img1.imgtn.bdimg.com/it/u=1992085767,102835282&fm=26&gp=0.jpg'),\n    loadImg('http://img4.imgtn.bdimg.com/it/u=967395617,3601302195&fm=26&gp=0.jpg')\n  ]).then(showImgs)\n}\n"},{"title":"防抖场景实现","questions_id":"pee5rm-didl4v-b5ty-eay7yo","json_path":"pee5rm-didl4v-b5ty-eay7yo.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"题目 有一个 input 查询框，每一次 change 都会触发一个“ a 函数”\n要求\n1.此 input 框的 change 请求 在间隔 0.3s 内的过滤掉\n2.提供一个包装函数，可以对上述的“ a 函数”请求过滤做统一的封装\n```\n<input id=\"input\" />\n```","student_answer":"(function($) {\n\t $.fn.update = function(value){\n\t \t$(this).each(function(){\n\t\t\tif(value!=this.value){\n\t\t\t\tthis.value = value;\t\n\t\t\t\tthis.onchange();\n\t\t\t}\n\t\t});\n\t };\n})(jQuery);"}]