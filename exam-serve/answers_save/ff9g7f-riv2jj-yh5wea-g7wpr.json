[{"title":"Vue基础知识","questions_id":"05snch-6eq8dn-szfd6q-t34nld","json_path":"05snch-6eq8dn-szfd6q-t34nld.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 控制元素显示隐藏的指令v-if与v-show之间的区别及适用场景？","student_answer":"相同点：都可以控制 元素显示隐藏\n\n不同点：实现原理不同\nv-if:\n（1）满足条件才加载，不满足不会加载;\n（2）\nv-show\n(1)进入页面就加载， 加载完毕后根据 其布尔值 操作具体添加 行内样式 disiplay属性 使其显示，或者隐藏\n\n应用场景：\n（1）列表页与详情页之间切换的时候，通过v-if来决定是否渲染详情页，通过v-show决定是否渲染列表页，这样过可以做到从详情页返回时回到的就是进入详情页前的列表页。"},{"title":"使用async函数实现多张图片的依次加载（哪张加载完哪张添加到页面）","questions_id":"5oxqyl-8dnbaa-3dt3o9-qrecrk","json_path":"5oxqyl-8dnbaa-3dt3o9-qrecrk.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 使用async函数实现多张图片的依次加载（哪张加载完哪张添加到页面）\n\n```js\n// 封装加载图片的promise  \nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}   \nconst imgs = ['url1', 'url2', 'url3'];\n// 依次加载图片\nasync function fAsync(imgs){\n   // write your code here\n}\n\nfAsync(imgs);\n```","student_answer":"let loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n   \t\t  let img = new Image()\n          img.onload=()=>{\n          \t\treslove(img)\n          }\n          img.src=src\n    })\n}   \nconst imgs = ['url1', 'url2', 'url3'];\n// 依次加载图片\nasync function fAsync(imgs){\n   for(let i= 0 ;i<imgs.length ; i++){\n   \tawait loadImg(imgs[i])\n   }\n}\n\nfAsync(imgs);"},{"title":"vue自定义指令","questions_id":"6ivrh-g7kp8a-2gixkg-p117t","json_path":"6ivrh-g7kp8a-2gixkg-p117t.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"## 阅读如下代码，写出代码的功能，输入和输出\n```js\nVue.filter('formatDate', function(value){\n  let date = new Date();\n  date.setTime(value);\n  let year = date.getFullYear(),\n      month = (date.getMonth() + 1).toString().padStart(2, '0'),\n      day = date.getDate().toString().padStart(2, '0'),\n      hour = date.getHours().toString().padStart(2, '0'),\n      min = date.getMinutes().toString().padStart(2, '0'),\n      sec = date.getSeconds().toString().padStart(2, '0');\n  return `${year}-${month}-${day} ${hour}:${min}:${sec}`\n});\n```","student_answer":"全局注册过滤器 将时间戳 转为 具体的   年-月-日 时:分:秒  格式的时间\n使用方法 ；<div>{{ 1555722347040 |formatDate }}</div> \n得出结果是 2019-04-20 09:05:47"},{"title":"vue自定义指令","questions_id":"9wck8-qt73nd-0v6s8-f6jyid","json_path":"9wck8-qt73nd-0v6s8-f6jyid.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"## 阅读如下代码，写出代码的功能，输入和输出\n```js\nVue.filter('toThousandFilter', function(num){\n  return (+num || 0).toString().replace(/^-?\\d+/g, m => m.replace(/(?=(?!\\b)(\\d{3})+$)/g, ','))\n});\n```","student_answer":"全局注册过滤器， 功能为 为数字加 千位分隔符\n使用 <div>{{ 1555722670868 |toThousandFilter}}</div>\n输出的是  1,555,722,670,868"}]