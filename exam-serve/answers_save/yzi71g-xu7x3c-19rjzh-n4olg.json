[{"title":"匿名自执行函数的应用","questions_id":"vh80e-3d3g3o-6hy47e-ib2x4c","json_path":"vh80e-3d3g3o-6hy47e-ib2x4c.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"heinan","user_id":"fdjfr-msxp8a","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"代码如下：\n```js\nfor (var i = 0; i < 5; i++) {\n    setTimeout(function () {\n        console.log(i)\n    })\n}\n输出\n5\n5\n5\n5\n5\n```\n修改上面代码，打印结果要求为：0,1，2，3，4","student_answer":"for (let i = 0; i < 5; i++) {\n    setTimeout(function () {\n        console.log(i)\n    })\n}"},{"title":"react生命周期","questions_id":"xt05yo-prna5g-f7zqo-ltl5rh","json_path":"xt05yo-prna5g-f7zqo-ltl5rh.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"dingshaoshan","user_id":"ypay2t-7uxsd","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"# react常用生命周期图\n\n## 请在 “其他“ 中查看图片。 \n \n\n\n如图是react常用生命周期图，请阅读图，并在1，2，3，4处填写对应的生命周期","student_answer":"constructor\nrender\ncomponentDidMount\nshoudComponentUpdate"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"无状态函数式组件 （1）该组件不能访问this对象 (2)组件不会被实例化，(3)整体渲染性都会得到提升 (4)没有生命周期的那些方法 (5)只能访问输入的props，无state状态\nReact.Component定义的组件 （1）有状态的组件，会被实例化，可以访问生命周期的方法\nReact.createClass是ES5的原生的JavaScript来实现的React组件该例子实现了一个交互列表，用户输入信息，按回车后触发键盘事件将获取到的输入值渲染生成列表项，输入信息的数量可以是任意多个 （1）React.createClass会自绑定函数方法导致不必要的性能开销 （2）React.createClass的mixins不够自然、直观\n无状态函数式写法 优于React.createClass，而React.Component优于React.createClass。能用React.Component创建的组件的就尽量不用React.createClass形式创建组件"},{"title":"分别使用DOM0级DOM2级给一个DIV绑定事件","questions_id":"1gsxn-k09c2j-gq8peo-sohe9","json_path":"1gsxn-k09c2j-gq8peo-sohe9.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"分别使用DOM0级DOM2级给一个button绑定事件，并且描述这两种方式的区别","student_answer":"dom0级事件：元素在绑定同一事件时，后面的弹出结果会覆盖前面的弹出结果，弹出框会弹出2\nbutton.onclick=function(){\n\t\talert(1);\n\t}\n\tbutton.onclick=function(){\n\t\talert(2);\n\t}\ndom2级事件：元素可以绑定多个事件，可以是同类型的，也可以是不同类型的，同一类型事件时，后面的效果不会覆盖前面的效果，效果在时间上有先后顺序；如下代码，点击按钮时，弹出框先提示文字1，再提示文字2\n\tbutton.addEventListener('click', fun1);\n\tbutton.addEventListener('click',fun2);\n\tfunction fun1(){\n\t\talert(1);\n\t}\n\tfunction fun2(){\n\t\talert(2);\n\t}"},{"title":"最少两种方式实现点击每个li都弹出下标","questions_id":"puaqas-1modca-2y04jh-brcz59g","json_path":"puaqas-1modca-2y04jh-brcz59g.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"<ul id=”test”>\n    <li>这是第一条</li>\n    <li>这是第二条</li>\n    <li>这是第三条</li>\n</ul>","student_answer":"var lis = document.getElementsByTagName(\"li\");\n    for(var i=0;i<lis.length;i++){\n        lis[i].onclick=(function(n){\n            return function(){\n                alert(n);\n       }\n  })(i);\n$(function(){\n    $(\"ul\").on('click','li',function(){\n        alert($(this).index());\n  })\n})\n for(var i = 0; i<lis.length; i++){\n　　　　lis[i].index = i; \n　　　　lis[i].onclick = function(){\n　　　　　alert(this.index);   \n　　　　}\n   }"}]