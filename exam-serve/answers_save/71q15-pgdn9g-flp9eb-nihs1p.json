[{"title":"匿名自执行函数的应用","questions_id":"vh80e-3d3g3o-6hy47e-ib2x4c","json_path":"vh80e-3d3g3o-6hy47e-ib2x4c.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"heinan","user_id":"fdjfr-msxp8a","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"代码如下：\n```js\nfor (var i = 0; i < 5; i++) {\n    setTimeout(function () {\n        console.log(i)\n    })\n}\n输出\n5\n5\n5\n5\n5\n```\n修改上面代码，打印结果要求为：0,1，2，3，4","student_answer":"for (let i = 0; i < 5; i++) {\n            setTimeout(function () {\n                console.log(i)\n            })\n        }"},{"title":"react生命周期","questions_id":"xt05yo-prna5g-f7zqo-ltl5rh","json_path":"xt05yo-prna5g-f7zqo-ltl5rh.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"dingshaoshan","user_id":"ypay2t-7uxsd","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"# react常用生命周期图\n\n## 请在 “其他“ 中查看图片。 \n \n\n\n如图是react常用生命周期图，请阅读图，并在1，2，3，4处填写对应的生命周期","student_answer":"1:shouldComponentUpdate\n2:componentDidMount\n3:componentDidUpdate"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"1:函数式定义无状态组件\n\t使得代码结构更加清晰，减少代码冗余\n\t组件不会被实例化\n   不能访问this对象\n   无法访问生命周期的方法\n   只能访问输入props，同样的props会得到同样的渲染结果，没有副作用\n2:React.createClass\n\tReact.createClass会自绑定函数方法导致不必要的性能开销\n\tReact.createClass的mixins不够自然、直观\n3:React.Component\n\nReact.createClass创建的组件，其每一个成员函数的this都有React自动绑定，任何时候使用，直接使用this.method即可，函数中的this会被正确设置\nReact.Component创建的组件，其成员函数不会自动绑定this，需要手动绑定，否则this不能获取当前组件实例对象\n"},{"title":"分别使用DOM0级DOM2级给一个DIV绑定事件","questions_id":"1gsxn-k09c2j-gq8peo-sohe9","json_path":"1gsxn-k09c2j-gq8peo-sohe9.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"分别使用DOM0级DOM2级给一个button绑定事件，并且描述这两种方式的区别","student_answer":"\t<button id=\"btn\"></button>\n\tlet btn = document.getElementById('btn')\ndom0级事件：\n   btn.onclick=function(){\n\t\talert(1);\n\t}\n\tbtn.onclick=function(){\n\t\talert(2);\n\t}\ndom2级事件：\n\tapp.addEventListener('click', fun1);\n\tapp.addEventListener('click',fun2);\n\tfunction fun1(){\n\t\talert(1);\n\t}\n\tfunction fun2(){\n\t\talert(2);\n\t}\n区别：\n\tdom0级事件元素绑定同一类型事件时，后面的效果会覆盖前面的效果\n   dom2级事件元素可以绑定多个事件，可以是同类型的，也可以是不同类型的，同一类型事件时，后面的效果不会覆盖前面的效果，效果在时间上有先后顺序"},{"title":"最少两种方式实现点击每个li都弹出下标","questions_id":"puaqas-1modca-2y04jh-brcz59g","json_path":"puaqas-1modca-2y04jh-brcz59g.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"<ul id=”test”>\n    <li>这是第一条</li>\n    <li>这是第二条</li>\n    <li>这是第三条</li>\n</ul>","student_answer":"<ul id=\"ul\">\n    <li>这是第一条li</li>\n     <li>这是第二条li</li>\n     <li>这是第三条li</li>\n </ul>\n第一种：\n\tlet li = document.querySelectorAll(\"#ul li\")\n   var length=li.length;\n     for (var i=0;i<length;i++) {\n        li[i].index=i;\n        li[i].onclick=function(){\n        alert(this.index);\n         }\n     }\n第二种：\n\tlet li = document.querySelectorAll(\"#ul li\")\n     var length=li.length;\n       for (var i=0;i<length;i++) {\n          (function(i){\n            li[i].onclick=function(){\n                alert(i);\n            }\n         })(i)\n   }\n第三种：\n\tlet myul = document.querySelector(\"ul\");\n\t  let list = document.querySelectorAll(\"ul li\");\n     let len = list.length\n\t   myul.addEventListener('click', function(ev){\n\t\tvar ev = ev || window.event;\n\t\tlet target = ev.target || ev.srcElemnt;\n\t\tfor(let i = 0;i < len; i++){\n\t\t\tif(list[i] == target){\n\t\t\t\talert(i);\n\t\t\t}\n\t\t}\n\t})"}]