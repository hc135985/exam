[{"title":"computed 和 watch 区别","questions_id":"joo9h2-q79phw-pskuido-ua4t7k","json_path":"joo9h2-q79phw-pskuido-ua4t7k.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"computed 和 watch 区别?\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"watch 监听某一个值，当被监听的值发生变化时，执行对应的操作 \nwatch更加适用于监听某一个值的变化并做对应的操作，比如请求后台接口等，而computed适用于计算已有的值并返回结果 一般用于计算"},{"title":"实现双向数据绑定","questions_id":"nodsz-nme56x-51nrc-tklsfn","json_path":"nodsz-nme56x-51nrc-tklsfn.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"使用js实现一个数据双向绑定效果, input中输入的内容同步到p标签中\n```\n<div id=\"app\">\n    <input type=\"text\" id=\"txt\">\n    <p id=\"show-txt\"></p>\n</div>\n```","student_answer":"txt.oninput = function() {\n  let val = this.value;\n  show_txt.innerHTML = val;\n}\n\n\n  \n"},{"title":"Vue导航守卫做鉴权处理","questions_id":"42cuvb-7216fb-zlkab2-wwns3d","json_path":"42cuvb-7216fb-zlkab2-wwns3d.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"wbxm4-jf8q6k-lvt2ca-ze96mg","exam_name":"月考","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 在Vue中我们可以使用导航守卫做鉴权，现有要求如下：  \n可以根据getToken()是否返回token判断  \n- 1.如果用户已经登陆  \n  - a. 如果用户要去/login页面，则重定向到/路径  \n  - b. 如果用户要去其他页面，则不做处理直接跳转    \n- 2.如果用户未登陆  \n  - a. 如果用户要去的页面在白名单内，则不做处理直接跳转  \n  - b. 如果用户要去的页面不在白名单内，则重定向到/login页面，并把要去的页面路径作为查询字符串的query的值\n\n```js\nimport router from './router'\nimport { getToken } from '@/utils/auth' // getToken from cookie\n\nconst whiteList = ['/login', '/register', '/auth-redirect']// no redirect whitelist\n\nrouter.beforeEach((to, from, next) => {\n  if (getToken()) { // determine if there has token\n    // write your code here\n  } else {\n    // write your code here\n  }\n})\n```","student_answer":"var obj = {}\n    var ipt = document.querySelector('.ipt')\n    var text = document.querySelector('.text')\n    Object.defineProperty(obj,'name',{\n      configurable:true,\n      enumerable:true,\n      get:()=>{\n        return newVal\n      },\n      set:(newVal)=>{\n        console.log(newVal)\n        ipt.value = newVal\n        text.innerHTML = newVal\n      }\n    })\n    ipt.addEventListener('input',(e)=>{\n      obj.name = e.target.value\n    })\n\n    function con(arr) {\n      console.log(arr)\n    }\n\n    let list = [1, 2, 3, 4, 5, 6, 7, 8]\n\n    con.call(null, list)\n\n\n    var productItems = [\"a\", \"b\", \"c\", \"d\"];\n\n    var indexs = [1, 2, 3,];\n    \n    productItems.sort(function (a, b) { return b - a });\n\n    indexs.forEach(function (index) { productItems.splice(index, 1) })\n\n  \n\n王泽健 2019/3/30 9:00:50\nconst vueRouter = new Router({\n    routes: [\n        //......\n        {\n          path: '/account',\n          name: 'account',\n          component: Account,\n          children: [\n            {name: 'course', path: 'course', component: CourseList},\n            {name: 'order', path: 'order', component: OrderList}\n          ]\n        }\n    ]\n});\nvueRouter.beforeEach(function (to, from, next) {\n    const nextRoute = [ 'account', 'order', 'course'];\n    const auth = store.state.auth;\n    //跳转至上述3个页面\n    if (nextRoute.indexOf(to.name) >= 0) {\n        //未登录\n        if (!store.state.auth.IsLogin) {\n            vueRouter.push({name: 'login'})\n        }\n    }\n    //已登录的情况再去登录页，跳转至首页\n    if (to.name === 'login') {\n        if (auth.IsLogin) {\n            vueRouter.push({name: 'home'});\n        }\n    }\n    nex"},{"title":"Vue基础知识","questions_id":"uecyx-3qim4-rwk9o-v43sj8","json_path":"uecyx-3qim4-rwk9o-v43sj8.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"wbxm4-jf8q6k-lvt2ca-ze96mg","exam_name":"月考","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 谈谈对Vue响应原理的理解?","student_answer":"vue是一套用于构建用户界面的渐进式框架\nvue是一款基于MVVM方式的轻量级的框架\nvue是一款基于数据驱动、组件化思想的框架\nue被设计为可以自底向上、逐层应用的框架\nvue的核心库只关注视图层，易于上手，还便于与第三方库或既有项目整合\n当与现代化的工具链以及各种支持类库结合使用时，vue也完全能够为复杂的单页应用提供驱动\n"}]