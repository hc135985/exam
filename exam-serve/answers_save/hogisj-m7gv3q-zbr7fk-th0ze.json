[{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"public class Solution {\n    public int JumpFloorII(int 10) {\n        int result=0;\n        if(10==0)\n        {result=0;\n        }else if(10==1)\n        {result=1;\n        }else{\n            result=2*JumpFloorII(10-1);\n        } \n      return result; \n    }\n}\n/*function jumpFloor(n) {\n \n        if(n<=0)return 0;\n        if(n == 1) return 1;\n        if(n==2) return 2;\n        return jumpFloor(n-1) + jumpFloor(n-2)\n  }\n  console.log(jumpFloor(10))*/"},{"title":"大小文件读取","questions_id":"z9ndnc-qhzc6-wb5vju-0pvnzk","json_path":"z9ndnc-qhzc6-wb5vju-0pvnzk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个方法适配大小文件的读取，限定值2M","student_answer":"function checkSize(input) {\n    var Sys = {};\n    var flag;\n    var filesize = 0;\n    //判断浏览器种类\n    if (navigator.userAgent.indexOf(\"MSIE\") > 0) {\n            Sys.ie=true;\n        }\n    if (navigator.userAgent.indexOf(\"Firefox\")>0) {\n            Sys.firefox=true;\n        }\n    //获取文件大小\n    if (Sys.firefox) {\n        filesize = input.files[0].size;\n    } else if (Sys.ie){\n        var fileobject = new ActiveXObject (\"Scripting.FileSystemObject\");//获取上传文件的对象\n        var file = fileobject.GetFile (input.value);//获取上传的文件\n        filesize = file.Size;//文件大小\n    }\n    //判断是否符合要求\n    if (filesize / (1024 * 1024) < 2 ) {\n        flag = true;\n    } else {\n        alert(\"附件过大，建议不要超过2M！\");\n        flag = false;\n    }\n    return flag;\n}\n"},{"title":"实现多维数组转换为一维数组","questions_id":"60gn1-9nj3mi-hv4xz-t6ecp","json_path":"60gn1-9nj3mi-hv4xz-t6ecp.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个函数可以使得n维数组转换为1维数组，输出","student_answer":" var arr = [1, 2, [3, 4, [5, 6, 7]]];\n var resultArr = [];\nfunction forEachArr(arr) {\n   for (var i = 0; i < arr.length; i++) {\n        if (arr[i] instanceof Array) {\n           arguments.callee(arr[i]);\n //            forEachArr(arr[i]);\n        } else {\n             resultArr.push(arr[i]);\n         }\n     }\n     return resultArr;\n }\n console.log(forEachArr(arr));"},{"title":"实现一个评星方法","questions_id":"tak6bp-2bpj3-xh6jpg-elkb8u","json_path":"tak6bp-2bpj3-xh6jpg-elkb8u.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"实现一个评星方法\n说明\n* 可根据传入的评分和总数，返回评星结果（用 ★ 和 ☆ 描述）\n* 评分必选项，四舍五入，总数可选，大于0的整数，默认为5\n* 对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回'errror'\n示例\n```\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"function xin(a,b){\n let ress=\"errror\"\n let numstring=''\n if(a.toString().indexOf(\".\")!==-1 ||b.toString().indexOf(\".\")!==-1||b.toString().indexOf(\"-\")!==-1||a.toString().indexOf(\"-\")!==-1){\n  return  console.log(ress)\n }else{\n   for(i=0;i<a;i++){\n     numstring+=\"★\"\n   }\n   for(l=0;l<b;l++){\n    numstring+=\"☆\"\n   }\n}\nreturn numstring\n}\nconsole.log(xin(4,8))"}]