[{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"function jumpFloor2(n) {   \n  var target = 0, number1 = 1, number2 = 2;     \n  if(n<=0)return 0;     \n  if(n == 1) return 1;     \n  if(n==2) return 2;      \n  for(var i=3;i<=n;++i) {      \n    target = number1 + number2;   \n    number1 = number2;           \n    number2 = target; \n  \t}       \n  \treturn target;    \n\t}    \n \n"},{"title":"大小文件读取","questions_id":"z9ndnc-qhzc6-wb5vju-0pvnzk","json_path":"z9ndnc-qhzc6-wb5vju-0pvnzk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个方法适配大小文件的读取，限定值2M","student_answer":"const fs = require(\"fs\")\nfunction copyDir(origin, target) { \n    fs.access(target, fs.constants.F_OK, (err) => {\n        if (!err) { \n            rmDir(target)\n        }\n        fs.mkdir(target, (err) => {\n            if (err) {\n                console.log(err)\n            }\n        })\n    });\n\n    fs.readdir(origin, (err, data) => {\n        if (err) {\n            console.log(err)\n            return\n        }\n        data.forEach((i) => {\n            let filePath = origin + \"/\" + i\n            let targetFilePath = target + \"/\" + i\n            if (fs.statSync(filePath).isDirectory()) {\n                copyDir(filePath, targetFilePath)\n            } else { \n                fs.readFile(filePath, \"utf-8\", (err, data) => {\n                    if (err) {\n                        return err\n                    }\n                    fs.writeFile(targetFilePath, data, \"utf8\", (err) => {\n                        if (err) {\n                            console.log(err)\n                            return\n                        }\n                    })\n                })\n            }\n        })\n\n    })\n}"},{"title":"实现多维数组转换为一维数组","questions_id":"60gn1-9nj3mi-hv4xz-t6ecp","json_path":"60gn1-9nj3mi-hv4xz-t6ecp.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个函数可以使得n维数组转换为1维数组，输出","student_answer":"function init(){\n  fal();\n  fa2();\n  fa3();\n}\nfunction fa1(){\n  //使用join()\n  //join() 方法用于把数组中的所有元素放入一个字符串，split() 方法用于把一个字符串分割成字符串数组。\n  var a = [1,3,4,5,[6,7,9],[2],[5]];\n  a = a.join(\",\").split(\",\"); //输出结果a=[1,3,4,5,6,7,9,2,5];\n}\nfunction fa2(){\n  //使用toString()\n  //toString() 方法可把一个逻辑值转换为字符串，并返回结果。\n  var a = [1,3,4,5,[6,7,9],[2],[5]];\n  a = a.toString().split(\",\");//输出结果a=[1,3,4,5,6,7,9,2,5];\n}\nfunction fa3(){\n  //空字符串\n  var a = [1,3,4,5,[6,7,9],[2],[5]];\n  a = (a+'').split(',');//输出结果a=[1,3,4,5,6,7,9,2,5];\n}\ninit();\n\n\n\n\n"},{"title":"实现一个评星方法","questions_id":"tak6bp-2bpj3-xh6jpg-elkb8u","json_path":"tak6bp-2bpj3-xh6jpg-elkb8u.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"实现一个评星方法\n说明\n* 可根据传入的评分和总数，返回评星结果（用 ★ 和 ☆ 描述）\n* 评分必选项，四舍五入，总数可选，大于0的整数，默认为5\n* 对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回'errror'\n示例\n```\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"css.score_wrapper {\n      display:inline-block;\n      font-size: 45px;\n      cursor: pointer;\n      color: #dc2020;\n      -webkit-user-select:none;\n      -moz-user-select:none;\n      -ms-user-select:none;\n      user-select:none;\n    }html<div class=\"score_wrapper\"></div>javascript    $(function () {\n      ScoreInit(3); //初始化，参数是0～5的数字，代表星数，传空默认0颗星\n    })\n    //点击\n    function ScoreInit(e) {\n      Score((e == null) ? 0 : e); //传空默认0颗星\n      $(\".score_wrapper\").bind('click', function (e) {\n        var eachWidth = $(\".score_wrapper\").width() / 5; //计算出每个星星的长度\n        var X = e.pageX - $(this).offset().left; //距离父容器的偏移距离\n        var score = Math.floor(X / eachWidth) + 1; //分数\n        Score((getScore() == score) ? 0 : score); //取消评分\n      })\n    }\n    //评分\n    function Score(rate) {\n      $(\".score_wrapper\").html(\"★★★★★☆☆☆☆☆\".slice(5 - rate, 10 - rate));\n    }\n    //获取评分\n    function getScore() {\n      var str = $(\".score_wrapper\").html(), num = 0;\n      for (var i = 0; i < str.length; i++) {\n        if (str[i] == \"★\") {\n          num++\n        }\n      }\n      return num;\n    }\n"}]