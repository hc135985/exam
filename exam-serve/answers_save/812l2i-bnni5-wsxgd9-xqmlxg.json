[{"title":"commonjs规范","questions_id":"ayf32j-5kv76-qvfqh-cigaoo","json_path":"ayf32j-5kv76-qvfqh-cigaoo.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"请简述node环境下的commonjs规范（说出如何导出模块，如何引入模块，如何创建模块）？","student_answer":"引入 require，导出exports，创建require"},{"title":"let和var的区别","questions_id":"h7f6hq-cezl0g-fyu3o-6onwjf","json_path":"h7f6hq-cezl0g-fyu3o-6onwjf.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"在声明变量的时候，使用`let`和`var`有什么区别呢？","student_answer":"var可以提升变量，let不能提升变量，\nvar 重复声明，第二次声明会覆盖第一次声明的值，let重复声明会报错\n作用域let声明的变量只在当前的作用域里面有用，和另一个作用域里面的let声明的变量是两个不同的变量，互相不会有影响，而var的声明的是全局的变量\nlet声明的变量不会产生暂时性死区，let是可以声明一个单独的作用域"},{"title":"解构赋值和数组的map方法","questions_id":"izvfy-572mw-thxrmm-7aba5s","json_path":"izvfy-572mw-thxrmm-7aba5s.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"如下：是一段html结构\n```   \n    <ul>\n        <li key=\"1\"></li>\n        <li key=\"2\"></li>\n        <li key=\"3\"></li>\n        <li key=\"4\"></li>\n    </ul>\n```\n加载一段对应的javaScript代码\n\n```\n        let oUl = document.getElementsByTagName('ul')[0];\n        let li = document.getElementsByTagName('li');\n        const {map,forEach} = [];\n        li = map.call(li,item=>{\n            let key = 2 * item.getAttribute('key') - 1;\n            item.setAttribute('key',key);\n            return item;\n        });\n        oUl.innerHTML = '';\n        forEach.call(li,item=>{\n            oUl.appendChild(item);\n        })\n```\n\n请结合html和javaScript描述出这段代码的运行效果，并给每句代码添加注释，在注释中指明该句代码的含义","student_answer":"        let oUl = document.getElementsByTagName('ul')[0];\n        let li = document.getElementsByTagName('li');\n        const {map,forEach} = [];//从数组中解构出 map和forEach方法\n        li = map.call(li,item=>{\n          \t //获取每一个li的class名key里面的值，进行相乘再减1所得的值\n            let key = 2 * item.getAttribute('key') - 1; \n            item.setAttribute('key',key);//1 3 5 7\n            return item;//返回每一个item所得的key值\n        });\n        oUl.innerHTML = '';//重新给oUl的页面赋为空\n        forEach.call(li,item=>{//循环上面的li列表\n            oUl.appendChild(item);//将每一个的li追加到上面新的oUl中\n        })"},{"title":"async配合transition实现自定义动画","questions_id":"bqq54a-jly2z9-m9fg7pj-oio193","json_path":"bqq54a-jly2z9-m9fg7pj-oio193.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"html结构\n```html\n<div id=\"box\"></div>\n```\ncss样式\n```css\n#box{\n  width:100px; height:100px; background-color:red; border-radius:50%; transition:transform 0.5s;\n}\n```\njavaScript代码\n```js\n        const oBox = document.getElementById('box');\n        oBox.addEventListener('transitionend',()=>{\n            let {x,y} = oBox;\n            moveTo.reslove({x,y});\n        },false);\n        function moveTo(x,y){\n            return new Promise((reslove,reject)=>{\n                moveTo.reslove = reslove;\n                oBox.x = x;\n                oBox.y = y;\n                oBox.style.transform = `translate(${x}px,${y}px)`;\n            })\n        }\n```\n\n补全以上代码，使点击oBox后，使oBox走出一个  W 的轨迹（使用async函数实现），并简单写出整体的代码思路。","student_answer":"html结构\n\n<div id=\"box\"></div>\ncss样式\n\n#box{\n  width:100px; height:100px; background-color:red; border-radius:50%; transition:transform 0.5s;\n}\njavaScript代码\n\n        const oBox = document.getElementById('box');\n        oBox.addEventListener('transitionend',()=>{\n            let {x,y} = oBox;\n            moveTo.reslove({x,y});\n        },false);\n        function moveTo(x,y){\n            return new Promise((reslove,reject)=>{\n                moveTo.reslove = reslove;\n                oBox.x = x;\n                oBox.y = y;\n                oBox.style.transform = `translate(${x}px,${y}px)`;\n            })\n        }\n补全以上代码，使点击oBox后，使oBox走出一个 W 的轨迹（使用async函数实现），并简单写出整体的代码思路。\n\n答题框：\n\nJavaScript\n    const oBox1 = document.getElementById('box');\n    const reslove = null;//定义一个新的值\n    oBox1.addEventListener('transitionend',()=>{\n        if(resloves){//如果执行完上一个动画，开始下一动画\n            resloves()\n        }\n    },false);\n    function moveTo(x,y){\n        return new Promise((reslove,reject)=>{\n            resloves = reslove;//将成功的函数赋值给上面定义的null指针\n            oBox1.x = x;\n            oBox1.y = y;\n            oBox1.style.transform = `translate(${x}px,${y}px)`;//改变transfrom的值\n        })\n    }\n    let oBox = [{x:0,y:0},{x:100,y:200},{x:200,y:0},{x:300,y:200},{x:400,y:0}];\n    oBox1.onclick = async () => {//当点击时调用成功函数\n        for (let val of oBox) {\n            await moveTo(val.x, val.y)//等待上一个执行完成\n        }\n    }\n\n\nkey值\n1\n"},{"title":"输入的reduce方法","questions_id":"zyocwi-drka9-kx8vv-blrmw9p","json_path":"zyocwi-drka9-kx8vv-blrmw9p.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"现在有一个数组如下：\n```js\n    const car = [\n            {\n                groupName:'水果',\n                type:[\n                    {\n                        name:'苹果',\n                        price:10\n                    },\n                    {\n                        name:'橘子',\n                        price:40\n                    },\n                    {\n                        name:'香蕉',\n                        price:90\n                    }\n                ]\n            },\n            {\n                groupName:'蔬菜',\n                type:[\n                    {\n                        name:'芹菜',\n                        price:10\n                    },\n                    {\n                        name:'菠菜',\n                        price:15\n                    },\n                    {\n                        name:'土豆',\n                        price:8\n                    }\n                ]\n            }\n        ]\n```\n\n根据上述数据，编写一个函数，该函数(computedPrice)接收上述的数据作为参数，返回一个对象，请输入用数组的reduce方法实现。对象的格式如下\n\n```js\n       {\n            allPrice:所有商品的总价格,\n            group:[\n                {\n                    typeName:'水果',\n                    price:所有水果的总价格\n                },\n                {\n                    typeName:'蔬菜',\n                    price:所有蔬菜的总价格\n                }\n            ]\n        } \n```  ","student_answer":"class computedPrice{\n        constructor(obj){\n            this.objs = obj;\n            this.export();\n        }\n        export(){\n            let obj1 = {};\n            let group = [],typeName={};\n            this.objs.reduce((p,n)=>{\n                let sum=0,sum1 = 0,sum2 = 0;\n                p.type.map(item=>{\n                    sum1 += item.price\n                })\n                n.type.map(item=>{\n                    sum1 += item.price\n                })\n                sum = sum1+sum2;\n                group.push({typeName:p.groupName,price:sum1})\n                group.push({typeName:n.groupName,price:sum2});\n                obj1['allPrice'] = sum;\n                obj1.group = group;\n            })\n            console.log(obj1);\n            return obj1;\n        }\n    }\n    new computedPrice(car)"}]