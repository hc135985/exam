[{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"function jumpFloor2(n) {\n        var target = 0, number1 = 1, number2 = 2;\n \n        if(n<=0)return 0;\n        if(n == 1) return 1;\n        if(n==2) return 2;\n        for(var i=3;i<=n;++i) {\n            target = number1 + number2;\n            number1 = number2;\n            number2 = target;\n        }\n        return target;\n    }\n \n    console.log(jumpFloor2(100)) // 输出 573147844013817200000\n    console.log(jumpFloor2(1000)) // 输出 7.0330367711422765e+208\n    console.log(jumpFloor2(10000)) // 输出 Infinity\n"},{"title":"大小文件读取","questions_id":"z9ndnc-qhzc6-wb5vju-0pvnzk","json_path":"z9ndnc-qhzc6-wb5vju-0pvnzk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个方法适配大小文件的读取，限定值2M","student_answer":"const fs = require('fs');\nclass readFile {\n    constructor(url) {\n        this.url = url;\n        this.init()\n    }\n    init() {\n        let size = fs.statSync(this.url).size;//b 1kb=1024b\n        console.log(size)\n        if (size > 2000) {\n            // 默认为大文件\n            this.readStream()\n        } else {\n            // 默认为小文件\n            this.readSmallFile()\n        }\n    }\n    readStream() {\n        let rs = fs.createReadStream(this.url);// 可读流\n        let ws = fs.createWriteStream('./big/' + this.url);\n        rs.pipe(ws)\n    }\n    readSmallFile() {\n        fs.readFile(this.url, 'utf-8', (err, con) => {\n            if (err) throw err;\n            fs.writeFileSync('./small/' + this.url, con)\n        })\n    }\n}\nnew readFile('index.html')\nnew readFile('fs.mp4') "},{"title":"实现多维数组转换为一维数组","questions_id":"60gn1-9nj3mi-hv4xz-t6ecp","json_path":"60gn1-9nj3mi-hv4xz-t6ecp.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个函数可以使得n维数组转换为1维数组，输出","student_answer":"//flat()、flatMap()为es6新增加的方法,该方法返回一个新数组，对原数据没有影响。\n//flat()默认只会“拉平”一层，如果想要“拉平”多层的嵌套数组，可以将flat()方法的参数写成一个整数，表示想要拉平的层数，默认为1。\n\n[1, 2, [3, [4, 5]]].flat()\n// [1, 2, 3, [4, 5]]\n\n[1, 2, [3, [4, 5]]].flat(2)\n// [1, 2, 3, 4, 5]\n//如果不管有多少层嵌套，都要转成一维数组，可以用Infinity关键字作为参数。\n[1, [2, [3]]].flat(Infinity)\n// [1, 2, 3]\n\n//flatMap()方法对原数组的每个成员执行一个函数（相当于执行Array.prototype.map()），然后对返回值组成的数组执行flat()方法。该方法返回一个新数组，不改变原数组。\n//flatMap()只能展开一层数组。\n// 相当于 [[2, 4], [3, 6], [4, 8]].flat()\n[2, 3, 4].flatMap((x) => [x, x * 2])\n// [2, 4, 3, 6, 4, 8]\n\n// 相当于 [[[2]], [[4]], [[6]], [[8]]].flat()\n[1, 2, 3, 4].flatMap(x => [[x * 2]])\n// [[2], [4], [6], [8]]\n//依然返回嵌套数组"},{"title":"实现一个评星方法","questions_id":"tak6bp-2bpj3-xh6jpg-elkb8u","json_path":"tak6bp-2bpj3-xh6jpg-elkb8u.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"实现一个评星方法\n说明\n* 可根据传入的评分和总数，返回评星结果（用 ★ 和 ☆ 描述）\n* 评分必选项，四舍五入，总数可选，大于0的整数，默认为5\n* 对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回'errror'\n示例\n```\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"var arr=[];//声明的空数组用来表示评分\n\t\t\tfunction commitScore(score){//传进来评分参数\n\t\t\t\tarr=[];//首次清空数组，以免多次执行的时候会累加数组\n\t\t\t\tvar score=Math.ceil(score);//向上取整评分参数\n\t\t\t\tfor(var i=1;i<=5;i++){//控制数组的长度不能超过5\n\t\t\t\t\tif(i<=score){//这里主要是根据评分设置数组，比如3分数组就会是[1,1,1,0,0]\n\t\t\t\t\t\tarr.push(1)\n\t\t\t\t\t}else{\n\t\t\t\t\t\tarr.push(0)\n\t\t\t\t\t}\t\t\t\t\n\t\t\t\t}\n\t\t\t\tconsole.log(arr);\n\t\t\t}\nfunction stars(){\n\t\t\t\t\tcommitScore(8.5);//这里应该传一个你从服务器接收到的评分参数\n\t\t\t\t\tvar string=\"\";\n\t\t\t\t\tfor(var i=0;i<arr.length;i++){//输出循环五个<img>标签\n\t\t\t\t\t\tif(arr[i]==\"1\"){\n\t\t\t\t\t\t\tstring+='<img src=\"img/starSel.png\">'//如果是1就用点亮的星星\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tstring+='<img src=\"img/star.png\">'//如果数组是0就用空白的星星\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t$(\".container\").html(string)//将堆砌好的五个img标签赋值给文档中写死的容器，让页面渲染\n\t\t\t}"}]