[{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"var number = 0 //所有的次数\n\n//创建函数来接收两个参数，第一个是已有的集合总值，第二个是不断根据总值来变化的数组\nfunction jump(num, arr) {\n    if (num == 0) {//根据第一次调用来创建数组，为的是以后可以不会被覆盖\n        arr = []\n    }\n    var a = 1\n\t\t//相当于给每一个位置都书写固定的值1或者是2\n    while (a < 3) {\n        if (num + a <= 10) {//在此不可以使用数组的reduce来求和判断，因为要先判断，再添加\n            arr = [...arr] //使用es6展开方法，将arr之前的数据也保存着\n            arr.push(a) //将和满足条件的a添加到数组中\n            if (a + num == 10) {//对和进行判断，满足10就打印出来，并且次数+1\n                number++\n                console.log(arr, number)\n            } else {//对和进行判断，不满足10就回调，对之后数组的每个位置上的值来操作\n                jump(a + num, arr)//传入已经改变的和，还有改变过后的数组便于下一次的接收\n            }\n        }\n        a++// a开始为1，a++判断为2的情况\n    }\n}\njump(0) //调用 ，初始值为0"},{"title":"大小文件读取","questions_id":"z9ndnc-qhzc6-wb5vju-0pvnzk","json_path":"z9ndnc-qhzc6-wb5vju-0pvnzk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个方法适配大小文件的读取，限定值2M","student_answer":"function read(a) {\n    fs = require(\"fs\")\n    path = require(\"path\")\n    var newpath = path.join(__dirname, a) //获取当前文件所在的绝对路径\n    var Size = fs.statSync(newpath).size / 1024 / 1024 //获取当前文件的信息，找到它的大小\n    if (Size > 2) { //对大小进行比较，分为两种读取方式\n        var request = fs.createReabStream(newpath) //创建流式读取方法\n        request.on(\"data\", chunk => { //根据data事件，读取一点打印一点\n            console.log(chunk)\n        })\n    } else { //小于2M的\n        var str = fs.readFileSync(newpath).toString() //直接传入路径读取\n        console.log(str)\n    }\n}\nread(\"zuoye.js\") //函数传入参数，想要读取文件的名字"},{"title":"实现多维数组转换为一维数组","questions_id":"60gn1-9nj3mi-hv4xz-t6ecp","json_path":"60gn1-9nj3mi-hv4xz-t6ecp.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个函数可以使得n维数组转换为1维数组，输出","student_answer":"function change(arr) {\n    while (arr.some(val => { //while 循环判断some方法返回的数组每一项所对应的boolean值\n            return Array.isArray(val); //数组每一项所对应的boolean值\n        })) {\n        arr = [].concat(...arr) //凡是是数组的，就可以用...展开放进新数组\n        change(arr) //回调函数将新数组进行变成参数进行操作\n    }\n    return arr //全部操作完成，返回数组\n}\n\n\nvar arr = [1, [2, 3, [4, 5, [6, 7, [8]]]]]\nchange(arr) //调用"},{"title":"实现一个评星方法","questions_id":"tak6bp-2bpj3-xh6jpg-elkb8u","json_path":"tak6bp-2bpj3-xh6jpg-elkb8u.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"实现一个评星方法\n说明\n* 可根据传入的评分和总数，返回评星结果（用 ★ 和 ☆ 描述）\n* 评分必选项，四舍五入，总数可选，大于0的整数，默认为5\n* 对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回'errror'\n示例\n```\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"\nfunction getRate(num, count = 5) {\n    var str = \"\"\n    if (num < 0) {//判断个数是不是小于0\n         return \"error\"\n    }\n    if (num > count) {//判断个数是不是大于总数\n         return \"error\"\n    }\n    if (!Number.isInteger(count)) {//判断总数是不是整数\n\t\t\t return \"error\"\n    }\n    for (var i = 0; i < Math.round(num); i++) {\n        str += \"★\"\n    }\n    for (var i = 0; i < count - Math.round(num); i++) {\n        str += \"☆\"\n    }\n    return str\n}"}]