[{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":"function onWindow = () => {\n\twindow.onresize = function() {\n      if(window.innerWidth >= 600){\n      \t\tconsole.log('hello')\n      \t}\n\t}\n}\nonWindow()"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"function HelloWorld(){return <div>Hello World!</div>}\nclass HelloWorld extends React.Component{render(){return <h1>Hello World!</h1>}}\nlet HelloWorld = React.createClass({render:function(){return <h1>Hello World!<h1>}})\n                                    \n第一种为函数组件，第二种和第三种为类组件，都可以接受props，函数组件更简洁，作为纯展示组件，又称无状态组件，但函数组件相对于类组件来说它没有state状态，没有自己的this，类组件有this，又称有状态组件，指向该组件实例，同时类组件有state状态"},{"title":"封装图片加载Promise","questions_id":"gt8z4u-ufd66j-najaef-y8ytir","json_path":"gt8z4u-ufd66j-najaef-y8ytir.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 封装加载图片的promise  \n```js\nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}\n```\n","student_answer":"let loadImg = (url) => {\n    return new Promise((resolve, reject) => {\n        const image = new Image();\n        image.onload = function() {\n          resolve(image);\n        };\n      \timage.onerror = function() {\n        \treject(new Error('路径不正确 ' + url));\n      \t};\n      image.src = url;\n    });\n}"}]