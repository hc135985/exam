[{"title":"vue基础知识","questions_id":"00o5nwy-qw7jj-ko6qkb-4uwrhv","json_path":"00o5nwy-qw7jj-ko6qkb-4uwrhv.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 谈谈Vue中v-for指令里key的作用？","student_answer":"key的作用主要是为了高效的更新虚拟DOM。\nvue中在使用相同标签名元素的过渡切换时，也会使用到key属性，其目的也是为了让vue可以区分它们，否则vue只会替换其内部属性而不会触发过渡效果"},{"title":"Vue基础知识","questions_id":"05snch-6eq8dn-szfd6q-t34nld","json_path":"05snch-6eq8dn-szfd6q-t34nld.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 控制元素显示隐藏的指令v-if与v-show之间的区别及适用场景？","student_answer":"v-if与v-show都可以动态控制dom元素显示隐藏\nv-if显示隐藏是将dom元素整个添加或删除，而v-show隐藏则是为该元素添加css--display:none，dom元素还在\nv-if适合运营条件不大可能改变；v-show适合频繁切换。"},{"title":"vue自定义指令","questions_id":"6ivrh-g7kp8a-2gixkg-p117t","json_path":"6ivrh-g7kp8a-2gixkg-p117t.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"## 阅读如下代码，写出代码的功能，输入和输出\n```js\nVue.filter('formatDate', function(value){\n  let date = new Date();\n  date.setTime(value);\n  let year = date.getFullYear(),\n      month = (date.getMonth() + 1).toString().padStart(2, '0'),\n      day = date.getDate().toString().padStart(2, '0'),\n      hour = date.getHours().toString().padStart(2, '0'),\n      min = date.getMinutes().toString().padStart(2, '0'),\n      sec = date.getSeconds().toString().padStart(2, '0');\n  return `${year}-${month}-${day} ${hour}:${min}:${sec}`\n});\n```","student_answer":"是一个自定义全局过滤器\n必须放在Vue实例化前面\n过滤器函数第一个一般为表达式，如果带引号就判定为字符串，否则一律视为表达式\n可以设置两个过滤器参数并且这两个过滤器互不冲突\n过滤器功能：\n这是一个时间实时更新并且格式化的过滤器方法\n接收参数value为一个设置的时间戳\n通过设置的时间戳获取相对于设置时间戳的年月日时分秒格式化之后返回一个字符串\npadStart是用来在不足两位数的时间前进行补零\n功能：重定时间日期\n输入875416121毫秒，并显示新的日期时间\n输出xxxx年-xx月-xx日-xx时-xx分-xx秒，月、时、分、秒、不足两位自动补零"},{"title":"使用async函数实现多张图片的依次加载（第一张加载完之后才能加载第二张）","questions_id":"fl7dll-xh6eo-hpri8a-edulg","json_path":"fl7dll-xh6eo-hpri8a-edulg.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 使用async函数实现多张图片的依次加载（第一张加载完之后才能加载第二张）\n\n```js\n// 封装加载图片的promise  \nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}   \nconst imgs = ['url1', 'url2', 'url3'];\n// 依次加载图片\nasync function fSync(imgs){\n   // write your code here\n}\n\nfSync(imgs);\n```","student_answer":"// 封装加载图片的promise  \nlet loadImg = (src) => {\n    return new Promise((resolve, reject) => {\n        // write your code here\n        let image = new lmage();\n        image.onload = () => {\n            resolve(image);\n        }\n        image.onerror = () => {\n            reject(new.Error('Could not load image at' + url))\n        }\n        image.src = url\n    })\n}\nconst imgs = ['url1', 'url2', 'url3'];\n// 依次加载图片\nasync function fSync(imgs) {\n    // write your code here\n    for (item of imgs) {\n        await loadImg(item)\n    }\n}"}]