[{"title":"匿名自执行函数的应用","questions_id":"vh80e-3d3g3o-6hy47e-ib2x4c","json_path":"vh80e-3d3g3o-6hy47e-ib2x4c.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"heinan","user_id":"fdjfr-msxp8a","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"代码如下：\n```js\nfor (var i = 0; i < 5; i++) {\n    setTimeout(function () {\n        console.log(i)\n    })\n}\n输出\n5\n5\n5\n5\n5\n```\n修改上面代码，打印结果要求为：0,1，2，3，4","student_answer":"for (let i = 0; i < 5; i++) {\n    setTimeout(function () {\n        console.log(i)\n    })\n}"},{"title":"react生命周期","questions_id":"xt05yo-prna5g-f7zqo-ltl5rh","json_path":"xt05yo-prna5g-f7zqo-ltl5rh.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"dingshaoshan","user_id":"ypay2t-7uxsd","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"# react常用生命周期图\n\n## 请在 “其他“ 中查看图片。 \n \n\n\n如图是react常用生命周期图，请阅读图，并在1，2，3，4处填写对应的生命周期","student_answer":"1shouldComponentUpdate\n2componentWillReceiveProps\n3componentDidUpdate\n"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"函数式定义的无状态组件\nes5原生方式React.createClass定义的组件\nes6形式的extends React.Component定义的组件\n\n"},{"title":"分别使用DOM0级DOM2级给一个DIV绑定事件","questions_id":"1gsxn-k09c2j-gq8peo-sohe9","json_path":"1gsxn-k09c2j-gq8peo-sohe9.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"分别使用DOM0级DOM2级给一个button绑定事件，并且描述这两种方式的区别","student_answer":"<a href=\"#\" id=\"hash\" onclick=\"fn();fn1();\">\n      <button type=\"button\">返回上面进行开通</button>\n</a>\n<script>\n      var btn = document.getElementById(\"#hash\").get(0);\n      btn.onclick = function() {\n        alert(\"111\");\n      };\n      btn.onclick = function() {\n        alert(\"222\");\n      };\n\n      $(\"#hash\").click(function() {\n        alert(\"jq的dom2级点击第一次\");\n      });\n      $(\"#hash\").click(function() {\n        alert(\"jq的dom2级点击第二次\");\n      });\n\n      btn.addEventListener(\n        \"click\",\n        function() {\n          alert(\"原生dom2级第一次click\");\n        },\n        false\n      );\n      btn.addEventListener(\n        \"click\",\n        function() {\n          alert(\"原生dom2级第二次click\");\n        },\n        false\n      );\n</script>\n\n\n\n\n\n\n\n\n\n\n1 dom2和dom0不一样，用它做事件绑定，是给当前元素的某个事件行为开辟了一个事件池；（浏览器会自动开辟一个容器，把dom2绑定的方法一次存在事件池中），当行为触发，会把我们池子里面绑定的方法依次执行；\n\n2 方法中的this是当前元素\n\n3 dom2中可以给我们的元素绑定多个方法；\n\ndom0是给当前私有的属性赋一个值，只能绑定一个值；\n\ndom2是给当前元素的某个行为事件开辟了一个事件池，绑定很多方法；"},{"title":"最少两种方式实现点击每个li都弹出下标","questions_id":"puaqas-1modca-2y04jh-brcz59g","json_path":"puaqas-1modca-2y04jh-brcz59g.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"<ul id=”test”>\n    <li>这是第一条</li>\n    <li>这是第二条</li>\n    <li>这是第三条</li>\n</ul>","student_answer":"<ul id=\"test\">\n      <li>第一个</li>\n\n      <li>第二个</li>\n\n      <li>第三个</li>\n </ul>\n window.onload = function() {\n        var lis = document.getElementById(\"test\").children;\n\n        for (var i = 0; i < lis.length; i++) {\n          lis[i].onclick = (function(i) {\n            return function() {\n              alert(i);\n            };\n          })(i);\n        }\n };\n\n\n\nvar lis = document.getElementById(\"test\").children;\n      for (var i = 0; i < lis.length; i++) {\n        lis[i].addEventListener(\n          \"click\",\n          function() {\n            console.log(i);\n          },\n          false\n       );\n }"}]