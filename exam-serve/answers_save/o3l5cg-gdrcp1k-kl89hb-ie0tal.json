[{"title":"Vue基础知识","questions_id":"05snch-6eq8dn-szfd6q-t34nld","json_path":"05snch-6eq8dn-szfd6q-t34nld.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 控制元素显示隐藏的指令v-if与v-show之间的区别及适用场景？","student_answer":"vue中显隐方法常用两种，v-show和v-if，但这两种是有区别的。\n实现本质方法区别\n\nvue-show本质就是标签display设置为none，控制隐藏\nvue-if是动态的向DOM树内添加或者删除DOM元素\n\n\n编译的区别\n\nv-show其实就是在控制css\nv-if切换有一个局部编译/卸载的过程，切换过程中合适地销毁和重建内部的事件监听和子组件\n\n\n编译的条件\n\nv-show都会编译，初始值为false，只是将display设为none，但它也编译了\nv-if初始值为false，就不会编译了\n\n\n性能\n\nv-show只编译一次，后面其实就是控制css，而v-if不停的销毁和创建，故v-show性能更好一点。\n\n\n用法\n\nv-if更灵活，举个例子\n\n\n\n//这个里面只会显示数组角标大于等于2的内容\n  <li v-for=\"(item, index) in scene\" v-if=\"index <= 2\" @click=\"openScene(item, item.pid)\">\n      <span>{{ item.name }}</span>\n  </li>\n\n //这个上面为true的内容，下面为false的内容（当然这个也可以用v-show实现的）\n <li v-for=\"(item, index) in scene\" v-if=\"item.share\" @click=\"openScene(item, item.pid)\">\n     <span>{{ item.share }}</span>\n </li>\n <li v-else>\n      <span>{{ item.share }}</span>\n </li>\n\n如果你的页面不想让其他程序员看到就用v-if，它不会在页面中显示。\n"},{"title":"使用async函数实现多张图片的依次加载（哪张加载完哪张添加到页面）","questions_id":"5oxqyl-8dnbaa-3dt3o9-qrecrk","json_path":"5oxqyl-8dnbaa-3dt3o9-qrecrk.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 使用async函数实现多张图片的依次加载（哪张加载完哪张添加到页面）\n\n```js\n// 封装加载图片的promise  \nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}   \nconst imgs = ['url1', 'url2', 'url3'];\n// 依次加载图片\nasync function fAsync(imgs){\n   // write your code here\n}\n\nfAsync(imgs);\n```","student_answer":"## 案例--使用async函数实现多张图片的依次加载（第一张加载完之后才能加载第二张）\n\n<script>\nlet loadImg = (src) => {\n        return new Promise((resolve, reject) => {\n            let img = document.createElement('img')\n            img.src = src\n            document.body.append(img)\n            setTimeout(() => {\n                resolve(true)\n            }, 1000)\n        })\n    }\n    const imgs = ['../src/img/1.PNG', '../src/img/1.PNG', '../src/img/1.PNG'];\n    // 依次加载图片\n    async function fSync(imgs) {\n        for (let i of imgs) {\n            await loadImg(i)\n        }\n    }\n    fSync(imgs);\n\n</script>"},{"title":"vue自定义指令","questions_id":"6ivrh-g7kp8a-2gixkg-p117t","json_path":"6ivrh-g7kp8a-2gixkg-p117t.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"## 阅读如下代码，写出代码的功能，输入和输出\n```js\nVue.filter('formatDate', function(value){\n  let date = new Date();\n  date.setTime(value);\n  let year = date.getFullYear(),\n      month = (date.getMonth() + 1).toString().padStart(2, '0'),\n      day = date.getDate().toString().padStart(2, '0'),\n      hour = date.getHours().toString().padStart(2, '0'),\n      min = date.getMinutes().toString().padStart(2, '0'),\n      sec = date.getSeconds().toString().padStart(2, '0');\n  return `${year}-${month}-${day} ${hour}:${min}:${sec}`\n});\n```","student_answer":"Vue.filter('formatDate', function(value){\n  let date = new Date();\n  date.setTime(value);\n  let year = date.getFullYear(),\n      month = (date.getMonth() + 1).toString().padStart(2, '0'),\n      day = date.getDate().toString().padStart(2, '0'),\n      hour = date.getHours().toString().padStart(2, '0'),\n      min = date.getMinutes().toString().padStart(2, '0'),\n      sec = date.getSeconds().toString().padStart(2, '0');\n  return `${year}-${month}-${day} ${hour}:${min}:${sec}`\n});"},{"title":"vue自定义指令","questions_id":"9wck8-qt73nd-0v6s8-f6jyid","json_path":"9wck8-qt73nd-0v6s8-f6jyid.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"## 阅读如下代码，写出代码的功能，输入和输出\n```js\nVue.filter('toThousandFilter', function(num){\n  return (+num || 0).toString().replace(/^-?\\d+/g, m => m.replace(/(?=(?!\\b)(\\d{3})+$)/g, ','))\n});\n```","student_answer":"Vue 中过滤器的使用和定义\n\b 过滤器的定义\n1、全局过滤器的定义\nmian.js 中进行定义\n\nVue.filter(\"moneyFilter\", function(value, num, type) {\n  //value是使用过滤器是的表达式或者值,num和tyep中的参数\n  return \"￥\" + value.toFixed(num) + type;\n});\n"}]