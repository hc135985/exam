[{"title":"vue基础知识","questions_id":"00o5nwy-qw7jj-ko6qkb-4uwrhv","json_path":"00o5nwy-qw7jj-ko6qkb-4uwrhv.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 谈谈Vue中v-for指令里key的作用？","student_answer":"在组件上v-for和key是一起用的，key的作用主要是为了高效的更新虚拟DOM。另外vue中在使用相同标签名元素的过渡切换时，也会使用到key属性，其目的也是为了让vue可以区分它们。\nvue和react的虚拟DOM的Diff算法大致相同 其核心是基于两个简单的假设：\n1. 两个相同的组件产生类似的DOM结构，不同的组件产生不同的DOM结构。\n2. 同一层级的一组节点，他们可以通过唯一的id进行区分。\n当页面的数据发生变化时 Diff算法只会比较同一层级的节点：\n1、如果节点类型不同，直接干掉前面的节点，再创建并插入新的节点，不会再比较这个节点以后的子节点了。\n2、如果节点类型相同，则会重新设置该节点的属性，从而实现节点的更新。\n需要使用key来给每个节点做一个唯一标识 Diff算法就可以正确的识别此节点 找到正确的位置区插入新的节点"},{"title":"Vue基础知识","questions_id":"05snch-6eq8dn-szfd6q-t34nld","json_path":"05snch-6eq8dn-szfd6q-t34nld.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 控制元素显示隐藏的指令v-if与v-show之间的区别及适用场景？","student_answer":"相同点：v-if与v-show都可以动态控制dom元素显示隐藏\n不同点：v-if显示隐藏是将dom元素整个添加或删除，而v-show隐藏则是为该元素添加css--display:none，dom元素还在。"},{"title":"vue自定义指令","questions_id":"6ivrh-g7kp8a-2gixkg-p117t","json_path":"6ivrh-g7kp8a-2gixkg-p117t.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"## 阅读如下代码，写出代码的功能，输入和输出\n```js\nVue.filter('formatDate', function(value){\n  let date = new Date();\n  date.setTime(value);\n  let year = date.getFullYear(),\n      month = (date.getMonth() + 1).toString().padStart(2, '0'),\n      day = date.getDate().toString().padStart(2, '0'),\n      hour = date.getHours().toString().padStart(2, '0'),\n      min = date.getMinutes().toString().padStart(2, '0'),\n      sec = date.getSeconds().toString().padStart(2, '0');\n  return `${year}-${month}-${day} ${hour}:${min}:${sec}`\n});\n```","student_answer":"注册在全局的fliter\n全局方法 Vue.filter() 注册一个自定义过滤器,必须放在Vue实例化前面\n过滤器函数始终以表达式的值作为第一个参数。带引号的参数视为字符串，而不带引号的参数按表达式计算\n可以设置两个过滤器参数,前提是这两个过滤器处理的不冲突\n用户从input输入的数据在回传到model之前也可以先处理\n\n功能：时间格式化  Vue filter格式化时间戳时间成标准日期格式\n1、获取当前时间 \n2、setTime() 方法以毫秒设置 Date 对象。\n3、获取当前时间的年月日时分秒并用padStart()方法补零。\n输入：时间戳时间\n输出：标准日期格式"},{"title":"使用async函数实现多张图片的依次加载（第一张加载完之后才能加载第二张）","questions_id":"fl7dll-xh6eo-hpri8a-edulg","json_path":"fl7dll-xh6eo-hpri8a-edulg.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 使用async函数实现多张图片的依次加载（第一张加载完之后才能加载第二张）\n\n```js\n// 封装加载图片的promise  \nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}   \nconst imgs = ['url1', 'url2', 'url3'];\n// 依次加载图片\nasync function fSync(imgs){\n   // write your code here\n}\n\nfSync(imgs);\n```","student_answer":"// 封装加载图片的promise  \nlet loadImg = (src) => {\n  return new Promise((resolve, reject) => {\n    // write your code here\n    const image = new Image();\n    image.onload = () => {\n      document.body.appendChild(image)\n      resolve(image)\n    }\n    image.onerror = () => {\n      reject(new Error('error'))\n    }\n    image.src = src;\n    console.log(image)\n  })\n}\nconst imgs = ['http://www.pptok.com/wp-content/uploads/2012/08/xunguang-4.jpg', 'http://pic3.nipic.com/20090527/1242397_102231006_2.jpg', 'http://pic29.nipic.com/20130601/12122227_123051482000_2.jpg'];\n// 依次加载图片\nasync function fSync(imgs) {\n  // write your code here\n  for (item of imgs) {\n    console.log(item)\n    await document.body.append(loadImg(item))\n  }\n}\nconsole.log(fSync(imgs));"}]