[{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":"window.onresize = function() { \n  //浏览器窗口变化后需要做的事情 \n  if (window.innerWidth>=600){\n    return console.log('hello')\n  }else if(window.innerWidth<600){\n    console.log('小了')\n  }else{\n    console.log('大了')\n  }\n} \n"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"react中组件创建方式\n   1.函数定义(无状态)\n    写法：\n    function Welcome(props) {\n      return <h1>Hello, {props.name}</h1>;\n     }\n   2.类组件定义(有状态)\n       写法：\n    class Welcome extends React.Component {\n      render() {\n        return <h1>Hello, {this.props.name}</h1>;\n       }\n     }\nvue组件创建方式\n   1.全局注册\n    Vue.component(元素名,{配置项\n       template:``模板结构\n    }})\n   2.局部注册\n    components:{\n      元素名:{    //配置项\n        template:``模板结构,  //只能有一个父元素，可以有多个元素，但是必须只且只有一个大盒子\n        data(){   //必须是函数\n            return{ }\n         }\n     }}"},{"title":"封装图片加载Promise","questions_id":"gt8z4u-ufd66j-najaef-y8ytir","json_path":"gt8z4u-ufd66j-najaef-y8ytir.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 封装加载图片的promise  \n```js\nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}\n```\n","student_answer":"let loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n       const image = new Image();\n         image.onload = function() {\n         resolve(image);\n        };\n       image.onerror = function() {\n         reject(new Error('Could not load image at ' + url));\n       };\n       image.src = url;\n    })\n}"}]