[{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":" let number = 0;//声明一个变量\n    function tiao(num, res) {//两个参数 一个用来存放 一个用来记1、2\n      if (num === 0) {//当在起始位置时，即未跳动时\n        res = []// 此时存放的数组为一个空的数组\n      }\n      var i = 1;//当为1个台阶时\n      while (i < 3) {//while循环 因为不知道循环多少次  所以用while循环  只有 1  2 两种情况\n        if (num + i <= 10) { //进入循环 第一次时num还是为0   i为1  //执行if判断里面的  只要符合条件 一直循环\n          let _res = [...res]\n          _res.push(i);\n          if (num + i === 10) {//如果num+i正好===10；\n            number++;//就让 number++\n            console.log(number, 'res', _res)\n          } else {\n            tiao(num + i, _res);\n          }\n        }\n        i++//i++只有在num+i>10的情况下才会执行\n      }\n    }\n    tiao(0)\n\n"},{"title":"大小文件读取","questions_id":"z9ndnc-qhzc6-wb5vju-0pvnzk","json_path":"z9ndnc-qhzc6-wb5vju-0pvnzk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个方法适配大小文件的读取，限定值2M","student_answer":"let fs = require(\"fs\");//引入node.js内置模块fs\nlet path = require(\"path\")//引入node.js内置模块path\nlet Big = path.join(__dirname, \"./2019-4-20摸底.mp4\");//声明变量 获取当前验证的文件的绝对路径 此处随便写的一个路径\nfunction fun(Big) { //传参\n    let size = fs.statSync(Big); //先判断Big的文件信息\n    if (size) { //如果是\n        let k = size.size / 1024 / 1024; //声明一个变量  此时为B字节 除以1024为KB  再次除以1024为MB\n        console.log(k, 'k')\n        if (k > 2) { //如果大于2MB\n            console.log(\"文件已经超过2MB\") //打印出来文件超过2MB\n            fs.createReadStream(Big);//文件过大 流式读取\n        } else { //否则\n            console.log(\"文件未超过2M\") //打印文件未超过2M\n            fs.readFileSync(Big);  //文件较小,正常读取\n        }\n    }\n}\nfun(Big) //调用"},{"title":"实现多维数组转换为一维数组","questions_id":"60gn1-9nj3mi-hv4xz-t6ecp","json_path":"60gn1-9nj3mi-hv4xz-t6ecp.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个函数可以使得n维数组转换为1维数组，输出","student_answer":"let arr=[1,2,3,\n        [4,5,6,7,8,\n        [9,\n        [10]]]];//写一个多维数组\n    function fun(arr){//把多维数组arr传进来\n        let arr1=(arr+\"\").split(\",\")// 将数组转字符串后再以逗号分隔转为数组\n        console.log(arr1)//此时arr1为数组形式的 字符串格式[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\"]\n        let arr2=arr1.map((x)=>{//arr1用高阶函数map遍历 传一个参数\n          return Number(x)// 将 字符串变成Number类型 去掉字符串\n        });\n        return arr2; //arr2return回来\n      console.log(arr2)//此时arr2为[1,2,3,4,5,6,7,8,9,10]\n    }\n    fun(arr)///调用\n    console.log(fun(arr))//打印[1,2,3,4,5,6,7,8,9,10]"},{"title":"实现一个评星方法","questions_id":"tak6bp-2bpj3-xh6jpg-elkb8u","json_path":"tak6bp-2bpj3-xh6jpg-elkb8u.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"实现一个评星方法\n说明\n* 可根据传入的评分和总数，返回评星结果（用 ★ 和 ☆ 描述）\n* 评分必选项，四舍五入，总数可选，大于0的整数，默认为5\n* 对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回'errror'\n示例\n```\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":" /*<style>\n        * {\n            padding: 0;\n            margin: 0;\n            list-style: none;\n        }\n        \n        #box1>li {\n            float: left;\n        }\n        \n        #box1>li>span {\n            width: 50px;\n            height: 50px;\n            border-radius: 50%;\n            background: #ccc;\n            line-height: 50px;\n            text-align: center;\n            display: inline-block;\n        }\n    </style>*/\n\n// <div id=\"box1\">\n        //<li><span class=\"span\">1</span></li>\n        //<li><span class=\"span\">2</span></li>\n        //<li><span class=\"span\">3</span></li>\n        //<li><span class=\"span\">4</span></li>\n        //<li><span class=\"span\">5</span></li>\n    //</div> \n\nlet spans = document.querySelectorAll(\"#box1 li span\");\n var span = document.querySelectorAll(\".span\");\n//只有通过传入参数判断圆圈颜色变化 如果为0 则不变 如果为负数 打印error 如果为1-5 对应变化  未判断四舍五入 此处HTML 和css样式注释\n        function fun(getRate) {\n           if (getRate < 0) {\n                console.log('error')\n            }\n            if (getRate == 1) {\n                for (var i = 0; i < span.length; i++) {\n                    span[getRate - 1].style.background = \"yellow\"\n                }\n            }\n            if (getRate == 2) {\n                for (var i = 0; i < span.length; i++) {\n                    span[getRate - 1].style.background = \"yellow\"\n                    span[getRate - 2].style.background = \"yellow\"\n                }\n            }\n            if (getRate == 3) {\n                for (var i = 0; i < span.length; i++) {\n                    span[i].style.background = \"yellow\"\n                    span[getRate].style.background = \"#ccc\"\n                    span[getRate + 1].style.background = \"#ccc\"\n                }\n            }\n            if (getRate == 4) {\n                for (var i = 0; i < span.length; i++) {\n                    span[i].style.background = \"yellow\"\n                    span[getRate].style.background = \"#ccc\"\n                }\n\n            }\n            if (getRate == 5) {\n                for (var i = 0; i < span.length; i++) {\n                    span[i].style.background = \"yellow\"\n                }\n\n            }\n           \n        }\n        fun(1)"}]