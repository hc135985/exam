[{"title":"实现发布订阅模式","questions_id":"aihpv-1ru212-wun87-0hli3","json_path":"aihpv-1ru212-wun87-0hli3.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"现在有一个类 \n\n```\nclass Watch{\n  on(){\n   // 实现该方法逻辑\n  }\n  emit(){\n   // 实现该方法逻辑 \n  }\n}\n\n//调用示例如下：\nconst w1 = new Watch();\nw1.on('www',(options) => {\n  console.log(options)\n});\nw1.emit('www','success');\n\n// 最后的打印结果是  success\n\n```\n\n请实现要求的逻,可以对该类进行任意修改","student_answer":"class Watch{\n                    constructor(){\n                        this.events={}\n                    }\n                    on(event,ck){\n                        if(typeof this.events[event]==='object'){\n                            this.events[event].push[ck]\n                        }else{\n                            this.events[event]=[ck]\n                        }\n                    }\n                    emit(event,...arg){\n                        this.events[event].forEach(item => {\n                            item(...arg)\n                        })\n                    }\n                }\n                const w1 =new Watch();\n                w1.on('www', (options) => {\n                    console.log(options)\n                });\n                w1.emit('www', 'success');"},{"title":"async配合transition实现自定义动画","questions_id":"bqq54a-jly2z9-m9fg7pj-oio193","json_path":"bqq54a-jly2z9-m9fg7pj-oio193.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"html结构\n```html\n<div id=\"box\"></div>\n```\ncss样式\n```css\n#box{\n  width:100px; height:100px; background-color:red; border-radius:50%; transition:transform 0.5s;\n}\n```\njavaScript代码\n```js\n        const oBox = document.getElementById('box');\n        oBox.addEventListener('transitionend',()=>{\n            let {x,y} = oBox;\n            moveTo.reslove({x,y});\n        },false);\n        function moveTo(x,y){\n            return new Promise((reslove,reject)=>{\n                moveTo.reslove = reslove;\n                oBox.x = x;\n                oBox.y = y;\n                oBox.style.transform = `translate(${x}px,${y}px)`;\n            })\n        }\n```\n\n补全以上代码，使点击oBox后，使oBox走出一个  W 的轨迹（使用async函数实现），并简单写出整体的代码思路。","student_answer":"  let w = [{\n                            x: 0,\n                            y: 0\n                        }, {\n                            x: '100px',\n                            y: '100px'\n                        }, {\n                            x: '200px',\n                            y: 0\n                        }, {\n                            x: '300px',\n                            y: '100px'\n                        }, {\n                            x: '400px',\n                            y: 0\n                        }];\n                      const oBox = document.getElementById('box');\n                        var globalReslove = null;\n                        oBox.addEventListener('transitionend', () => { \n                                if (globalReslove) {\n                                    globalReslove()\n                                }\n                            });\n                      oBox.addEventListener('click', async () => {\n                            for (let i = 0; i < w.length; i++) {\n                                await moveTo(w[i].x, w[i].y);\n                            }\n                        })\n                         function moveTo(x, y) { \n                                return new Promise((reslove, reject) => {\n                                    oBox.style.transform = `translate(${x},${y})`;\n                                    globalReslove = reslove;\n                                })\n                            }\n"},{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"  function ok(num, wa) {\n                                if (num === 0) {\n                                    wa = []\n                                }\n                                var i = 1;\n                                while (i < 3) {\n                                    if (num + i <= 10) {\n                                        var qing = [...wa];\n                                        qing.push(i);\n                                        if (num + i === 10) {\n                                            console.log('wa', qing);\n                                        } else {\n                                            ok(num + i, qing);\n                                        }\n                                    }\n                                    i++\n                                }\n                            }\n                            ok(0) "},{"title":"输入的reduce方法","questions_id":"zyocwi-drka9-kx8vv-blrmw9p","json_path":"zyocwi-drka9-kx8vv-blrmw9p.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"现在有一个数组如下：\n```js\n    const car = [\n            {\n                groupName:'水果',\n                type:[\n                    {\n                        name:'苹果',\n                        price:10\n                    },\n                    {\n                        name:'橘子',\n                        price:40\n                    },\n                    {\n                        name:'香蕉',\n                        price:90\n                    }\n                ]\n            },\n            {\n                groupName:'蔬菜',\n                type:[\n                    {\n                        name:'芹菜',\n                        price:10\n                    },\n                    {\n                        name:'菠菜',\n                        price:15\n                    },\n                    {\n                        name:'土豆',\n                        price:8\n                    }\n                ]\n            }\n        ]\n```\n\n根据上述数据，编写一个函数，该函数(computedPrice)接收上述的数据作为参数，返回一个对象，请输入用数组的reduce方法实现。对象的格式如下\n\n```js\n       {\n            allPrice:所有商品的总价格,\n            group:[\n                {\n                    typeName:'水果',\n                    price:所有水果的总价格\n                },\n                {\n                    typeName:'蔬菜',\n                    price:所有蔬菜的总价格\n                }\n            ]\n        } \n```  ","student_answer":"function computedPrice(car){\n    let res = {\n        group:car.map(item=>({\n            typeName:item.groupName,\n            price:computedPrice.sum(item.type)\n        }))\n    }\n    res.allPrice = computedPrice.sum(res.group);\n    return res;\n}\n\ncomputedPrice.sum = (arr)=>{\n    return arr.reduce((prev,next)=>prev+next.price,0)\n}\n\nconsole.log(computedPrice(car));\n"}]