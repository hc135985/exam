[{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":" let open = true;    //定义一个开关，控制打印行为\n  window.onresize = function () {     //窗口变化事件为window.onresize\n    var width = document.documentElement.clientWidth || document.body.clientWidth; //实时获取窗口宽度\n    if (width >= 600) {   //第一层判断，当宽度大于等于600的时候，要打印，但只有这一层判断的话，会一直打印。所以还要加第二层判断，用来控制打印的次数\n      if(open){   //第二层判断，如果open开关为真，就打印，打印一次就随时把开关关闭。这样就做到了只打印一次的效果\n        console.log(\"hello\");\n        open =false;    //只打印一次的关键：一次之后就随时关闭\n      }\n    }else{   //宽度小于等于600的时候,就把open变回来\n      open=true\n    }\n  }"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"react组件有3中创建方式：es5的creatclass,es6的extendscomponent方式，无状态的函数式。\n函数创建：无状态，只能接收props参数，没有生命周期函数，没有this\n\t1、组件不会被实例化，整体渲染性能得到提升；\n   2、组件不能访问this对象；\n   3、组件无法访问生命周期的方法；\n   4、无状态组件，只能访问输入的props，同样的props会得到同样的渲染结果，不会有副作用\nfunction Componet(){\n\treturn <div></div>\n}\n<Componet />\nex6:有state状态，有生命周期函数\n\t与es5创建方式的区别：\n\t1、函数this自绑定\n\t2、组件属性类型propTypes及其默认props属性defaultProps配置不同\n   3、组件初始状态state的配置不同\nclass Componet extends Component{\n  \trender(){\n    \treturn <div></div>\n    }\n}\n<Componet />\nes5:react16版本以上不能使用了。\n"},{"title":"封装图片加载Promise","questions_id":"gt8z4u-ufd66j-najaef-y8ytir","json_path":"gt8z4u-ufd66j-najaef-y8ytir.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 封装加载图片的promise  \n```js\nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}\n```\n","student_answer":"let loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n       let img = new Image();    //创建一个图片对象\n      \timg.onload = function(){   //加载成功时，调用resolve函数\n         \tresolve(img)\n       };\n      \timg.onerror = function(){  //加载失败时，调用reject函数\n      \t\treject(new Error(\"can`t load img\"))\n      \t};\n      img.src = src;   //给图片对象添加src属性和值。\n    })\n}"}]