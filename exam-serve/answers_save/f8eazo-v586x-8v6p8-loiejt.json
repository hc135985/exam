[{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"//[1,1,1,1,1,1,1,1,1,1]\n//[2,2,2,2,2]\n//[1,1,1,1,1,1,1,1,2]）\nlet number=0;   //声明初始值变量\nfunction wa(num,res){\n   if(num===0){   //条件判断\n      res=[];   //空数组\n   }\n  var i=1;     //声明一个变量i=1；\n  while(i<3){    //所有可能跳跃的方法\n     if(num+i<=10){   //条件判断\n        let _re=[...res]\n        _res.push(i);   //将_res push到数组里\n       if(num+i===10){\n           number++;\n         console.log(number,'res',_res);   //控制台打印\n       }else{\n          wa(num+i,_res);  \n       }\n     }\n    i++\n  }\n}\nwa(0);"},{"title":"大小文件读取","questions_id":"z9ndnc-qhzc6-wb5vju-0pvnzk","json_path":"z9ndnc-qhzc6-wb5vju-0pvnzk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个方法适配大小文件的读取，限定值2M","student_answer":"function copy(originPath,targetPath,size=2000){ //判断文件大于2M还是小于2M\n    fs.stat(originPath,(err,data)=>{   //查看文件信息\n        if(!err){\n            if(data.size>size){    //如果文件小于2M\n                copySmall(originPath,targetPath)  //执行copySmall\n            }else{                       //如果文件大于2M\n                copyBig(originPath,targetPath)   // 执行copyBig\n            }\n        }\n    })\n}\nconst fs = require(\"fs\");\n\nlet readfile = fs.createReadStream(\"文件路径\");\nreadfile.on(\"data\",function(){\n    if(this.length<2097152){\n        this.pipe(fs.createWriteStream(\"新路径\"))\n    }\n})"},{"title":"实现多维数组转换为一维数组","questions_id":"60gn1-9nj3mi-hv4xz-t6ecp","json_path":"60gn1-9nj3mi-hv4xz-t6ecp.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个函数可以使得n维数组转换为1维数组，输出","student_answer":"function flatArr(arr){      //封装一个函数可以使得n维数组转换为1维数组\n    return arr.flat(Infinity)\n}\nflatArr(arr);   //调用\nconsole.log(arr);     //输出"},{"title":"实现一个评星方法","questions_id":"tak6bp-2bpj3-xh6jpg-elkb8u","json_path":"tak6bp-2bpj3-xh6jpg-elkb8u.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"实现一个评星方法\n说明\n* 可根据传入的评分和总数，返回评星结果（用 ★ 和 ☆ 描述）\n* 评分必选项，四舍五入，总数可选，大于0的整数，默认为5\n* 对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回'errror'\n示例\n```\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"getRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'"}]