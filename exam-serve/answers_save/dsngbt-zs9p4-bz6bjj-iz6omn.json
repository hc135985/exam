[{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":"   let num=0\n     window.onresize=function(){\n        var w=document.documentElement.clientWidth\n        if(w>=600){\n           num+=1;\n           if(num>1){\n             return\n           }else{\n             console.log('hello')\n           }\n        }\n     }"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"//React组件创建\n//1.函数式 最为推荐的react组件创建方式 无状态组件(无生命周期，无state)\n//const Com=()=>(<div>组件</div>)\n//2.es6 Class创建类 (有生命周期，有自己的状态)\n//3.React.createClass —— es5的方式创建，已经废弃\n//vue组件创建\n//1.全局组件--->所有的vue实例都可以使用 先注册，再实例\n//Vue.component(组件名|标签名,{\n    //template:``,\n    //data(){  //data属性必须是个函数,抛回一个对象\n        //return{\n            \n        //}\n    //}\n//})\n//2.局部注册--->只有注册了该组件的内部可以使用new Vue({\n   //el:'.app',\n   //data:{},\n   //components:{  //注册局部组件\n       //'my-div':{},\n      // myDl:{}  //驼峰形式\n   //}\n//})\n//3.render函数创建(类似虚拟dom)"},{"title":"封装图片加载Promise","questions_id":"gt8z4u-ufd66j-najaef-y8ytir","json_path":"gt8z4u-ufd66j-najaef-y8ytir.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 封装加载图片的promise  \n```js\nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}\n```\n","student_answer":"   let loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n          const image = new Image()\n          image.onload = function() {\n            resolve(image);\n          }\n          image.onerror = function() {\n            reject(new Error('找不到图片地址' + src));\n          }\n          image.src = src;\n          document.body.appendChild(image)    \n    })\n}"}]