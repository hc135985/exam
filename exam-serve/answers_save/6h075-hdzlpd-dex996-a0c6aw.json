[{"title":"性能优化","questions_id":"00a1t8-ezqkxg-xv9pkk-6hqfyb","json_path":"00a1t8-ezqkxg-xv9pkk-6hqfyb.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"请用js实现一个监听浏览器窗口变化的函数，当浏览器窗口的宽度大于等于 600px 的时候console.log('hello')（持续大于等于600px的话打印一次即可），请用你觉得最优的实现","student_answer":"window.onresize = function(){\n  if(document.documentElement.clientWidth>=600){\n    console.log(\"hello\")\n     }\n}"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"template模板：\n\t一份template.wxml文件中能写多个模板，用name区分，模板拥有自己的样式文件（用户自定义），只需要在使用页面的wxss文件中引入\nComponent组件：\n\tcomponent组件的结构和page的结构类似，都是有js、wxml、wxss、json四类文件组成。wxss代码与page是一样的，page中的使用，与template模板不同，component不需要在wxml中引入，但需要在json中指明使用的组件名及路径\n    \n 无状态函数式组件：组件不会被实例化，整体渲染性能得到提升，\n \t\t\t\t\t组件不能访问this对象\n              组件无法访问生命周期的方法\n              无状态组件只能访问输入的props，同样的props会得到同样的渲染结果，不会有副作用\n\nextends React.Component定义的组件：React.Component创建的组件，其状态state是在constructor中像初始化组件属性一样声明的。\n\t\t\t\t\t\t\t\t\t他们是作为组件类的属性，不是组件实例的属性，也就是所谓的类的静态属性来配置的\n \nReact.createClass定义的组件：eact.createClass会自绑定函数方法（不像React.Component只绑定需要关心的函数）导致不必要的性能开销，增加代码过时的可能性。\n\t\t\t\t\t\t\t\tReact.createClass的mixins不够自然、直观；React.Component形式非常适合高阶组件（Higher Order Components--HOC）,它以更直观的形式展示了比mixins更强大的功能，并且HOC是纯净的JavaScript，不用担心他们会被废弃"},{"title":"封装图片加载Promise","questions_id":"gt8z4u-ufd66j-najaef-y8ytir","json_path":"gt8z4u-ufd66j-najaef-y8ytir.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 封装加载图片的promise  \n```js\nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}\n```\n","student_answer":" let loadImg = (src)=>{\n            console.log(src)\n            return new Promise((resolve, reject)=>{\n                // write your code here\n                let img=new Image()\n                img.onload=()=>{\n                    resolve(img)\n                }\n                img.onerror=()=>{\n                    reject(new Error())\n                }\n                img.src=src.url\n            })\n        }\n        let src= [{\n                url:'./2.jpg'\n            },{\n                url:'./3.jpg'\n            }]\n        let imgs=src.map(item=>{\n            return loadImg(item)\n        })\n\n        Promise.all(imgs).then(res=>{\n            console.log(res)\n            res.forEach(item=>{\n                document.body.appendChild(item)\n            })\n        })"},{"title":"防抖场景实现","questions_id":"pee5rm-didl4v-b5ty-eay7yo","json_path":"pee5rm-didl4v-b5ty-eay7yo.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"题目 有一个 input 查询框，每一次 change 都会触发一个“ a 函数”\n要求\n1.此 input 框的 change 请求 在间隔 0.3s 内的过滤掉\n2.提供一个包装函数，可以对上述的“ a 函数”请求过滤做统一的封装\n```\n<input id=\"input\" />\n```","student_answer":" function a(value){\n        console.log('输入的内容')\n    }\n    const ipt =document.getElementById('input')\n    function debounce(fun,delay){\n        let timer;\n        return function(args){\n            const that=this\n            clearTimeout(timer)\n            timer=setTimeout(function(){\n                fun.call(that.args)\n            },delay)\n        }\n    }\n    const debounceInput=debounce(a,300)\n    ipt.addEventListener('change',function(e){\n        debounceInput(e.target.value)\n    })"}]