[{"title":"实现发布订阅模式","questions_id":"aihpv-1ru212-wun87-0hli3","json_path":"aihpv-1ru212-wun87-0hli3.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"现在有一个类 \n\n```\nclass Watch{\n  on(){\n   // 实现该方法逻辑\n  }\n  emit(){\n   // 实现该方法逻辑 \n  }\n}\n\n//调用示例如下：\nconst w1 = new Watch();\nw1.on('www',(options) => {\n  console.log(options)\n});\nw1.emit('www','success');\n\n// 最后的打印结果是  success\n\n```\n\n请实现要求的逻,可以对该类进行任意修改","student_answer":"class Watch {\n  constructor() {\n      this.store = {}\n  }\n  on(n, fn) {\n      if (this.store[n]) {\n          this.store[n].push(fn)\n      } else {\n          this.store[n] = [fn]\n      }\n  }\n  emit(a, b) {\n      this.store[a].forEach((item) => {\n          item(b)\n      })\n  }\n}\nconst w1 = new Watch();\nw1.on('www', (options) => {\n  console.log(options)\n})\nw1.on('www', (options) => {\n  console.log(options)\n})\nw1.emit('www', 'success')"},{"title":"async配合transition实现自定义动画","questions_id":"bqq54a-jly2z9-m9fg7pj-oio193","json_path":"bqq54a-jly2z9-m9fg7pj-oio193.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"html结构\n```html\n<div id=\"box\"></div>\n```\ncss样式\n```css\n#box{\n  width:100px; height:100px; background-color:red; border-radius:50%; transition:transform 0.5s;\n}\n```\njavaScript代码\n```js\n        const oBox = document.getElementById('box');\n        oBox.addEventListener('transitionend',()=>{\n            let {x,y} = oBox;\n            moveTo.reslove({x,y});\n        },false);\n        function moveTo(x,y){\n            return new Promise((reslove,reject)=>{\n                moveTo.reslove = reslove;\n                oBox.x = x;\n                oBox.y = y;\n                oBox.style.transform = `translate(${x}px,${y}px)`;\n            })\n        }\n```\n\n补全以上代码，使点击oBox后，使oBox走出一个  W 的轨迹（使用async函数实现），并简单写出整体的代码思路。","student_answer":"const oBox = document.getElementById('box');\n  oBox.addEventListener('transitionend',()=>{\n      let {x,y} = oBox;\n      moveTo.reslove({x,y});\n  },false);\nfunction moveTo(x,y){\n    return new Promise((reslove,reject)=>{\n        moveTo.reslove = reslove;\n        oBox.x = x;\n        oBox.y = y;\n        oBox.style.transform = `translate(${x}px,${y}px)`;\n    })\n}\nvar aBtns = document.getElementsByTagName('button');\nvar globalReslove = null;\noBox.addEventListener('transitionend',()=>{\n    globalReslove()\n})\noBtn.onclick=async()=>{\n\tawait moveTo(0,0)\n   await moveTo(100,300)\n   await moveTo(200,0)\n}\n"},{"title":"输入的reduce方法","questions_id":"zyocwi-drka9-kx8vv-blrmw9p","json_path":"zyocwi-drka9-kx8vv-blrmw9p.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"现在有一个数组如下：\n```js\n    const car = [\n            {\n                groupName:'水果',\n                type:[\n                    {\n                        name:'苹果',\n                        price:10\n                    },\n                    {\n                        name:'橘子',\n                        price:40\n                    },\n                    {\n                        name:'香蕉',\n                        price:90\n                    }\n                ]\n            },\n            {\n                groupName:'蔬菜',\n                type:[\n                    {\n                        name:'芹菜',\n                        price:10\n                    },\n                    {\n                        name:'菠菜',\n                        price:15\n                    },\n                    {\n                        name:'土豆',\n                        price:8\n                    }\n                ]\n            }\n        ]\n```\n\n根据上述数据，编写一个函数，该函数(computedPrice)接收上述的数据作为参数，返回一个对象，请输入用数组的reduce方法实现。对象的格式如下\n\n```js\n       {\n            allPrice:所有商品的总价格,\n            group:[\n                {\n                    typeName:'水果',\n                    price:所有水果的总价格\n                },\n                {\n                    typeName:'蔬菜',\n                    price:所有蔬菜的总价格\n                }\n            ]\n        } \n```  ","student_answer":"function priceSum(sum,item){\n   return sum+item.price\n }\nlet a=car.reduce((total,cur,index,car)=>{\n  //  console.log(total)\n     let p=cur.type.reduce(priceSum,0)\n     total.group.push({typeName:cur.groupName,price:p})\n     total.allPrice+=p\n     return total\n },{allPrice:0,group:[]})\nconsole.log(a)"},{"title":"完成 convert(list) 函数，实现将 list 转为 tree","questions_id":"lahic9-5l9ax7-2c5a09-ukz1o","json_path":"lahic9-5l9ax7-2c5a09-ukz1o.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"\n```\n\n/**\n * @param list {object[]}, \n * @param parentKey {string}\n * @param currentKey {string}\n * @param rootValue {any}\n * @return object\n */\nfunction convert(list, parentKey, currentKey, rootValue) {\n  let tree = {}\n    \n  return tree\n}\n\n接收\nconst list = [\n  {\n    \"id\": 19,\n    \"parentId\": 0,\n  },\n  {\n    \"id\": 18,\n    \"parentId\": 16,\n  },\n  {\n    \"id\": 17,\n    \"parentId\": 16,\n  },\n  {\n    \"id\": 16,\n    \"parentId\": 0,\n  }\n];\n\n返回\nconst result = convert(list, 'parentId', 'id', 0);\nconst tree = {\n  \"id\": 0,\n  \"children\": [\n    {\n      \"id\": 19,\n      \"parentId\": 0\n    },\n    {\n      \"id\": 16,\n      \"parentId\": 0,\n      \"children\": [\n        {\n          \"id\": 18,\n          \"parentId\": 16\n        },\n        {\n          \"id\": 17,\n          \"parentId\": 16\n        }\n      ]\n    }\n  ]\n}\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"\n//数组转树\n// list 数组数据源 ,key 对应父节点id字符串\narrayTransTree: function(list ,key) {\n    var tree = list.filter(function(parent) {\n        var branchArr = list.filter(function(child) {\n            return parent.id == child[key];\n        });\n         parent.nodes = [];\n        if (branchArr.length > 0) {\n            parent.nodes = branchArr;\n        }\n        return parent[key] == \"\";\n    });\n    return tree;\n    },\t\n\n}\n\nvar tree = [{\n    id:\"parent\",\n    parentId:\"\",\n    name:\"一级节点\",\n    childs:[{\n        id:\"child1\",\n        parentId:\"parent\",\n        name:\"一级节点\",\n        childs:[]\n    },{\n        id:\"child2\",\n        parentId:\"parent\",\n        name:\"一级节点\",\n        childs:[]\n    }]\n}]\nvar arr = pub.treeTransArray(tree,'childs'); //输出转换后数组\nconsole.log(arr);\nvar _tree = pub.arrayTransTree(arr,'parentId');//输出转换后树\nconsole.log(_tree);"}]