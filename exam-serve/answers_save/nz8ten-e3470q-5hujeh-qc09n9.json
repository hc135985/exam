[{"title":"vue基础知识","questions_id":"00o5nwy-qw7jj-ko6qkb-4uwrhv","json_path":"00o5nwy-qw7jj-ko6qkb-4uwrhv.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 谈谈Vue中v-for指令里key的作用？","student_answer":"高效的更新虚拟DOM"},{"title":"Vue基础知识","questions_id":"05snch-6eq8dn-szfd6q-t34nld","json_path":"05snch-6eq8dn-szfd6q-t34nld.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 控制元素显示隐藏的指令v-if与v-show之间的区别及适用场景？","student_answer":"v-if根据表达式的真假值，切换元素的 display CSS 属性，显示隐藏是将dom元素整个添加或删除\nv-show隐藏则是根据表达式的值的真假条件渲染元素。为该元素添加css的display:none，dom元素还在。在切换时元素及它的数据绑定 / 组件被销毁并重建。\n都是当条件变化时该指令触发过渡效果。"},{"title":"vue自定义指令","questions_id":"6ivrh-g7kp8a-2gixkg-p117t","json_path":"6ivrh-g7kp8a-2gixkg-p117t.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"## 阅读如下代码，写出代码的功能，输入和输出\n```js\nVue.filter('formatDate', function(value){\n  let date = new Date();\n  date.setTime(value);\n  let year = date.getFullYear(),\n      month = (date.getMonth() + 1).toString().padStart(2, '0'),\n      day = date.getDate().toString().padStart(2, '0'),\n      hour = date.getHours().toString().padStart(2, '0'),\n      min = date.getMinutes().toString().padStart(2, '0'),\n      sec = date.getSeconds().toString().padStart(2, '0');\n  return `${year}-${month}-${day} ${hour}:${min}:${sec}`\n});\n```","student_answer":" import Vue from 'vue'\n        Vue.filter('formatDate', function(value，fmt) {\n            let date = new Date(value);\n            let o = {\n                'M+': date.getMonth() + 1,\n                'd+': date.date(),\n                'h+': date.getHours(),\n                'm+': date.getMinutes(),\n                's+': date.getSeconds(),\n                'q+': Math.floor((date.getMonth() + 3) / 3),\n                'S': date.getMilliseconds()\n            };\n            if (/(y+)/.test(fmt)) {\n                fmt = fmt.replace(RegExp.$1, (getDate.getFullYear() + '').substr(4 - RegExp.$1.length))\n            }\n            for (let k in o) {\n                if (new RegExp('(' + k + ')').test(fmt)) {\n                    fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length)))\n                }\n            }\n            return fmt;\n        });"},{"title":"使用async函数实现多张图片的依次加载（第一张加载完之后才能加载第二张）","questions_id":"fl7dll-xh6eo-hpri8a-edulg","json_path":"fl7dll-xh6eo-hpri8a-edulg.json","subject_text":"组件化开发(vue)","subject_id":"1psw2b-cy7o07","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"## 使用async函数实现多张图片的依次加载（第一张加载完之后才能加载第二张）\n\n```js\n// 封装加载图片的promise  \nlet loadImg = (src)=>{\n    return new Promise((resolve, reject)=>{\n        // write your code here\n    })\n}   \nconst imgs = ['url1', 'url2', 'url3'];\n// 依次加载图片\nasync function fSync(imgs){\n   // write your code here\n}\n\nfSync(imgs);\n```","student_answer":"var imgUrlArr = [\n            'imgUrl1',\n            'imgUrl2'\n        ];\nfunction preLoadImg(imgSrcUrls, callback) {\n            //先对imgSrcUrls进行判断，是否是数组，若不是需要先将其转化为数组\n            var imgSrcUrls = (imgSrcUrls instanceof Array) ? imgSrcUrls : [imgSrcUrls];\n            var imgArr = []; //多个变量声明建议这种写法\n            loadCount = 0;\n            imgArrLength = imgSrcUrls.length;\n            //\tfunction getLoadCount() {}\n            for (var i = 0; i < imgArrLength; i++) {\n                newImgUrls[i] = new Image();\n                newImgUrls[i].src = newImgUrls[i];\n                newImgUrls[i].onload = function() {\n                    loadCount++;\n                    if (loadCount === imgArrLength) { //此时图片已经加载完成。可以处理回调函数\n                        callback();\n                    }\n                }\n                newImgUrls[i].onerror = function() {\n                    //处理无法加载成功时的处理，如用一张加载失败的图片代替显示不了的图片\n                    newImgUrls[i].src = '../images/logoError.png'; //注意图片的路径，使用小尺寸图片\n                    newImgUrls[i].onerror = null; //控制不要一直跳动\n                }\n            }\n        }"}]