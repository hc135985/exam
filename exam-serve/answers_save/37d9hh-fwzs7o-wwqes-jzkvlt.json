[{"title":"commonjs规范","questions_id":"ayf32j-5kv76-qvfqh-cigaoo","json_path":"ayf32j-5kv76-qvfqh-cigaoo.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"请简述node环境下的commonjs规范（说出如何导出模块，如何引入模块，如何创建模块）？","student_answer":"module.exports.方法名 =()=>{} //导出模块；\nrequire(\"路径\") //引入模块；\n用require()可以创建一个模块，如 let target = require(\"路径\")"},{"title":"let和var的区别","questions_id":"h7f6hq-cezl0g-fyu3o-6onwjf","json_path":"h7f6hq-cezl0g-fyu3o-6onwjf.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"在声明变量的时候，使用`let`和`var`有什么区别呢？","student_answer":"//var 声明的变量具有变量提升，let 声明的变量不会提升；\n//let 声明的变量有块级作用域，var 没有；\n//var 可以重复声明一个变量，let不可以，let重复声明会报错；\n//let 具有“暂时性死区”的性质，及花括号外部无法调用内部let声明的变量；var 没有这一性质；"},{"title":"解构赋值和数组的map方法","questions_id":"izvfy-572mw-thxrmm-7aba5s","json_path":"izvfy-572mw-thxrmm-7aba5s.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"如下：是一段html结构\n```   \n    <ul>\n        <li key=\"1\"></li>\n        <li key=\"2\"></li>\n        <li key=\"3\"></li>\n        <li key=\"4\"></li>\n    </ul>\n```\n加载一段对应的javaScript代码\n\n```\n        let oUl = document.getElementsByTagName('ul')[0];\n        let li = document.getElementsByTagName('li');\n        const {map,forEach} = [];\n        li = map.call(li,item=>{\n            let key = 2 * item.getAttribute('key') - 1;\n            item.setAttribute('key',key);\n            return item;\n        });\n        oUl.innerHTML = '';\n        forEach.call(li,item=>{\n            oUl.appendChild(item);\n        })\n```\n\n请结合html和javaScript描述出这段代码的运行效果，并给每句代码添加注释，在注释中指明该句代码的含义","student_answer":"html结构\n<ul>\n\t<li key=\"1\"></li>\n\t<li key=\"2\"></li>\n\t<li key=\"3\"></li>\n\t<li key=\"4\"></li>\n</ul>\njs代码\n//获取ul节点\nlet oUl = document.getElementsByTagName('ul')[0];\n\t\t\t//获取ul下的所有li\n        let li = document.getElementsByTagName('li');\n\t\t\t//解构获取数组下的map与forEach方法\n        const {map,forEach} = [];\n\t\t\t//用map方法循环所有的li\n        li = map.call(li,item=>{\n          \t\t//定义一个变量key， 把每一项的获取的自定义属性key乘以2再减去1所得到的值赋给key;\n            let key = 2 * item.getAttribute('key') - 1;\n          \t\t//给每一项的li设置自定义属性key 值为变量key\n            item.setAttribute('key',key);\n          \t\t//最后返回一个数组里面是处理后的li \n            return item;\n        });\n\t\t\t//把ul的内容清空\n        oUl.innerHTML = '';\n\t\t\t//循环li的这个数组\n        forEach.call(li,item=>{\n          \t\t//再把每一项li追加到ul里\n            oUl.appendChild(item);\n        })\n\t运行效果：最后ul里的li的自定义属性key会改变依次是1,3,5,7。"},{"title":"async配合transition实现自定义动画","questions_id":"bqq54a-jly2z9-m9fg7pj-oio193","json_path":"bqq54a-jly2z9-m9fg7pj-oio193.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"代码补全","questions_type_id":"fwf0t-wla1q","questions_stem":"html结构\n```html\n<div id=\"box\"></div>\n```\ncss样式\n```css\n#box{\n  width:100px; height:100px; background-color:red; border-radius:50%; transition:transform 0.5s;\n}\n```\njavaScript代码\n```js\n        const oBox = document.getElementById('box');\n        oBox.addEventListener('transitionend',()=>{\n            let {x,y} = oBox;\n            moveTo.reslove({x,y});\n        },false);\n        function moveTo(x,y){\n            return new Promise((reslove,reject)=>{\n                moveTo.reslove = reslove;\n                oBox.x = x;\n                oBox.y = y;\n                oBox.style.transform = `translate(${x}px,${y}px)`;\n            })\n        }\n```\n\n补全以上代码，使点击oBox后，使oBox走出一个  W 的轨迹（使用async函数实现），并简单写出整体的代码思路。","student_answer":"html结构\n\n<div id=\"box\"></div>\ncss样式\n\n#box{\n  width:100px; height:100px; background-color:red; border-radius:50%; transition:transform 0.5s;\n}\njavaScript代码\n\n        const oBox = document.getElementById('box');\n        oBox.addEventListener('transitionend',()=>{\n            let {x,y} = oBox;\n            moveTo.reslove({x,y});\n        },false);\n        function moveTo(x,y){\n            return new Promise((reslove,reject)=>{\n                moveTo.reslove = reslove;\n                oBox.x = x;\n                oBox.y = y;\n                oBox.style.transform = `translate(${x}px,${y}px)`;\n            })\n          //实现w走位\n         oBox.addEventListener('click',async () => { \n       \t\t\tawait move(0,0);\n       \t\t\tawait move(100,200);\n       \t\t\tawait move(200,0);\n       \t\t\tawait move(300,200);\n       \t\t\tawait move(400,0);\n    })\n        }"},{"title":"输入的reduce方法","questions_id":"zyocwi-drka9-kx8vv-blrmw9p","json_path":"zyocwi-drka9-kx8vv-blrmw9p.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"现在有一个数组如下：\n```js\n    const car = [\n            {\n                groupName:'水果',\n                type:[\n                    {\n                        name:'苹果',\n                        price:10\n                    },\n                    {\n                        name:'橘子',\n                        price:40\n                    },\n                    {\n                        name:'香蕉',\n                        price:90\n                    }\n                ]\n            },\n            {\n                groupName:'蔬菜',\n                type:[\n                    {\n                        name:'芹菜',\n                        price:10\n                    },\n                    {\n                        name:'菠菜',\n                        price:15\n                    },\n                    {\n                        name:'土豆',\n                        price:8\n                    }\n                ]\n            }\n        ]\n```\n\n根据上述数据，编写一个函数，该函数(computedPrice)接收上述的数据作为参数，返回一个对象，请输入用数组的reduce方法实现。对象的格式如下\n\n```js\n       {\n            allPrice:所有商品的总价格,\n            group:[\n                {\n                    typeName:'水果',\n                    price:所有水果的总价格\n                },\n                {\n                    typeName:'蔬菜',\n                    price:所有蔬菜的总价格\n                }\n            ]\n        } \n```  ","student_answer":"const car = [\n            {\n                groupName:'水果',\n                type:[\n                    {\n                        name:'苹果',\n                        price:10\n                    },\n                    {\n                        name:'橘子',\n                        price:40\n                    },\n                    {\n                        name:'香蕉',\n                        price:90\n                    }\n                ]\n            },\n            {\n                groupName:'蔬菜',\n                type:[\n                    {\n                        name:'芹菜',\n                        price:10\n                    },\n                    {\n                        name:'菠菜',\n                        price:15\n                    },\n                    {\n                        name:'土豆',\n                        price:8\n                    }\n                ]\n            }\n        ]\n let num = (car)=>{\n   if(car){\n     let sum1 = [];\n     let sum2 = [];\n     \n     car.forEach((el)=>{\n       if(el.groupName===\"水果\"){\n         el.type.forEach((item)=>{\n           sum1.push(item.price)\n         })\n       }\n       if(el.groupName===\"蔬菜\"){\n         el.type.forEach((item)=>{\n           sum2.push(item.price)\n         })\n       }\n     })\n   \n     let getSum = (num,next)=>{\n       return num+next\n     }\n     let sum3 = sum1.reduce(getSum)+sum2.reduce(getSum)\n     return `{\n            allPrice: ${sum3},\n            group: [\n                {\n                    typeName: '水果',\n                    price: ${sum1.reduce(getSum)}\n                },\n                {\n                    typeName: '蔬菜',\n                    price: ${sum2.reduce(getSum)}\n                }\n            ]\n        }`\n   }\n }\n num(car)"}]