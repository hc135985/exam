[{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"let number = 0;\n function tiao(num,arr){\n     if(num === 0){\n         arr = [];\n     }\n     var i = 1;\n     while(i<3){\n         if(num + i<=10){\n             let narr = [...arr];\n             narr.push(i);\n             if(num + i === 10){\n                 number ++ ;\n                 console.log(number,narr);\n             }else{\n                 tiao(num + i,narr);\n             }\n         }\n         i++;\n     }\n }\n tiao(0);\n"},{"title":"大小文件读取","questions_id":"z9ndnc-qhzc6-wb5vju-0pvnzk","json_path":"z9ndnc-qhzc6-wb5vju-0pvnzk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个方法适配大小文件的读取，限定值2M","student_answer":"let fs = require(\"fs\");\nlet path = require(\"path\");\n\nlet jd = path.join(__dirname,\"文件\"); // 返回当前的绝对路径\nfunction fn(jd){\n    let size = fs.statSync(jd); // 获取文件信息\n    let mb = size.size / 1024 / 1024;\n    if(mb > 2){\n        console.log(\"这是大文件\");\n    }else{\n        console.log(\"这是小文件\");\n    }\n}\nfn(jd);"},{"title":"实现多维数组转换为一维数组","questions_id":"60gn1-9nj3mi-hv4xz-t6ecp","json_path":"60gn1-9nj3mi-hv4xz-t6ecp.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个函数可以使得n维数组转换为1维数组，输出","student_answer":"let arr = [1,2,3,[4,5,[6,7,[8]]]]//多维数组\nlet carr (arr)= {\n  while (arr.some(val => Array.isArray(val))) { // some循环数组 判断每一项是否为一个数组\n         arr = [].concat(...arr); // 用 [].concat合并结构后的数组\n      }\n  return arr; // 结果\n}\nconsole.log(carr(arr))"},{"title":"实现一个评星方法","questions_id":"tak6bp-2bpj3-xh6jpg-elkb8u","json_path":"tak6bp-2bpj3-xh6jpg-elkb8u.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"实现一个评星方法\n说明\n* 可根据传入的评分和总数，返回评星结果（用 ★ 和 ☆ 描述）\n* 评分必选项，四舍五入，总数可选，大于0的整数，默认为5\n* 对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回'errror'\n示例\n```\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"function getRate(col, nocol) {\n            var reg = /.*\\..*/;\n            if (col > nocol || col < 0 || reg.test(nocol)) {\n                console.log(\"error\")\n            } else{\n                if(col < 5 && nocol == \"\"){\n                    col = 5;\n                }\n                for (var i = 0; i < col; i++) {\n                    cli = document.createElement(\"li\");\n                    cli.innerHTML = \"★\";\n                    lis.append(cli);\n                }\n                for (var j = 0; j < nocol - col; j++) {\n                    ncli = document.createElement(\"li\");\n                    ncli.innerHTML = \"☆\";\n                    lis.append(ncli);\n                }\n            }\n        }\n        getRate(5, 8)"}]