[{"title":"解构赋值和数组的map方法","questions_id":"izvfy-572mw-thxrmm-7aba5s","json_path":"izvfy-572mw-thxrmm-7aba5s.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"代码阅读题","questions_type_id":"br9d6s-wh46i","questions_stem":"如下：是一段html结构\n```   \n    <ul>\n        <li key=\"1\"></li>\n        <li key=\"2\"></li>\n        <li key=\"3\"></li>\n        <li key=\"4\"></li>\n    </ul>\n```\n加载一段对应的javaScript代码\n\n```\n        let oUl = document.getElementsByTagName('ul')[0];\n        let li = document.getElementsByTagName('li');\n        const {map,forEach} = [];\n        li = map.call(li,item=>{\n            let key = 2 * item.getAttribute('key') - 1;\n            item.setAttribute('key',key);\n            return item;\n        });\n        oUl.innerHTML = '';\n        forEach.call(li,item=>{\n            oUl.appendChild(item);\n        })\n```\n\n请结合html和javaScript描述出这段代码的运行效果，并给每句代码添加注释，在注释中指明该句代码的含义","student_answer":" //获取ul \nlet oUl = document.getElementsByTagName('ul')[0];\n       //获取li\n        let li = document.getElementsByTagName('li');\n       //从数组中解构出map,forEach方法\n        const {map,forEach} = [];\n       //遍历li，并修改this指向，指向li\n        li = map.call(li,item=>{\n          //声明一个变量key,并将item上的‘key’属性*2后减1后赋值给key;\n            let key = 2 * item.getAttribute('key') - 1;\n            //给每个li设置key属性，属性值为变量key\n            item.setAttribute('key',key);\n            //返回item\n            return item;\n        });\n          //把OUL的innerHTML设置为空\n        oUl.innerHTML = '';\n       //遍历li,修改this指向\n        forEach.call(li,item=>{\n          //把item追加到oul里\n            oUl.appendChild(item);\n        })\n//这段代码的执行结果是，ul里的li经过遍历并重新设置属性和属性值后，又重新追加到ul中"},{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"\nfunction getFib(n) {\n\tvar fibo = [];\n\tvar i = 0;\n\twhile(i <= n) {\n\t\tif (i <=1) {\n\t\t\tfibo.push(i);\n\t\t} else {\n\t\t\tfibo.push(fibo[i - 1] + fibo[i - 2]);\n\t\t}\n\t\ti++;\n\t}\n\treturn fibo[n];\n}\nconsole.log(getFib(10))\n\n"},{"title":"大小文件读取","questions_id":"z9ndnc-qhzc6-wb5vju-0pvnzk","json_path":"z9ndnc-qhzc6-wb5vju-0pvnzk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个方法适配大小文件的读取，限定值2M","student_answer":"const fs = require('fs');\nclass readFile {\n    constructor(url) {\n        this.url = url;\n        this.init()\n    }\n    init() {\n        let size = fs.statSync(this.url).size;//b 1kb=1024b\n        console.log(size)\n        if (size > 2000) {\n            // 默认为大文件\n            this.readStream()\n        } else {\n            // 默认为小文件\n            this.readSmallFile()\n        }\n    }\n    readStream() {\n        let rs = fs.createReadStream(this.url);// 可读流\n        let ws = fs.createWriteStream('./big/' + this.url);\n        rs.pipe(ws)\n    }\n    readSmallFile() {\n        fs.readFile(this.url, 'utf-8', (err, con) => {\n            if (err) throw err;\n            fs.writeFileSync('./small/' + this.url, con)\n        })\n    }\n}\nnew readFile('index.html')\nnew readFile('fs.mp4')"},{"title":"输入的reduce方法","questions_id":"zyocwi-drka9-kx8vv-blrmw9p","json_path":"zyocwi-drka9-kx8vv-blrmw9p.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"现在有一个数组如下：\n```js\n    const car = [\n            {\n                groupName:'水果',\n                type:[\n                    {\n                        name:'苹果',\n                        price:10\n                    },\n                    {\n                        name:'橘子',\n                        price:40\n                    },\n                    {\n                        name:'香蕉',\n                        price:90\n                    }\n                ]\n            },\n            {\n                groupName:'蔬菜',\n                type:[\n                    {\n                        name:'芹菜',\n                        price:10\n                    },\n                    {\n                        name:'菠菜',\n                        price:15\n                    },\n                    {\n                        name:'土豆',\n                        price:8\n                    }\n                ]\n            }\n        ]\n```\n\n根据上述数据，编写一个函数，该函数(computedPrice)接收上述的数据作为参数，返回一个对象，请输入用数组的reduce方法实现。对象的格式如下\n\n```js\n       {\n            allPrice:所有商品的总价格,\n            group:[\n                {\n                    typeName:'水果',\n                    price:所有水果的总价格\n                },\n                {\n                    typeName:'蔬菜',\n                    price:所有蔬菜的总价格\n                }\n            ]\n        } \n```  ","student_answer":"   \nconst car = [{\n        groupName: '水果',\n        type: [{\n                name: '苹果',\n                price: 10\n            },\n            {\n                name: '橘子',\n                price: 40\n            },\n            {\n                name: '香蕉',\n                price: 90\n            }\n        ]\n    },\n    {\n        groupName: '蔬菜',\n        type: [{\n                name: '芹菜',\n                price: 10\n            },\n            {\n                name: '菠菜',\n                price: 15\n            },\n            {\n                name: '土豆',\n                price: 8\n            }\n        ]\n    }\n]\n\nlet arr = [];\ncar.map(item => {\n    //   console.log(item)\n    var sum = item.type.reduce(function (prev, cur) {\n        return cur.price + prev;\n    }, 0);\n    console.log(sum);\n    arr.push(sum);\n    console.log(arr);\n\n    var sum1 = arr.reduce(function (prev, cur, index, arr) {\n        return prev + cur;\n  }, 0)\n\n    console.log(sum1);\n\n    return obj={\n       \n            allPrice:sum1,\n            group:[\n                {\n                    typeName:'水果',\n                    price:arr[0]\n                },\n                {\n                    typeName:'蔬菜',\n                    price:arr[1]\n                }\n            ]\n        } \n   \n       console.log(obj)\n});\n\n\n\n      \n"}]