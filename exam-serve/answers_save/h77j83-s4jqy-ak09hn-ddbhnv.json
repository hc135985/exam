[{"title":"匿名自执行函数的应用","questions_id":"vh80e-3d3g3o-6hy47e-ib2x4c","json_path":"vh80e-3d3g3o-6hy47e-ib2x4c.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"heinan","user_id":"fdjfr-msxp8a","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"代码如下：\n```js\nfor (var i = 0; i < 5; i++) {\n    setTimeout(function () {\n        console.log(i)\n    })\n}\n输出\n5\n5\n5\n5\n5\n```\n修改上面代码，打印结果要求为：0,1，2，3，4","student_answer":"for (let i = 0; i < 5; i++) {\n    setTimeout(function () {\n        console.log(i)\n    })\n}"},{"title":"react生命周期","questions_id":"xt05yo-prna5g-f7zqo-ltl5rh","json_path":"xt05yo-prna5g-f7zqo-ltl5rh.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"8sc5d7-7p5f9e-cb2zii-ahe5i","exam_name":"周考1","user_name":"dingshaoshan","user_id":"ypay2t-7uxsd","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"# react常用生命周期图\n\n## 请在 “其他“ 中查看图片。 \n \n\n\n如图是react常用生命周期图，请阅读图，并在1，2，3，4处填写对应的生命周期","student_answer":"1、shouldComponentUpdate\n2、componentDidMount\n3、componentDidUpdate\n"},{"title":"多种组件创建方式及其区别？","questions_id":"cbssqf-16avt7-qwk8k-ufilrc","json_path":"cbssqf-16avt7-qwk8k-ufilrc.json","subject_text":"渐进式开发(react)","subject_id":"fyu3ln-azjkie","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"chenmanjie","user_id":"w6l6n-cbvl6s","questions_type_text":"简答题","questions_type_id":"774318-730z8m","questions_stem":"## 多种组件创建方式及其区别？","student_answer":"函数式定义的无状态组件\nes5原生方式React.createClass定义的组件\nes6形式的extends React.Component定义的组件\n\n区别：\n1.函数组件特点\n①组件不会被实例化，整体渲染性能得到提升\n②组件不能访问this对象\n③组件无法访问生命周期的方法\n④无状态组件只能访问输入的props，同样的props会得到同样的渲染结果，不会有副作用\n2.React.createClass特点：\n创建有状态的组件\nReact.createClass会自绑定函数方法（不像React.Component只绑定需要关心的函数）导致不必要的性能开销，增加代码过时的可能性。\nReact.createClass的mixins不够自然、直观；React.Component形式非常适合高阶组件（Higher Order Components–HOC）,它以更直观的形式展示了比mixins更强大的功能，并且HOC是纯净的JavaScript，不用担心他们会被废弃。HOC可以参考无状态组件(Stateless Component) 与高阶组件。\n3.React.Component组件\n是React目前极为推荐的创建有状态组件的方式，最终会取代React.createClass形式；相对于 React.createClass可以更好实现代码复用。\n4.React.createClass与React.Component区别\n函数this自绑定\nReact.createClass创建的组件，其每一个成员函数的this都有React自动绑定，任何时候使用，直接使用this.method即可，函数中的this会被正确设置。\nReact.Component创建的组件，其成员函数不会自动绑定this，需要开发者手动绑定，否则this不能获取当前组件实例对象。\n组件初始状态state的配置不同\nReact.createClass创建的组件，其状态state是通过getInitialState方法来配置组件相关的状态；\nReact.Component创建的组件，其状态state是在constructor中像初始化组件属性一样声明的。\nReact.createClass在创建组件时可以使用mixins属性，以数组的形式来混合类的集合。React.Component暂不不支持Mixins"},{"title":"分别使用DOM0级DOM2级给一个DIV绑定事件","questions_id":"1gsxn-k09c2j-gq8peo-sohe9","json_path":"1gsxn-k09c2j-gq8peo-sohe9.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"分别使用DOM0级DOM2级给一个button绑定事件，并且描述这两种方式的区别","student_answer":"DOM0级事件绑定的特点：\n1、DOM0级事件只能触发事件冒泡阶段不能触发事件捕获阶段。\n2、同一元素绑定相同的事件，后面的会覆盖前面的。\n3.this指的是事件流传播到的这个元素，就元素本身。\nvar box = document.getElementById('box');\nbox.onclick=function(){\nconsole.log(1)\n}\n\nDOM2级事件绑定的特点：\n1、对于精确的元素不区分事件捕获和事件冒泡，事件的执行顺序是按照绑定顺序来的。\n2、同一个元素绑定相同的事件，后面的不会覆盖前面的。因为DOM2级事件绑定不是给元素添加属性是直接添加的事件。等同于给一个元素绑定了多个事件。\n\nvar box1 = document.getElementById('box1');\n\nbox1.addEventListener(\"click\",function(){\n\tconsole.log(\"c\");\n},false);\nbox1.addEventListener(\"click\",function(){\n\tconsole.log(\"D\");\n},false);\nbox1.addEventListener(\"click\",function(){\n\tconsole.log(\"E\");\n},false);"},{"title":"最少两种方式实现点击每个li都弹出下标","questions_id":"puaqas-1modca-2y04jh-brcz59g","json_path":"puaqas-1modca-2y04jh-brcz59g.json","subject_text":"javaScript上","subject_id":"fqtktr-1lq5u","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"<ul id=”test”>\n    <li>这是第一条</li>\n    <li>这是第二条</li>\n    <li>这是第三条</li>\n</ul>","student_answer":"var ulObj = document.getElementById(\"myUl\"); \nulObj.onclick = function (event) { \n  var tg = event.target; \n  var liArray = ulObj.getElementsByTagName(\"li\"); \n  for (var i = 0; i < liArray.length; i++) { \n    if (liArray[i] === tg) { \n    alert(i + 1); \n    } \n  } \n}\n\n方式二\nvar liArray = document.getElementById(\"myUl\").getElementsByTagName(\"li\"); \nfor (var i = 0; i < liArray.length; i++) { \n  (function () { \n      var n = i; \n      liArray[i].onclick = function () { \n        alert(n + 1); \n      } \n\t})(i) \n}\n"}]