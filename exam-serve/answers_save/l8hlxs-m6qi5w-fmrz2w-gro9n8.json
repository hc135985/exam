[{"title":"实现发布订阅模式","questions_id":"aihpv-1ru212-wun87-0hli3","json_path":"aihpv-1ru212-wun87-0hli3.json","subject_text":"项目实战","subject_id":"94sjh6-lnlxe","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"现在有一个类 \n\n```\nclass Watch{\n  on(){\n   // 实现该方法逻辑\n  }\n  emit(){\n   // 实现该方法逻辑 \n  }\n}\n\n//调用示例如下：\nconst w1 = new Watch();\nw1.on('www',(options) => {\n  console.log(options)\n});\nw1.emit('www','success');\n\n// 最后的打印结果是  success\n\n```\n\n请实现要求的逻,可以对该类进行任意修改","student_answer":"\n\tconst eventProxy = {\n        // onObj 存放多个监听事件的对象\n        // oneObj 存放多个监听事件的对象,获取一次清空\n        onObj: {},\n        oneObj: {},\n        //监听事件\n        $on: function(key, fn) {\n            // 当前请求事件在对象中是否存在\n            //不存在 返回一个[]\n            if (this.onObj[key] === undefined) {\n                this.onObj[key] = [];\n            }\n            //将事件处理函数添加到对应的key\n            this.onObj[key].push(fn);\n        },\n        $once: function(key, fn) {\n    \n            if (this.oneObj[key] === undefined) {\n                this.oneObj[key] = [];\n            }\n    \n            this.oneObj[key].push(fn);\n        },\n        // 移除事件监听\n        $remove: function(key) {\n            this.onObj[key] = [];\n            this.oneObj[key] = [];\n        },\n        // 触发器或者发射器\n        $emit: function() {\n            let key, args;\n    \n            if (arguments.length == 0) {\n                return false;\n            }\n    \n            //trigger(\"update\",data1,data2,data3)\n    \n            // 获取trigger函数的arguments，得到类数组\n            // key 获取传参序列的第一项\n            key = arguments[0]; //onObj[arguments[0]\n            //类数组没有数组的slice,通过call改变this指向，让类数组继承数组的slice方法，完成截取功能\n            args = [].concat(Array.prototype.slice.call(arguments, 1)); //data1,data2,data3\n    \n            // console.log(this.onObj[key][0]())\n            if (this.onObj[key] !== undefined &&\n                this.onObj[key].length > 0) {\n                for (let i in this.onObj[key]) {\n                    // console.log(args)\n                    this.onObj[key][i].call(null, args);\n                }\n            }\n            if (this.oneObj[key] !== undefined &&\n                this.oneObj[key].length > 0) {\n                for (let i in this.oneObj[key]) {\n                    // null 继承 this.oneObj[key][i]函数并调用，参数是args\n                    this.oneObj[key][i].apply(null, args);\n                    // console.log(args)\n                    this.oneObj[key][i] = undefined;\n                }\n                this.oneObj[key] = [];\n            }\n        }\n    };\n    eventProxy.$on(\"update\", function(val) {\n        console.log(val)\n    })\n    eventProxy.$once(\"update\", function(val) {\n        console.log(val)\n    })\n    eventProxy.$emit(\"update\", 1, 2, 3)"},{"title":"实现多维数组转换为一维数组","questions_id":"60gn1-9nj3mi-hv4xz-t6ecp","json_path":"60gn1-9nj3mi-hv4xz-t6ecp.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个函数可以使得n维数组转换为1维数组，输出","student_answer":"let arr = [1,[2,[3,4]]]\nlet newArr = []\n\nlet OneArr = (arr) => {\n    for(let item of arr){\n        if(typeof item === 'object'){\n            OneArr(item)\n        }else{\n           newArr.push(item)\n        }\n    }\n    console.log(newArr)\n    return newArr\n}\nOneArr(arr)"},{"title":"完成 convert(list) 函数，实现将 list 转为 tree","questions_id":"lahic9-5l9ax7-2c5a09-ukz1o","json_path":"lahic9-5l9ax7-2c5a09-ukz1o.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"\n```\n\n/**\n * @param list {object[]}, \n * @param parentKey {string}\n * @param currentKey {string}\n * @param rootValue {any}\n * @return object\n */\nfunction convert(list, parentKey, currentKey, rootValue) {\n  let tree = {}\n    \n  return tree\n}\n\n接收\nconst list = [\n  {\n    \"id\": 19,\n    \"parentId\": 0,\n  },\n  {\n    \"id\": 18,\n    \"parentId\": 16,\n  },\n  {\n    \"id\": 17,\n    \"parentId\": 16,\n  },\n  {\n    \"id\": 16,\n    \"parentId\": 0,\n  }\n];\n\n返回\nconst result = convert(list, 'parentId', 'id', 0);\nconst tree = {\n  \"id\": 0,\n  \"children\": [\n    {\n      \"id\": 19,\n      \"parentId\": 0\n    },\n    {\n      \"id\": 16,\n      \"parentId\": 0,\n      \"children\": [\n        {\n          \"id\": 18,\n          \"parentId\": 16\n        },\n        {\n          \"id\": 17,\n          \"parentId\": 16\n        }\n      ]\n    }\n  ]\n}\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"function convert(list, parentKey, currentKey, rootValue) {\n    let tree = {\n        \"id\": rootValue,\n        \"children\": []\n    }\n    list.map(item => {\n        if(item.parentId === rootValue){\n            tree.children.push(item)\n        }\n    })\n    tree.children.map(item => {\n        list.map(items => {\n            if(item.id === items.parentId){\n                item.children=[]\n                return item.children.push(items)\n                \n            }\n        })\n        return tree\n    })\n    console.log(tree)\n    return tree\n  }"},{"title":"实现一个评星方法","questions_id":"tak6bp-2bpj3-xh6jpg-elkb8u","json_path":"tak6bp-2bpj3-xh6jpg-elkb8u.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"实现一个评星方法\n说明\n* 可根据传入的评分和总数，返回评星结果（用 ★ 和 ☆ 描述）\n* 评分必选项，四舍五入，总数可选，大于0的整数，默认为5\n* 对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回'errror'\n示例\n```\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"let func = (a, b) => {\n    let Astar = '★'\n    let Bstar = '☆'\n    let str = ''\n    b = b ? b : 5\n    if (b !== parseInt(b)) {\n        return 'error'\n    }else if (a < 0) {\n        return 'error'\n    }else if (a === undefined) {\n        return 'error'\n    }else if (a > b) {\n        return 'error'\n    }\n    a = Math.round(a)\n    let c = b-a;\n    for (var i = 0 ; i< a ; i++){\n        str += Astar\n    }\n    for (var i = 0 ; i< c ; i++){\n        str += Bstar\n    }\n    return str\n}\n\nfunc(3.4,8)"}]