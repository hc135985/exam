[{"title":"青蛙跳台阶","questions_id":"cy51s-cirofn-vxvrne-hgh3tk","json_path":"cy51s-cirofn-vxvrne-hgh3tk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"用js实现青蛙跳台阶，一共十个台阶，青蛙每次跳一个或者两个台阶，打印出所有可能的跳跃方法（例如：[1,1,1,1,1,1,1,1,1,1]/[2,2,2,2,2]/[1,1,1,1,1,1,1,1,2]）","student_answer":"解析问题\n如果只有一个台阶，即n=1，那么显然就一种跳发，f(n) = 1 (n=1)\n如果有两个台阶，即n=2,那么有两种跳发：一种是跳两次，每次跳1级；一种是跳一次，跳2级。f(n) = 2 (n=2)\n如果有台阶数大于等于3，即n>=3，那又该怎么跳？。我们可以逆序思维，假设我们第一跳是跳1级，那么，之后我们需要跳n-1级台阶，即f(n-1）；如果我们第一跳是跳2级，那么，，之后我们需要跳n-2级台阶，即f(n-2）。所以f(n)=f(n-1)+f(n-2)。 \n解析\nf(1) = 1;\nf(2) = 2;\nf(n) = f(n-1)+ f(n-2);\n3.运用递归的方法\nlong long forg_fun3_result(vector<long long>& r,int n)\n{\n    if(r[n]!=-1)\n        return r[n];\n\n    if(n >= 3)\n        r[n] = forg_fun3_result(r,n-1)+forg_fun3_result(r,n-2);\n\n\n    return r[n];\n}\nlong long forg_fun3(int n)\n{\n    if(n <= 0)\n        return 0;\n    if(n == 1)\n        return 1;\n    if(n ==2)\n       return 2;\n    vector<long long> r(n+1,-1);\n    r[0] = 0; \n    r[1] = 1;\n    r[2] = 2;\n    return forg_fun3_result(r,n);\n\n}\n\n"},{"title":"大小文件读取","questions_id":"z9ndnc-qhzc6-wb5vju-0pvnzk","json_path":"z9ndnc-qhzc6-wb5vju-0pvnzk.json","subject_text":"node基础","subject_id":"4pu32-vs796l","exam_id":"jpg8y9-zbzt7o-jpvuhf-fwnjvr","exam_name":"周考2","user_name":"w916peach","user_id":"axg8t2-oroeja","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个方法适配大小文件的读取，限定值2M","student_answer":"文件读取\nconst fs=require(\"fs\")\nconst path = require('path');\nconst sourcePath = path.join(__dirname, 'source', 'xiaoshuo.txt');  //当前文件路径\nconst targetPath = path.join(__dirname, 'target', 'xiaoshuo666.txt'); //准备复制的文件路径\n\n const copy = (sourcePath, targetPath) => {\n     fs.readFile(sourcePath, (error, context) => {\n        if (error) return console.error(error);   \n       fs.writeFile(targetPath, context, (error, result) => {\n           if (error) return console.error(error);\n             console.log(result)\n         })\n    })\n}\ncopy(sourcePath, targetPath)"},{"title":"实现多维数组转换为一维数组","questions_id":"60gn1-9nj3mi-hv4xz-t6ecp","json_path":"60gn1-9nj3mi-hv4xz-t6ecp.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"renyuliang","user_id":"bsz88g-071r5","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"封装一个函数可以使得n维数组转换为1维数组，输出","student_answer":" 方法一:使用join()\n         join() 方法用于把数组中的所有元素放入一个字符串，split() 方法用于把一个字符串分割成字符串数组。\n         var a = [1,3,4,5,[6,7,9],[2],[5]];\n         a = a.join(\",\").split(\",\"); \n         输出结果a=[1,3,4,5,6,7,9,2,5];\n方法二:使用toString()\n        toString() 方法可把一个逻辑值转换为字符串，并返回结果。\n        var a = [1,3,4,5,[6,7,9],[2],[5]];\n        a = a.toString().split(\",\");\n         输出结果a=[1,3,4,5,6,7,9,2,5];\n\n 方法三:空字符串\n         var a = [1,3,4,5,[6,7,9],[2],[5]];\n         a = (a+'').split(',');\n        输出结果a=[1,3,4,5,6,7,9,2,5];\n\n        其实以上的三种方法都是一个原理，就是先把数组转化为字符串，然后在对字符串进行操作，最终达到把多维数组中的数据转化为一维数组。\n"},{"title":"实现一个评星方法","questions_id":"tak6bp-2bpj3-xh6jpg-elkb8u","json_path":"tak6bp-2bpj3-xh6jpg-elkb8u.json","subject_text":"javaScript下","subject_id":"wl5yk-38c0g","exam_id":"ukmp9b-radddj-ogwdr-nw3ane","exam_name":"周考3","user_name":"liuyu","user_id":"kqpvys-hpzkdt","questions_type_text":"手写代码","questions_type_id":"v8i73-r8oai","questions_stem":"实现一个评星方法\n说明\n* 可根据传入的评分和总数，返回评星结果（用 ★ 和 ☆ 描述）\n* 评分必选项，四舍五入，总数可选，大于0的整数，默认为5\n* 对于评分为空或小于0、评分大于总数、总数小于0或总数非整数的情况，返回'errror'\n示例\n```\ngetRate(4); // ★★★★☆\ngetRate(4, 8); // ★★★★☆☆☆☆\ngetRate(3.4); //  ★★★☆☆\ngetRate(5, 2); // 'error'\ngetRate(-2); // 'error'\ngetRate(3, 5.5); // 'error'\n```\n\n\n\n\n\n\n\n\n\n\n\n","student_answer":"<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n <meta charset=\"UTF-8\">\n <title>demo of starof</title>\n <style>\n ul{padding:0;margin: 0;}\n li{list-style: none;}\n /*星星评分*/\n .scoremark{width:154px;position:relative;margin-top:50px;}\n .scoremark .score {\n  float: right;\n  display: block;\n  margin: 0 0 0 10px;\n  font-size: 18px;\n  line-height: 22px;\n  font-weight: bold;\n  color: #f70;\n }\n .scoremark .star {\n  float: right;\n  display: block;\n  position: relative;\n  width: 116px;\n  height: 20px;\n  background: url(img/star.png) no-repeat 0px -20px;\n }\n .scoremark .ystar {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 116px;\n  height: 20px;\n  background: url(img/star.png) no-repeat 0px 0px;\n }\n .scoremark .star ul {\n  width: 120px;\n  height: 20px;\n  position: absolute;\n  top: 0;\n  left: 0;\n }\n .scoremark .star ul:hover {\n  background: url(img/star.png) no-repeat 0px -20px;\n }\n .scoremark .star li {\n  float: left;\n  width: 24px;\n  height: 20px;\n }\n .scoremark .star li a {\n  display: block;\n  width: 24px;\n  height: 20px;\n  overflow: hidden;\n  text-indent: -9999px;\n  position: absolute;\n  z-index: 5;\n }\n .scoremark .star li a:hover {\n  background: url(img/star.png) no-repeat 0px 0px;\n  z-index: 3;\n  left: 0\n }\n .scoremark .star a.one-star {\n  left: 0;\n }\n .scoremark .star a.one-star:hover {\n  width: 24px\n }\n .scoremark .star a.two-stars {\n  left: 24px;\n }\n .scoremark .star a.two-stars:hover {\n  width: 48px\n }\n .scoremark .star a.three-stars {\n  left: 48px;\n }\n .scoremark .star a.three-stars:hover {\n  width: 72px\n }\n .scoremark .star a.four-stars {\n  left: 72px;\n }\n .scoremark .star a.four-stars:hover {\n  width: 96px\n }\n .scoremark .star a.five-stars {\n  left: 96px;\n }\n .scoremark .star a.five-stars:hover {\n  width: 120px;\n }\n .scoremark .tips {\n  position: absolute;\n  top: -28px;\n  left: 0;\n  width: 40px;\n  height: 21px;\n  color: #333;\n  line-height: 20px;\n  padding: 0 0 5px 0;\n  text-align: center;\n  background: url(img/ico.png) no-repeat;\n  z-index: 6;\n  font-size: 12px;\n }\n </style>\n <script src=\"http://code.jquery.com/jquery-2.2.4.min.js\" integrity=\"sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=\" crossorigin=\"anonymous\"></script>\n</head>\n<body>\n <div id=\"scoremark\" class=\"scoremark scores\">\n      <em class=\"score\">8.0</em>\n      <span class=\"star\">\n       <span class=\"ystar\" style=\"width:80%\"></span>\n       <ul>\n        <li><a href=\"javascript:void(0)\" data-name=\"很差\" class=\"one-star\">1</a></li>\n        <li><a href=\"javascript:void(0)\" data-name=\"较差\" class=\"two-stars\">2</a></li>\n        <li><a href=\"javascript:void(0)\" data-name=\"一般\" class=\"three-stars\">3</a></li>\n        <li><a href=\"javascript:void(0)\" data-name=\"较好\" class=\"four-stars\">4</a></li>\n        <li><a href=\"javascript:void(0)\" data-name=\"很好\" class=\"five-stars\">5</a></li>\n       </ul>\n      </span>\n      <div style=\"left: 0px; display: none;\" class=\"tips\"></div>\n   </div>\n<script>\n//星星评分\nstarScore($(\".scoremark\"));\nfunction starScore(star){\n star.find(\".star ul li a\").mouseenter(function(){\n  var txt = $(this).attr(\"data-name\");\n  var x = $(this).parent(\"li\").index();\n  star.find(\".tips\").html(txt).css(\"left\",-6+x*24).show();\n });\n star.find(\".star ul li a\").mouseleave(function(){\n  star.find(\".tips\").html(\"\").css(\"left\",0).hide();\n }); \n}\n</script>\n</body>\n</html>"}]